!iflang [english]


!begin_node Seedfill
(!begin_liste) [Availability]

!item [Name:]
ØSeedfillÆ

!item [Line-A number:]
$A00F

!item [Syntax:]
(!link [Bindings fÅr seed_fill] [Bindings fÅr seed_fill])

!item [Description:]
Diese Line-A Funktion fÅllt einen Bereich mit einer Farbe aus und entspricht
damit der VDI Funktion v_contourfill.

Im ersten Word von ptsin (ptsin[0] in C) wird die X-Koordinate und im
zweiten Word von ptsin (ptsin[1] in C) wird die Y-Koordinate des Startpunkts
Åbergeben. In das erste Wort von intin (intin[0] in C) wird das Mode-Wort
geschrieben. Ist das Mode-Wort grîûer 0, gibt es die Farbe der Umgrenzung
an, bis zu der gefÅllt werden soll. Ist das Mode-Wort kleiner 0, besteht
die Umgenzung aus allen Pixeln, die nicht die Farbe des Startpunkts haben.

Die folgenden Line-A Variablen werden benutzt:

!begin_xlist !short [fill_abort]
!item [Variable]
Bedeutung
!item [~]
~
!item [fill_abort]
Dies ist die Adresse eine Funktion, die am Ende jeder Zeile aufgerufen wird.
Liefert diese Funktion in D0 den Wert 0, wird mit dem FÅllen fortgefahren,
ansonsten abgebrochen.
!item [patptr]
Zeiger auf ein Feld mit 16 Bit Linienmustern.
!item [patmsk]
Anzahl Linienmuster - 1. In AbhÑngigkeit von der y-Koordinate wird nun aus
dem Feld mit den Linienmustern eines ausgewÑhlt. Der Index des verwendeten
Linienmusters lÑût sich durch (y mod (patmsk + 1)) berechnen. Durch die
Angabe mehrerer Linienmuster und mehrmaliges Aufrufen dieser Funktion fÅr
aufeinanderfolgende Zeilen lassen sich leicht auch komplexe Muster zeichnen.
!item [multifill]
0, wenn das Muster nur eine Ebene hat und 1 fÅr mehrere Ebenen.
!item [wrt_mode]
Schreibmodes, es sind die folgenden Modie mîglich:

!begin_xlist [REPLACE 0] !short
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR mit not(LN_MASK))
!end_xlist

!item [clip]
1 wenn Clipping gewÅnscht wird, 0 sonst.
!item [xmn_clip]
X-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymn_clip]
Y-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [xmx_clip]
X-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymx_clip]
Y-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!end_xlist

!item [(!nolink [Return]) Value:]
Die Funktion liefert keinen Returnwert.

!item [Availability:]
All TOS versions.

!item [See Also:]
(!link [Binding] [Bindings fÅr seed_fill]) ~
(!link [v_contourfill][v_contourfill])

(!ende_liste)


!begin_node Bindings fÅr seed_fill
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void seed_fill( void ); /* WARNING: NOT supported ! */
!item [Assembler:]
Es wird angenommen, daû das intin und ptsin Feld schon in den Line-A
Parameterblock eingetragen wurde.

!begin_verbatim
movem.l   D0-D2/A0-A2,-(A7)  ; Register retten
move.l    pParamblk,A0       ; Zeiger Parameterblock LINEA
move.l    (8,A0),A1          ; Adresse intin nach A1
move.w    mode_wort,(A1)     ; Mode-Wort nach intin[0]
move.l    (12,A0),A1         ; Adresse ptsin nach A1
move.w    x,(A1)             ; X-Koordinate nach ptsin[0]
move.w    y,(2,A1)           ; Y-Koordinate nach ptsin[1]
move.w    wmode,(36,A0)      ; Writemode in LINEA.wrt_mode
move.w    patptr,(44,A0)     ; Linienmuster in LINEA.patptr
move.w    patmsk,(48,A0)     ; Anzahl Muster in LINEA.patmsk
move.w    multifill,(50,A0)  ; Ebenenflag in LINEA.multifill
move.w    mode,(54,A0)       ; Clipmode in LINEA.clip
move.w    cx1,(56,A0)        ; linke obere Clip-Ecke, X-Koordinate in LINEA.xmn_clip
move.w    cy1,(58,A0)        ; linke obere Clip-Ecke, Y-Koordinate in LINEA.ymn_clip
move.w    cx2,(60,A0)        ; rechte untere Clip-Ecke, X-Koordinate in LINEA.xmx_clip
move.w    cy2,(62,A0)        ; rechte untere Clip-Ecke, Y-Koordinate in LINEA.ymx_clip
move.l    fill_abort,(118,A0); Abbruchfunktion nach LINEA.fill_abort
dc.w      $A00F              ; Line-A Opcode
movem.l   (A7)+,D0-D2/A0-A2  ; Register restaurieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Seedfill
(!begin_liste) [Beschreibung:]

!item [Name:]
ØSeedfillÆ

!item [(!nolink [Line-A]) Nummer:]
$A00F

!item [Binding:]
(!link [Bindings fÅr seed_fill] [Bindings fÅr seed_fill])

!item [Beschreibung:]
Diese Line-A Funktion fÅllt einen Bereich mit einer Farbe aus und entspricht
damit der VDI Funktion v_contourfill.

Im ersten Word von ptsin (ptsin[0] in C) wird die X-Koordinate und im
zweiten Word von ptsin (ptsin[1] in C) wird die Y-Koordinate des Startpunkts
Åbergeben. In das erste Wort von intin (intin[0] in C) wird das Mode-Wort
geschrieben. Ist das Mode-Wort grîûer 0, gibt es die Farbe der Umgrenzung
an, bis zu der gefÅllt werden soll. Ist das Mode-Wort kleiner 0, besteht
die Umgenzung aus allen Pixeln, die nicht die Farbe des Startpunkts haben.

Die folgenden Line-A Variablen werden benutzt:

!begin_xlist !short [fill_abort]
!item [Variable]
Bedeutung
!item [~]
~
!item [fill_abort]
Dies ist die Adresse eine Funktion, die am Ende jeder Zeile aufgerufen wird.
Liefert diese Funktion in D0 den Wert 0, wird mit dem FÅllen fortgefahren,
ansonsten abgebrochen.
!item [patptr]
Zeiger auf ein Feld mit 16 Bit Linienmustern.
!item [patmsk]
Anzahl Linienmuster - 1. In AbhÑngigkeit von der y-Koordinate wird nun aus
dem Feld mit den Linienmustern eines ausgewÑhlt. Der Index des verwendeten
Linienmusters lÑût sich durch (y mod (patmsk + 1)) berechnen. Durch die
Angabe mehrerer Linienmuster und mehrmaliges Aufrufen dieser Funktion fÅr
aufeinanderfolgende Zeilen lassen sich leicht auch komplexe Muster zeichnen.
!item [multifill]
0, wenn das Muster nur eine Ebene hat und 1 fÅr mehrere Ebenen.
!item [wrt_mode]
Schreibmodes, es sind die folgenden Modie mîglich:

!begin_xlist [REPLACE 0] !short
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR mit not(LN_MASK))
!end_xlist

!item [clip]
1 wenn Clipping gewÅnscht wird, 0 sonst.
!item [xmn_clip]
X-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymn_clip]
Y-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [xmx_clip]
X-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymx_clip]
Y-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!end_xlist

!item [Ergebnis:]
Die Funktion liefert keinen Returnwert.

!item [VerfÅgbar:]
Alle TOS-Versionen.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr seed_fill]) ~
(!link [v_contourfill][v_contourfill])

(!ende_liste)


!begin_node Bindings fÅr seed_fill
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void seed_fill( void ); /* WARNING: NOT supported ! */
!item [Assembler:]
Es wird angenommen, daû das intin und ptsin Feld schon in den Line-A
Parameterblock eingetragen wurde.

!begin_verbatim
movem.l   D0-D2/A0-A2,-(A7)  ; Register retten
move.l    pParamblk,A0       ; Zeiger Parameterblock LINEA
move.l    (8,A0),A1          ; Adresse intin nach A1
move.w    mode_wort,(A1)     ; Mode-Wort nach intin[0]
move.l    (12,A0),A1         ; Adresse ptsin nach A1
move.w    x,(A1)             ; X-Koordinate nach ptsin[0]
move.w    y,(2,A1)           ; Y-Koordinate nach ptsin[1]
move.w    wmode,(36,A0)      ; Writemode in LINEA.wrt_mode
move.w    patptr,(44,A0)     ; Linienmuster in LINEA.patptr
move.w    patmsk,(48,A0)     ; Anzahl Muster in LINEA.patmsk
move.w    multifill,(50,A0)  ; Ebenenflag in LINEA.multifill
move.w    mode,(54,A0)       ; Clipmode in LINEA.clip
move.w    cx1,(56,A0)        ; linke obere Clip-Ecke, X-Koordinate in LINEA.xmn_clip
move.w    cy1,(58,A0)        ; linke obere Clip-Ecke, Y-Koordinate in LINEA.ymn_clip
move.w    cx2,(60,A0)        ; rechte untere Clip-Ecke, X-Koordinate in LINEA.xmx_clip
move.w    cy2,(62,A0)        ; rechte untere Clip-Ecke, Y-Koordinate in LINEA.ymx_clip
move.l    fill_abort,(118,A0); Abbruchfunktion nach LINEA.fill_abort
dc.w      $A00F              ; Line-A Opcode
movem.l   (A7)+,D0-D2/A0-A2  ; Register restaurieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif