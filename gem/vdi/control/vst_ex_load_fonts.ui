!iflang [english]

!begin_node vst_ex_load_fonts

(!begin_liste) [Availability]

!item [Name:]
ØLoad FontsÆ - ZeichensÑtze laden

!item [Opcode:]
119

!item [Syntax:]
int16_t vst_ex_load_fonts ( int16_t handle, int16_t select, int16_t font_max,
                            int16_t font_free );

!item [Description:]
This function is an extension of the existing vst_load_fonts call,
with two additional input arguments to provide control over font
paging memory. The current defaults in units of paragraphs are:

!begin_verbatim
                  font_max     font_free
for screens:     5120 (80K)         0
for printers:      32767       640 (10K)
!end_verbatim

The GDOS attempts to allocate (!I)font_max(!i) paragraphs or all of available
menory (whichever is smaller) less (!I)font_free(!i) paragraphs, and use this
amount for font paging.

Depending on your needs, you can use either version of this call. Note that
both version use the same opcode.

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [select]
reserviert, sollte 0 sein
!item [font_max]
Maximum number of paragraphs to allocate
!item [font_free]
Minimum number of paragraphs to leave free
!end_xlist

!item [(!nolink [Return]) Value:]
Als Ergebnis erhÑlt man die Anzahl der geladenen ZeichensÑtze.

!item [Availability:]
GEM/3 Release 3.1

!item [Group:]
Control Function

!item [See Also:]
(!link [Binding] [Bindings for vst_ex_load_fonts])  ~ vst_unload_fonts ~  vst_font ~
vqt_name ~  (!link [ASSIGN.SYS-Datei][Der Aufbau der ASSIGN.SYS-Datei]) ~
(!link [GDOS][Das GDOS])

(!ende_liste)
!end_node



!begin_node Bindings for vst_ex_load_fonts
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vst_ex_load_fonts ( int16_t handle, int16_t select, int16_t font_max,
                            int16_t font_free );

!item [Binding:]
!begin_verbatim
int16_t vst_ex_load_fonts ( int16_t handle, int16_t select,
                            int16_t font_max, int16_t font_free )
{
   intin[0] = select;
   intin[1] = font_max;
   intin[2] = font_free;

   contrl[0] = 119;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 119   Function Opcode
contrl+2  !! contrl[1] !! 0     # entry in ptsin
contrl+4  !! contrl[2] !! 0     # entry in ptsout
contrl+6  !! contrl[3] !! 3     # entry in intin
contrl+8  !! contrl[4] !! 1     # entry in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! select
intin+2   !! intin[1]  !! font_max
intin+4   !! intin[2]  !! font_free
intout    !! intout[0] !! Return Value
!end_table

(!ende_liste)
!end_node

!else

!begin_node vst_ex_load_fonts

(!begin_liste) [Beschreibung]

!item [Name:]
ØLoad FontsÆ - ZeichensÑtze laden

!item [VDI-Nummer:]
119

!item [Deklaration:]
int16_t vst_ex_load_fonts ( int16_t handle, int16_t select, int16_t font_max,
                            int16_t font_free );

!item [Beschreibung:]
This function is an extension of the existing vst_load_fonts call,
with two additional input arguments to provide control over font
paging memory. The current defaults in units of paragraphs are:

!begin_verbatim
                  font_max     font_free
for screens:     5120 (80K)         0
for printers:      32767       640 (10K)
!end_verbatim

The GDOS attempts to allocate (!I)font_max(!i) paragraphs or all of available
menory (whichever is smaller) less (!I)font_free(!i) paragraphs, and use this
amount for font paging.

Depending on your needs, you can use either version of this call. Note that
both version use the same opcode.

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [select]
reserviert, sollte 0 sein
!item [font_max]
Maximum number of paragraphs to allocate
!item [font_free]
Minimum number of paragraphs to leave free
!end_xlist

!item [Ergebnis:]
Als Ergebnis erhÑlt man die Anzahl der geladenen ZeichensÑtze.

!item [VerfÅgbar:]
GEM/3 Release 3.1

!item [Gruppe:]
Kontrollfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_ex_load_fonts])  ~ vst_unload_fonts ~  vst_font ~
vqt_name ~  (!link [ASSIGN.SYS-Datei][Der Aufbau der ASSIGN.SYS-Datei]) ~
(!link [GDOS][Das GDOS])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_ex_load_fonts
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vst_ex_load_fonts ( int16_t handle, int16_t select, int16_t font_max,
                            int16_t font_free );

!item [Umsetzung:]
!begin_verbatim
int16_t vst_ex_load_fonts ( int16_t handle, int16_t select,
                            int16_t font_max, int16_t font_free )
{
   intin[0] = select;
   intin[1] = font_max;
   intin[2] = font_free;

   contrl[0] = 119;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 119   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 3     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! select
intin+2   !! intin[1]  !! font_max
intin+4   !! intin[2]  !! font_free
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node

!endif
