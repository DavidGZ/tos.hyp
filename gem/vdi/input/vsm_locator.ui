!iflang [english]

!begin_node vsm_locator

(!begin_liste) [Availability]

!item [Name:]
ØInput Locator, Sample ModeÆ - bestimmt die Position des Grafikcursors.

!item [Opcode:]
28

!item [Syntax:]
int16_t vsm_locator ( int16_t handle, int16_t x, int16_t y, int16_t *xout,
                   int16_t *yout, int16_t *term );

!item [Description:]
Die Funktion setzt bzw. ermittelt die Position des Grafikcursors. Es gilt:

!begin_xlist !short [Parameter]
!item [Position]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [x]
x-Koordinate
!item [y]
y-Koordinate des Grafikcursors
!item [xout]
x-Koordinate
!item [yout]
y-Koordinate des Grafikcursors bei RÅckgabe
!item [term]
im Low-Byte wird der Code der Abbruch-Taste eingegeben. Spezielle Tasten
(Maustasten etc.) erhalten Werte ab 32 aufwÑrts, und kînnen daher nicht
direkt von Tasten der Tastatur unterschieden werden.
!end_xlist

Der Grafikcursor wird durch diese Funktion (!I)nicht(!i) sichtbar;
TastenbetÑtigungen oder Cursorbewegungen werden nur dann gemeldet, wenn
diese tatsÑchlich erfolgt sind.

(!B)Hinweis:(!b) Die Input function des VDI arbeiten nur auf der
(!I)physikalischen(!i) Workstation, die im Normalfall von den AES benutzt
wird.

!item [(!nolink [Return]) Value:]
Die Funktion liefert kodiert Informationen darÅber, ob sich die Position
verÑndert hat (Bit 0 gesetzt) und ob eine Taste gedrÅckt wurde (Bit 1
gesetzt).

!item [Availability:]
Die Funktion wird nicht von allen GerÑtetreibern
unterstÅtzt. 

!item [Group:]
Input function

!item [See Also:]
(!link [Binding] [Bindings for vsm_locator]) ~  vrq_locator ~  vsin_mode

(!ende_liste)
!end_node



!begin_node Bindings for vsm_locator
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vsm_locator ( int16_t handle, int16_t x, int16_t y, int16_t *xout,
                   int16_t *yout, int16_t *term );

!item [Binding:]
!begin_verbatim
int16_t vsm_locator (int16_t handle, int16_t x, int16_t y,
                     int16_t *xout, int16_t *yout,
                     int16_t *term)
{
   ptsin[0] = x;
   ptsin[1] = y;

   contrl[0] = 28;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *xout = ptsout[0];
   *yout = ptsout[1];
   *term = intout[0];

   return ( (contrl[4] << 1) | (contrl[2]) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 28        Function Opcode
contrl+2  !! contrl[1] !! 1         # entry in ptsin
contrl+4  !! contrl[2] !! 0 oder 1  # entry in ptsout
contrl+6  !! contrl[3] !! 0         # entry in intin
contrl+8  !! contrl[4] !! 0 oder 1  # entry in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! x
ptsin+2   !! ptsin[1]  !! y
intout    !! intout[0] !! term
ptsout    !! ptsout[0] !! xout
ptsout+2  !! ptsout[1] !! yout
!end_table

(!ende_liste)
!end_node

!else

!begin_node vsm_locator

(!begin_liste) [Beschreibung]

!item [Name:]
ØInput Locator, Sample ModeÆ - bestimmt die Position des Grafikcursors.

!item [VDI-Nummer:]
28

!item [Deklaration:]
int16_t vsm_locator ( int16_t handle, int16_t x, int16_t y, int16_t *xout,
                   int16_t *yout, int16_t *term );

!item [Beschreibung:]
Die Funktion setzt bzw. ermittelt die Position des Grafikcursors. Es gilt:

!begin_xlist !short [Parameter]
!item [Position]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [x]
x-Koordinate
!item [y]
y-Koordinate des Grafikcursors
!item [xout]
x-Koordinate
!item [yout]
y-Koordinate des Grafikcursors bei RÅckgabe
!item [term]
im Low-Byte wird der Code der Abbruch-Taste eingegeben. Spezielle Tasten
(Maustasten etc.) erhalten Werte ab 32 aufwÑrts, und kînnen daher nicht
direkt von Tasten der Tastatur unterschieden werden.
!end_xlist

Der Grafikcursor wird durch diese Funktion (!I)nicht(!i) sichtbar;
TastenbetÑtigungen oder Cursorbewegungen werden nur dann gemeldet, wenn
diese tatsÑchlich erfolgt sind.

(!B)Hinweis:(!b) Die Eingabefunktionen des VDI arbeiten nur auf der
(!I)physikalischen(!i) Workstation, die im Normalfall von den AES benutzt
wird.

!item [Ergebnis:]
Die Funktion liefert kodiert Informationen darÅber, ob sich die Position
verÑndert hat (Bit 0 gesetzt) und ob eine Taste gedrÅckt wurde (Bit 1
gesetzt).

!item [VerfÅgbar:]
Die Funktion wird nicht von allen GerÑtetreibern
unterstÅtzt. 

!item [Gruppe:]
Eingabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsm_locator]) ~  vrq_locator ~  vsin_mode

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsm_locator
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vsm_locator ( int16_t handle, int16_t x, int16_t y, int16_t *xout,
                   int16_t *yout, int16_t *term );

!item [Umsetzung:]
!begin_verbatim
int16_t vsm_locator (int16_t handle, int16_t x, int16_t y,
                     int16_t *xout, int16_t *yout,
                     int16_t *term)
{
   ptsin[0] = x;
   ptsin[1] = y;

   contrl[0] = 28;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *xout = ptsout[0];
   *yout = ptsout[1];
   *term = intout[0];

   return ( (contrl[4] << 1) | (contrl[2]) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 28        Opcode der Funktion
contrl+2  !! contrl[1] !! 1         # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0 oder 1  # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0         # EintrÑge in intin
contrl+8  !! contrl[4] !! 0 oder 1  # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! x
ptsin+2   !! ptsin[1]  !! y
intout    !! intout[0] !! term
ptsout    !! ptsout[0] !! xout
ptsout+2  !! ptsout[1] !! yout
!end_table

(!ende_liste)
!end_node

!endif
