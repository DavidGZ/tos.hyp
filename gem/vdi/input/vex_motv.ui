!iflang [english]

!begin_node vex_motv

(!begin_liste) [Availability]

!item [Name:]
ØExchange Mouse Movement VectorÆ - stellt den Interruptvektor fÅr
Mausbewegungen um.

!item [Opcode:]
126

!item [Syntax:]
void vex_motv ( int16_t handle, int16_t (*pusrcode)(), int16_t (**psavcode)() );

!item [Description:]
Die Funktion erlaubt es, eine eigene Routine in den Maus-Movement-Vektor zu
hÑngen. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Device handle
!item [pusrcode]
address of the new routine
!item [psavcode]
address of the old routine
!end_xlist

The subroutine must save and restore modified registers and call the
old status routine.

(!B)Hinweis:(!b) Die Input function des VDI arbeiten nur auf der
(!I)physikalischen(!i) Workstation, die im Normalfall von den AES benutzt
wird.

!item [(!nolink [Return]) Value:]
Die Funktion liefert kein Ergebnis.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Input function

!item [See Also:]
(!link [Binding] [Bindings for vex_motv]) ~  vex_timv ~  vex_butv ~  vex_curv

(!ende_liste)
!end_node



!begin_node Bindings for vex_motv
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vex_motv ( int16_t handle, int16_t (*pusrcode)(), int16_t (**psavcode)() );

!item [Binding:]
!begin_verbatim
void vex_motv (int16_t handle, int16_t (*pusrcode)(),
               int16_t (**psavcode)())
{
   contrl[0] = 126;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[6] = handle;
   contrl[7..8] = pusrcode;

   vdi ();

   *psavcode = contrl[9..10];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]     !! 126   Function Opcode
contrl+2  !! contrl[1]     !! 0     # entry in ptsin
contrl+4  !! contrl[2]     !! 0     # entry in ptsout
contrl+6  !! contrl[3]     !! 0     # entry in intin
contrl+8  !! contrl[4]     !! 0     # entry in intout
contrl+12 !! contrl[6]     !! handle
contrl+14 !! contrl[7..8]  !! pusrcode
contrl+18 !! contrl[9..10] !! psavcode
!end_table

(!ende_liste)
!end_node

!else

!begin_node vex_motv

(!begin_liste) [Beschreibung]

!item [Name:]
ØExchange Mouse Movement VectorÆ - stellt den Interruptvektor fÅr
Mausbewegungen um.

!item [VDI-Nummer:]
126

!item [Deklaration:]
void vex_motv ( int16_t handle, int16_t (*pusrcode)(), int16_t (**psavcode)() );

!item [Beschreibung:]
Die Funktion erlaubt es, eine eigene Routine in den Maus-Movement-Vektor zu
hÑngen. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [pusrcode]
Adresse der neuen Routine
!item [psavcode]
Adresse der alten Routine
!end_xlist

Die neue Routine muû alle verÑnderten Register wiederherstellen und die alte
Maus-Movement Routine aufrufen.

(!B)Hinweis:(!b) Die Eingabefunktionen des VDI arbeiten nur auf der
(!I)physikalischen(!i) Workstation, die im Normalfall von den AES benutzt
wird.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all screen drivers.

!item [Gruppe:]
Eingabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vex_motv]) ~  vex_timv ~  vex_butv ~  vex_curv

(!ende_liste)
!end_node



!begin_node Bindings fÅr vex_motv
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vex_motv ( int16_t handle, int16_t (*pusrcode)(), int16_t (**psavcode)() );

!item [Umsetzung:]
!begin_verbatim
void vex_motv (int16_t handle, int16_t (*pusrcode)(),
               int16_t (**psavcode)())
{
   contrl[0] = 126;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[6] = handle;
   contrl[7..8] = pusrcode;

   vdi ();

   *psavcode = contrl[9..10];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]     !! 126   Opcode der Funktion
contrl+2  !! contrl[1]     !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]     !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]     !! 0     # EintrÑge in intin
contrl+8  !! contrl[4]     !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]     !! handle
contrl+14 !! contrl[7..8]  !! pusrcode
contrl+18 !! contrl[9..10] !! psavcode
!end_table

(!ende_liste)
!end_node

!endif
