!iflang [english]

!begin_node v_show_c

(!begin_liste) [Availability]

!item [Name:]
ØShow CursorÆ - schaltet den Grafikcursor ein.

!item [Opcode:]
122

!item [Syntax:]
void v_show_c ( int16_t handle, int16_t reset );

!item [Description:]
Die Funktion zeigt den Grafikcursor, bzw. storniert einen Aufruf der
Funktion v_hide_c. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [reset]
Flag
!begin_xlist !short [<>0 =]
!item [0 =]
Anzahl der Hide-Cursor-Aufrufe ignorieren
!item [<>0 =]
normale Anwendung, d.h. ein Hide-Cursor-Aufruf wird storniert
!end_xlist
!end_xlist

Zum  Ein-/Ausschalten der Maus sollte in GEM Programmen unbedingt die
AES-Funktion graf_mouse verwendet werden.

(!B)Hinweis:(!b) Die Input function des (!nolink [VDI]) arbeiten nur auf der
(!I)physikalischen(!i) Workstation, die im Normalfall von den (!nolink [AES]) benutzt
wird. Deshalb sollte man besser auf (!nolink [graf_mouse]) zurÅckgreifen.

!item [(!nolink [Return]) Value:]
Die Funktion liefert kein Ergebnis.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Input function

!item [See Also:]
(!link [Binding] [Bindings for v_show_c]) ~  v_hide_c ~  graf_mouse

(!ende_liste)
!end_node



!begin_node Bindings for v_show_c
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_show_c ( int16_t handle, int16_t reset );

!item [Binding:]
!begin_verbatim
void v_show_c (int16_t handle, int16_t reset)
{
   intin[0] = reset;

   contrl[0] = 122;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 122   Function Opcode
contrl+2  !! contrl[1] !! 0     # entry in ptsin
contrl+4  !! contrl[2] !! 0     # entry in ptsout
contrl+6  !! contrl[3] !! 1     # entry in intin
contrl+8  !! contrl[4] !! 0     # entry in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! reset
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_show_c

(!begin_liste) [Beschreibung]

!item [Name:]
ØShow CursorÆ - schaltet den Grafikcursor ein.

!item [VDI-Nummer:]
122

!item [Deklaration:]
void v_show_c ( int16_t handle, int16_t reset );

!item [Beschreibung:]
Die Funktion zeigt den Grafikcursor, bzw. storniert einen Aufruf der
Funktion v_hide_c. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [reset]
Flag
!begin_xlist !short [<>0 =]
!item [0 =]
Anzahl der Hide-Cursor-Aufrufe ignorieren
!item [<>0 =]
normale Anwendung, d.h. ein Hide-Cursor-Aufruf wird storniert
!end_xlist
!end_xlist

Zum  Ein-/Ausschalten der Maus sollte in GEM Programmen unbedingt die
AES-Funktion graf_mouse verwendet werden.

(!B)Hinweis:(!b) Die Eingabefunktionen des (!nolink [VDI]) arbeiten nur auf der
(!I)physikalischen(!i) Workstation, die im Normalfall von den (!nolink [AES]) benutzt
wird. Deshalb sollte man besser auf (!nolink [graf_mouse]) zurÅckgreifen.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all screen drivers.

!item [Gruppe:]
Eingabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_show_c]) ~  v_hide_c ~  graf_mouse

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_show_c
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_show_c ( int16_t handle, int16_t reset );

!item [Umsetzung:]
!begin_verbatim
void v_show_c (int16_t handle, int16_t reset)
{
   intin[0] = reset;

   contrl[0] = 122;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 122   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! reset
!end_table

(!ende_liste)
!end_node

!endif
