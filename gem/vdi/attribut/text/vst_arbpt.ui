!iflang [english]

!begin_node vst_arbpt

(!begin_liste) [Availability]

!item [Name:]
ØSet character cell height by arbitrary pointsÆ - Setzen der
Zeichenzellenhîhe in Punkten.

!item [Opcode:]
246

!item [Syntax:]
int16_t vst_arbpt ( int16_t handle, int16_t point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Description:]
Die Funktion setzt die aktuelle Zeichenhîhe in Printerpunkten. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Kennung der Workstation
!item [point]
gewÅnschte Zeichenhîhe
!item [chwd]
resultierende Zeichenbreite
!item [chht]
resultierende Zeichenhîhe
!item [cellwd]
resultierende Zeichenzellenbreite
!item [cellht]
resultierende Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Im Gegensatz zu vst_point erlaubt die Funktion die
Skalierung in (!I)jeder(!i) Punktgrîûe, unabhÑngig davon, welche Angaben in
EXTEND.SYS stehen. 

Wenn man negative Werte einstellt, werden die Zeichen an der x-Achse
gespiegelt. Bei den zurÅckgelieferten Zeichenbreiten handelt es sich um
gerundete Werte, die man nicht ohne weiteres zur Breitenberechnung benutzen
kann.

!item [(!nolink [Return]) Value:]
Die Funktion liefert die gesetzte Zeichenhîhe in Punkten zurÅck.


!item [Availability:]
Beim FSM-GDOS and SpeedoGDOS since version 4.00

!item [Group:]
Text attributes

!item [See Also:]
(!link [Binding] [Bindings for vst_arbpt]) ~  vst_arbpt32 ~ vst_point ~  vst_setsize ~  SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings for vst_arbpt
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vst_arbpt ( int16_t handle, int16_t point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Binding:]
!begin_verbatim
int16_t vst_arbpt (int16_t handle, int16_t point,
                   int16_t *chwd, int16_t *chht,
                   int16_t *cellwd, int16_t *cellht)
{
   intin[0] = point;

   contrl[0] = 246;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 246   Function Opcode
contrl+2  !! contrl[1]    !! 0     # entry in ptsin
contrl+4  !! contrl[2]    !! 2     # entry in ptsout
contrl+6  !! contrl[3]    !! 1     # entry in intin
contrl+8  !! contrl[4]    !! 1     # entry in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]  !! point
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwd
ptsout+6  !! ptsout[3]    !! cellht
intout    !! intout[0] !! Return Value
!end_table

(!ende_liste)
!end_node

!else

!begin_node vst_arbpt

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet character cell height by arbitrary pointsÆ - Setzen der
Zeichenzellenhîhe in Punkten.

!item [VDI-Nummer:]
246

!item [Deklaration:]
int16_t vst_arbpt ( int16_t handle, int16_t point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Beschreibung:]
Die Funktion setzt die aktuelle Zeichenhîhe in Printerpunkten. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [point]
gewÅnschte Zeichenhîhe
!item [chwd]
resultierende Zeichenbreite
!item [chht]
resultierende Zeichenhîhe
!item [cellwd]
resultierende Zeichenzellenbreite
!item [cellht]
resultierende Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Im Gegensatz zu vst_point erlaubt die Funktion die
Skalierung in (!I)jeder(!i) Punktgrîûe, unabhÑngig davon, welche Angaben in
EXTEND.SYS stehen. 

Wenn man negative Werte einstellt, werden die Zeichen an der x-Achse
gespiegelt. Bei den zurÅckgelieferten Zeichenbreiten handelt es sich um
gerundete Werte, die man nicht ohne weiteres zur Breitenberechnung benutzen
kann.

!item [Ergebnis:]
Die Funktion liefert die gesetzte Zeichenhîhe in Punkten zurÅck.


!item [VerfÅgbar:]
Beim FSM-GDOS und SpeedoGDOS ab Version 4.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_arbpt]) ~  vst_arbpt32 ~ vst_point ~  vst_setsize ~  SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_arbpt
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vst_arbpt ( int16_t handle, int16_t point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Umsetzung:]
!begin_verbatim
int16_t vst_arbpt (int16_t handle, int16_t point,
                   int16_t *chwd, int16_t *chht,
                   int16_t *cellwd, int16_t *cellht)
{
   intin[0] = point;

   contrl[0] = 246;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 246   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 1     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]  !! point
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwd
ptsout+6  !! ptsout[3]    !! cellht
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node

!endif
