## Hypertext zum TOS-Betriebssystem
## entwickelt fÅr den ST-Guide
##
## Last Edit: 21.10.1997
##
## Kapitel 5: VDI-Attributfunktionen

## Bitmap-Attribute

!begin_node vsr_bg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Background ColorÆ - Hintergrundfarbe setzen

!item [VDI-Nummer:]
201 (Unterfunktion 4)

!item [Binding:]
(!link [Bindings fÅr vsr_bg_color] [Bindings fÅr vsr_bg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Hintergrundfarbe fÅr Bitmaps.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Hintergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Bitmap-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsr_bg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsr_bg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsr_bg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsr_bg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 201;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 4;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 201   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 4
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsr_fg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Foreground ColorÆ - Vordergrundfarbe setzen

!item [VDI-Nummer:]
200 (Unterfunktion 4)

!item [Binding:]
(!link [Bindings fÅr vsr_fg_color] [Bindings fÅr vsr_fg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Vordergrundfarbe fÅr Bitmaps.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Vordergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Bitmap-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsr_fg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsr_fg_color
!ignore_index

(!begin_liste) [Implementierung::]

!item [C:]
WORD vsr_fg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsr_fg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 200;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 4;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 200   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 4
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




## Åbergeordnete Attribute



!begin_node v_ps_halftone

(!begin_liste) [Beschreibung:]

!item [Name:]
ØÆ - 

!item [VDI-Nummer:]
5 (Escape 32)

!item [Binding:]
(!link [Bindings fÅr v_ps_halftone ] [Bindings fÅr v_ps_halftone ])

!item [Beschreibung:]
This callcontrols the parameters for PostScript halftoning. It provides direct
access to analogous PostScript language parameters. It is 
implemented only for the PostScript driver.

!begin_xlist !short [frequency]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [index] Halftone type (!nl)
0: Dot screen (!nl)
1: Line screen (!nl)
2: Ellipse screen (!nl)
3: Custom (user-defined)

!item [angle]
Hallftone screen angle

!item [frequency]
Hallftone screen frequency
!end_xlist


!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
(!nolink [GEM])/3 Release 3.1

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_ps_halftone])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_ps_halftone
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID v_ps_halftone( WORD handle, WORD index, WORD angle, WORD frequency );

!item [Implementierung:]
!begin_verbatim
VOID v_ps_halftone( WORD handle, WORD index, WORD angle, WORD frequency )
{
   intin[0] = index;
   intin[1] = angle;
   intin[2] = frequency;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[5] = 32;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 5    Opcode der Funktion
contrl+2  !! contrl[1]   !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 3     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]   !! 32
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! index
intin+2   !! intin[1]    !! angle
intin+4   !! intin[2]    !! frequency
!end_table

(!ende_liste)
!end_node




!begin_node v_setrgb

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Color RepresentationÆ - legt die FarbintensitÑt fest.

!item [VDI-Nummer:]
130

!item [Binding:]
(!link [Bindings fÅr v_setrgb ] [Bindings fÅr v_setrgb ])

!item [Beschreibung:]
Die Funktion wÑhlt die FarbintensitÑt zu den einzelnen Farbregistern. Es
gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [type]
0: Textfarbe (!nl)
1: FÅllfarbe (!nl)
2: Linienfarbe (!nl)
3: Markerfarbe

!item [r]
Rotanteil in Promille

!item [g]
GrÅnanteil in Promille

!item [b]
Blauanteil in Promille
!end_xlist


!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
ab NVDI 5.00
# Quelle: NVDI 5.00, vdicol.c

Es handelt sich dabei angeblich um eine alte GEM/3-Funktion. Allerdings konnte solch eine
Funktion bis jetzt nicht gefunden werden.

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_setrgb])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_setrgb
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID v_setrgb( WORD handle, WORD type, WORD r, WORD g, WORD b );

!item [Implementierung:]
!begin_verbatim
VOID v_setrgb( WORD handle, WORD type, WORD r, WORD g, WORD b )
{
   intin[0] = r;
   intin[1] = g;
   intin[2] = b;

   contrl[0] = 138;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[5] = type;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 138    Opcode der Funktion
contrl+2  !! contrl[1]   !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 3     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]   !! type
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! r
intin+2   !! intin[1]    !! g
intin+4   !! intin[2]    !! b
!end_table

(!ende_liste)
!end_node


!begin_node v_setrgbi

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Color RepresentationÆ - legt die FarbintensitÑt fest.

!item [VDI-Nummer:]
5 (Escape 18500)

!item [Binding:]
(!link [Bindings fÅr v_setrgbi ] [Bindings fÅr v_setrgbi ])

!item [Beschreibung:]
This call overriedes a previously set color specification with an RGB triple
(color devices) or intensity (monochrome devices). This call is currently
implemented only for the PostScript driver.

!begin_xlist !short [primtype]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [primtype] Primitivetype (!nl)
17: line (!nl)
20: marker (!nl)
22: text (!nl)
25: fill

!item [r]
Rotanteil in Promille

!item [g]
GrÅnanteil in Promille

!item [b]
Blauanteil in Promille

!item [i]
Intensity
!end_xlist


!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
(!nolink [GEM])/3 Releas 3.1

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_setrgbi]) ~ v_setrgb

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_setrgbi
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID v_setrgbi( WORD handle, WORD primtype, WORD r, WORD g, WORD b, WORD i );

!item [Implementierung:]
!begin_verbatim
VOID v_setrgbi( WORD handle, WORD primtype, WORD r, WORD g, WORD b, WORD i )
{
   intin[0] = primtype;
   intin[1] = r;
   intin[2] = g;
   intin[3] = b;
   intin[4] = i;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 5;
   contrl[5] = 18500;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 5    Opcode der Funktion
contrl+2  !! contrl[1]   !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 5     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]   !! 18500
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! primtype
intin+2   !! intin[1]    !! r
intin+4   !! intin[2]    !! g
intin+6   !! intin[3]    !! b
intin+8   !! intin[4]    !! i
!end_table

(!ende_liste)
!end_node




!begin_node vs_bkcolor

(!begin_liste) [Beschreibung:]

!item [Name:]
ØÆ - Setzen der Hintergrundfarbe.

!item [VDI-Nummer:]
5 (Escape 102)

!item [Binding:]
(!link [Bindings fÅr vs_bkcolor] [Bindings fÅr vs_bkcolor])

!item [Beschreibung:]
This call sets the background color for the device associated with (!I)handle(!i),
usually a camera device.

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color]
Background color index
!end_xlist

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
(!nolink [GEM])/3 Release 3.1

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vs_bkcolor]) 

(!ende_liste)
!end_node



!begin_node Bindings fÅr vs_bkcolor
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vs_bkcolor ( WORD handle, WORD color );

!item [Implementierung:]
!begin_verbatim
VOID vs_bkcolor (WORD handle, WORD color)
{
   intin[0] = color;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[5] = 102;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 5     Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+10 !! contrl[5] !! 102   # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! color
!end_table

(!ende_liste)
!end_node



!begin_node vs_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Color RepresentationÆ - legt die FarbintensitÑt fest.

!item [VDI-Nummer:]
14

!item [Binding:]
(!link [Bindings fÅr vs_color ] [Bindings fÅr vs_color ])

!item [Beschreibung:]
Die Funktion wÑhlt die FarbintensitÑt zu den einzelnen Farbregistern. Es
gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [index]
Farbnummer
!item [rgb_in[0!]]
Rotanteil in Promille
!item [rgb_in[1!]]
GrÅnanteil in Promille
!item [rgb_in[2!]]
Blauanteil in Promille
!end_xlist

Da nicht jedes AusgabegerÑt Åber 1000 mîgliche Farbabstufungen verfÅgen muû,
kînnen fÅr verschiedene EingabeintensitÑten der RGB-Farben, die tatsÑchlich
eingestellten IntensitÑten gleich sein.

(!B)Hinweis:(!b) Die Funktion kann nur benutzt werden, falls eine
Lookup-Table UnterstÅtzung vorhanden ist. Sollte eine ungÅltige Farbnummer
Åbergeben werden, wird der nÑchste erreichbare Wert angenommen.

Bei GerÑten mit einer CLUT (Grafiksysteme bis 8 Planes d.h. 256 Farben)
wirken sich die Einstellungen sofort auf alle Punkte aus, die bisher auf dem
Bildschirm mit dem Farbindex (!I)index(!i) gezeichnet wurden.

(!B)Wichtig:(!b) Aus diesem Grund sollten die ersten 16 Farbnummern nicht
verÑndert werden, da diese vom AES benutzt werden.

Bei mehr als 256 gleichzeitig darstellbaren Farben benutzen Grafiksysteme in
der Regel keine CLUT sondern eine direkte RGB-Zuordnung pro Pixel. Die
einzelnen Pixel enthalten dann statt eines Farbindex einen direkten RGB-Wert
(z.B. je 8 Bit fÅr R,G und B und 8 Bit Overlay). Bei einer solchen
Organisation stellt das VDI pro Workstation 256 lokale Farbstifte und eine
Pseudopalette zur VerfÅgung, fÅr die man  mit vs_color() die Farbwerte
setzen kann. Eine énderung  wirkt sich also erst dann aus, wenn man wieder
mit dem Farbstift zeichnet und wirkt sich immer nur auf die mit
(!I)handle(!i) bezeichnete Workstation aus.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vs_color])   ~   v_pline  ~      v_pmarker ~     v_gtext ~
v_fillarea ~  v_cellarray  ~  v_contourfill ~ vr_recfl ~
v_bar    ~    v_arc     ~     v_pieslice ~    v_circle ~
v_ellarc ~    v_ellpie   ~    v_ellipse  ~    v_rbox ~
v_rfbox  ~   v_justified ~   vq_color    ~   vq_scrninfo

(!ende_liste)
!end_node



!begin_node Bindings fÅr vs_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vs_color ( WORD handle, WORD index, WORD *rgb_in );

!item [Implementierung:]
!begin_verbatim
VOID vs_color (WORD handle, WORD index, WORD *rgb_in)
{
   WORD i;

   intin[0] = index;

   for (i=1; i<4; i++)
      intin[i] = *rgb_in++;

   contrl[0] = 14;
   contrl[1] = 0;
   contrl[3] = 4;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 14    Opcode der Funktion
contrl+2  !! contrl[1]   !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 4     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! index
intin+2   !! intin[1..3] !! rgb_in[0..2]
!end_table

(!ende_liste)
!end_node


!begin_node vs_color2

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Color Representation-2Æ - FarbintensitÑt und Farbe fÅr Attribute
festlegen.

!item [VDI-Nummer:]
138 (Opcode 0,1,2)

!item [Binding:]
(!link [Bindings fÅr vs_color2] [Bindings fÅr vs_color2])

!item [Beschreibung:]
Die Funktion legt die FarbintensitÑt und Farbe fÅr bestimmte
Attributfunktionen fest. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [rgb[0!]]
Rotanteil in Promille
!item [rgb[1!]]
GrÅnanteil in Promille
!item [rgb[2!]]
Blauanteil in Promille
!item [index]
Farbnummer
!end_xlist

(!B)Hinweis:(!b) Die Funktion steht (!I)direkt(!i) nur unter PC-(!nolink [GEM]) zur
VerfÅgung. Sie kann jedoch auf dem Atari nachgebildet werden, was von
einigen Applikationen (z.B. Kandinsky und GEM auch tatsÑchlich gemacht wird.

Sie arbeitet Ñhnlich wie vs_color, mit dem Unterschied, daû bei einem Opcode
von

!begin_xlist !short
!item [0]
die Textfarbe,
!item [1]
die FÅllfarbe,
!item [2]
die Linienfarbe
!end_xlist

geÑndert wird, und somit die entsprechenden Aufrufe von vsl_color etc. nicht
mehr notwendig sind. Ob der Name der Funktion (vs_color2) wirklich stimmt,
kann mangels Dokumentation leider (!I)nicht(!i) mit Sicherheit gesagt
werden.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
Obige Aussage kann nicht bestÑtigt werden. Es ist zu vermuten das hier
eigentlich die Funktion v_setrgb gemeint. Allerdings ist die öbergabe der
Parameter etwas anderst.

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vs_color2]) ~ v_setrgb ~  vs_color   vswr_mode

(!ende_liste)
!end_node



!begin_node Bindings fÅr vs_color2
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vs_color2 ( WORD handle, WORD *rgb, WORD index );

!item [Implementierung:]
!begin_verbatim
VOID vs_color2 (WORD handle, WORD *rgb, WORD index)
{
   WORD i;

   for (i=0; i<3; i++)
      intin[i] = *rgb;	

   intin[3] = index;

   contrl[0] = 138;
   contrl[1] = 0;
   contrl[3] = 4;
   contrl[5] = opcode;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 138   Opcode der Funktion
contrl+2  !! contrl[1]   !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 4     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]   !! opcode
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0..2] !! rgb
intin+6   !! intin[3]    !! index
!end_table

(!ende_liste)
!end_node



!begin_node vs_grayoverride

(!begin_liste) [Beschreibung:]

!item [Name:]
ØÆ -

!item [VDI-Nummer:]
133

!item [Binding:]
(!link [Bindings fÅr vs_grayoverride] [Bindings fÅr vs_grayoverride])

!item [Beschreibung:]
This call overrides the geay level specified with the vsf_style call patterns
2,1 through 2,8. The application should specify the closest index in the normal
fill pattern set and follow it with a vs_grayoverride call to "fine-tune" that gray
level one devices that support such fine tuning. This call is currently implemented
in the PostScript driver.

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [grayval]
Gray value in tenths of a percent (!nl)
~~~0 ~white (!nl)
1000 ~black
!end_xlist

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
(!nolink [GEM])/3 Release 3.1

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vs_grayoverride]) 

(!ende_liste)
!end_node



!begin_node Bindings fÅr vs_grayoverride
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vs_grayoverride ( WORD handle, WORD grayval );

!item [Implementierung:]
!begin_verbatim
VOID vs_grayoverride (WORD handle, WORD grayval)
{
   intin[0] = grayval;

   contrl[0] = 133;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 133   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! grayval
!end_table

(!ende_liste)
!end_node




!begin_node vswr_mode
!label Schreibmodus

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet writing ModeÆ - bestimmt den Schreibmodus fast aller Grafikfunktionen.

!item [VDI-Nummer:]
32

!item [Binding:]
(!link [Bindings fÅr vswr_mode] [Bindings fÅr vswr_mode])

!item [Beschreibung:]
Die Funktion bestimmt, auf welche Art Quellpixel und Zielpixel verknÅpft
werden, um die resultierenden Farbwerte zu ermitteln. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [mode]
Schreibmodus
!begin_xlist !short
!item [1 =]
Replace
!item [2 =]
Transparent
!item [3 =]
XOR
!item [4 =]
Reverse Transparent
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Der normale Schreibmodus ist der Replace-Modus. Die Anzahl
der verfÅgbaren Modi kann Åber die Funktion vq_extnd ermittelt werden; bei
öbergabe eines nicht vorhandenen Modus wird der Replace-Modus benutzt.

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich eingestellten Schreibmodus.

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vswr_mode])   ~    v_pline  ~      v_pmarker ~  v_gtext ~
v_fillarea ~   v_contourfill ~ vr_recfl ~   v_bar ~
v_arc      ~   v_pieslice   ~  v_circle ~   v_ellarc ~
v_ellpie  ~    v_ellipse    ~  v_rbox   ~   v_rfbox ~
v_justified

(!ende_liste)
!end_node



!begin_node Bindings fÅr vswr_mode
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vswr_mode ( WORD handle, WORD mode );

!item [Implementierung:]
!begin_verbatim
WORD vswr_mode (WORD handle, WORD mode)
{
   intin[0] = mode;

   contrl[0] = 32;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 32    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! mode
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



### Linienattribute



!begin_node v_bez_qual

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Bezier qualityÆ - QualitÑt der Bezier-Spline-Erzeugung setzen.

!item [VDI-Nummer:]
5 (Escape 99, Opcode 32)

!item [Binding:]
(!link [Bindings fÅr v_bez_qual] [Bindings fÅr v_bez_qual])

!item [Beschreibung:]
Die Funktion setzt einen neuen Faktor, der die QualitÑt und Geschwindigkeit
bestimmt, mit der Bezier-Splines gezeichnet werden. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [qual]
gewÅnschte QualitÑt in Prozent
!item [set_qual]
eingestellte QualitÑt in Prozent (Steht bei (!nolink [GEM])/3 Release 3.1 nicht zur VerfÅgung).
!end_xlist

(!B)Hinweis:(!b) Die QualitÑt der Beziers kann wie Åblich in Prozent (d.h.
von 0 bis 100) eingestellt werden.

!item [Ergebnis:]
Die Funktion liefert den alten QualitÑts-Faktor zurÅck.

!item [VerfÅgbar:]
ab (!nolink [GEM])/3 Release 3.1, ab SpeedoGDOS 4.00 und ab NVDI 2.10.

Das (!nolink [GEM])/3 und NVDI Binding liefert set_qual zusÑtzlich
als Returnwert zurÅck.

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_bez_qual])  ~ v_bez_on   ~  v_bez_off  ~  v_bez
v_bez_fill ~  v_set_app_buff

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_bez_qual
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD v_bez_qual ( WORD handle, WORD qual, WORD *set_qual );

FÅr GEM/3 Release 3.1 gilt: (!nl)
WORD v_bez_qual ( WORD handle, WORD qual );

!item [Implementierung:]
!begin_verbatim
WORD v_bez_qual (WORD handle, WORD qual, WORD *set_qual)
{
   intin[0] = 32;
   intin[1] = 1;
   intin[2] = qual;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[5] = 99;
   contrl[6] = handle;

   vdi ();

   *set_qual = intout[0];
   
   return intout[0];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 5    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 3     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 99    Unterfunktion
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! 32
intin+2   !! intin[1]  !! 1
intin+4   !! intin[2]  !! qual
intout    !! intout[0] !! set_qual
!end_table

(!ende_liste)
!end_node



!begin_node vsl_bg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Background ColorÆ - Hintergrundfarbe setzen

!item [VDI-Nummer:]
201 (Unterfunktion 2)

!item [Binding:]
(!link [Bindings fÅr vsl_bg_color] [Bindings fÅr vsl_bg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Hintergrundfarbe fÅr Linien.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Hintergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_bg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_bg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsl_bg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsl_bg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 201;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 2;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 201   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 2
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vsl_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Polyline Color IndexÆ - setzt die Linienfarbe.

!item [VDI-Nummer:]
17

!item [Binding:]
(!link [Bindings fÅr vsl_color] [Bindings fÅr vsl_color])

!item [Beschreibung:]
Die Funktion wÑhlt die Linien-Farbe. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_index]
Linienfarbe
!end_xlist

(!B)Hinweis:(!b) Die Farb-Indizes 0 und 1 sind auf allen GerÑten verfÅgbar;
alle anderen Werte hÑngen vom jeweiligen AusgabegerÑt ab.

Bei ungÅltigem Index wird die Linienfarbe auf den Wert 1 gesetzt.

!item [Ergebnis:]
Die Funktion liefert die tatsÑchlich gesetzte Linienfarbe.

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_color]) ~  v_pline ~  v_arc ~  v_ellarc ~  v_rbox

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsl_color ( WORD handle, WORD color_index );

!item [Implementierung:]
!begin_verbatim
WORD vsl_color (WORD handle, WORD color_index)
{
   intin[0] = color_index;

   contrl[0] = 17;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 17    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! color_index
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsl_ends

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Polyline End StylesÆ - setzt die Form der Linienenden.

!item [VDI-Nummer:]
108

!item [Binding:]
(!link [Bindings fÅr vsl_ends] [Bindings fÅr vsl_ends])

!item [Beschreibung:]
Die Funktion legt das Aussehen der Linien-Enden fest. Es gilt:

!begin_xlist !short [beg_style]
!item [Parameter]
Bedeutung                  Symbole
!item [~]
~
!item [handle]
Kennung der Workstation
!item [beg_style]
Anfang der Linie
(!nl)
!ifdest [html]
!ifset [No_Bilder_Pfad]
!image linien
!else
!image (!picture_path)\linien
!endif
!else
!image (!picture_path)\linien
!endif
!begin_xlist
!item [0 =]
eckig
!item [1 =]
Pfeilform
!item [2 =]
abgerundet
!end_xlist
!item [end_style]
Ende der Linie (analog)
!end_xlist

(!B)Hinweis:(!b) StandardmÑûig besitzen alle Linien einen eckigen Abschluû.
Das Ende der Linie ist bei der Pfeilspitze die Spitze selbst, bei den
abgerundeten Ecken jedoch das Zentrum des Halbkreises, welches das Ende
darstellt.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_ends]) ~  v_pline ~  v_arc ~  v_ellarc ~  v_rbox

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_ends
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vsl_ends ( WORD handle, WORD beg_style, WORD end_style );

!item [Implementierung:]
!begin_verbatim
VOID vsl_ends (WORD handle, WORD beg_style, WORD end_style)
{
   intin[0] = beg_style;
   intin[1] = end_style;

   contrl[0] = 108;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 108   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 2     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! beg_style
intin+2   !! intin[1]  !! end_style
!end_table

(!ende_liste)
!end_node



!begin_node vsl_fg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Foreground ColorÆ - Vordergrundfarbe setzen

!item [VDI-Nummer:]
200 (Unterfunktion 2)

!item [Binding:]
(!link [Bindings fÅr vsl_fg_color] [Bindings fÅr vsl_fg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Vordergrundfarbe fÅr Linien.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Vordergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_fg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_fg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsl_fg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsl_fg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 200;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 2;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 200   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 2
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vsl_type

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Polyline TypeÆ - setzt den Linientyp.

!item [VDI-Nummer:]
15

!item [Binding:]
(!link [Bindings fÅr vsl_type] [Bindings fÅr vsl_type])

!item [Beschreibung:]
Die Funktion wÑhlt die Liniendarstellung aus. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [style]
Stil der Linie
!begin_xlist !short
!item [1 =]
durchgezogen
!item [2 =]
langer Strich
!item [3 =]
punktiert
!item [4 =]
Strich, Punkt
!item [5 =]
Strich
!item [6 =]
Strich, Punkt, Punkt
!item [7 =]
frei definierbar, vsl_udsty
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Linienstile ab dem Wert 8 sind vom jeweiligen AusgabegerÑt
abhÑngig. Ist ein gewÑhlter Stil nicht verfÅgbar, so wird der Linienstil
'durchgezogen' gewÑhlt.

öber die Funktion vq_extnd kînnen die vorhandenen Linientypen ermittelt
werden.

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich eingestellten Linientyp.

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_type])  ~  v_pline ~  v_arc ~  v_ellarc ~  v_rbox
vsl_udsty

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_type
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsl_type ( WORD handle, WORD style );

!item [Implementierung:]
!begin_verbatim
WORD vsl_type (WORD handle, WORD style)
{
   intin[0] = style;

   contrl[0] = 15;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 15    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! style
intin+2   !! intin[1]  !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsl_udsty

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet User defined Line Style PatternÆ - setzt den frei definierten
Linientyp.

!item [VDI-Nummer:]
113

!item [Binding:]
(!link [Bindings fÅr vsl_udsty] [Bindings fÅr vsl_udsty])

!item [Beschreibung:]
Die Funktion legt den frei-definierbaren Linientyp von vsl_type fest. Es
gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [pattern]
Linienmuster
!end_xlist

(!B)Hinweis:(!b) Das Bit-15 des Parameters (!I)pattern(!i) legt den ersten
Punkt der Linie fest. Der Standardwert ist eine komplett durchgezogene
Linie.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_udsty]) ~  vsl_type

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_udsty
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vsl_udsty ( WORD handle, WORD pattern );

!item [Implementierung:]
!begin_verbatim
VOID vsl_udsty (WORD handle, WORD pattern)
{
   intin[0] = pattern;

   contrl[0] = 113;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 113   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! pattern
!end_table

(!ende_liste)
!end_node



!begin_node vsl_width

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Polyline WidthÆ - setzt die Linienbreite.

!item [VDI-Nummer:]
16

!item [Binding:]
(!link [Bindings fÅr vsl_width] [Bindings fÅr vsl_width])

!item [Beschreibung:]
Die Funktion setzt die Linienbreite. Es gilt:

!begin_xlist !short [Paramter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [width]
Linienbreite (ungerade)
!end_xlist

(!B)Hinweis:(!b) Die Breite der Linie bezieht sich immer auf Koordinaten in
x-Richtung. Die tatsÑchlich gesetzte Breite ist kleiner oder gleich der
gewÑhlten Breite. Die Funktion ist (!I)nicht(!i) auf allen AusgabegerÑten
verfÅgbar.

Linien die breiter als 1 Pixel sind werden von den meisten Treibern nur ohne
Muster gezeichnet.

!item [Ergebnis:]
Die Funktion liefert die tatsÑchlich eingestellte StrichstÑrke.

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_width])  ~ v_pline ~  v_arc ~  v_ellarc ~  v_rbox

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_width
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsl_width ( WORD handle, WORD width );

!item [Implementierung:]
!begin_verbatim
WORD vsl_width (WORD handle, WORD width)
{
   ptsin[0] = width;
   ptsin[1] = 0;

   contrl[0] = 16;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   return ( ptsout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 16    Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 1     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! width
ptsin+2   !! ptsin[1]  !! 0
ptsout    !! ptsout[0] !! Return-Wert
ptsout+2  !! ptsout[1] !! 0
!end_table

(!ende_liste)
!end_node



### Markierungsattribute



!begin_node vsm_bg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Background ColorÆ - Hintergrundfarbe setzen

!item [VDI-Nummer:]
201 (Unterfunktion 3)

!item [Binding:]
(!link [Bindings fÅr vsm_bg_color] [Bindings fÅr vsm_bg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Hintergrundfarbe fÅr Marker.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Hintergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsm_bg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsm_bg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsm_bg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsm_bg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 201;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 3;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 201   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 3
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vsm_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Polymarker Color IndexÆ - bestimmt die Farbe von Markierungspunkten.

!item [VDI-Nummer:]
20

!item [Binding:]
(!link [Bindings fÅr vsm_color] [Bindings fÅr vsm_color])

!item [Beschreibung:]
Die Funktion bestimmt die Farbe der Marker. Es gilt:

!begin_xlist !short [color_index]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_index]
gewÅnschte Farbe
!end_xlist

(!B)Hinweis:(!b) Die Farb-Indizes 0 und 1 sind immer verfÅgbar, alle
weiteren hÑngen vom jeweiligen AusgabegerÑt ab. Ein ungÅltiger Farbindex
wird durch den Wert 1 ersetzt.

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich gewÑhlten Farbindex.

!item [Gruppe:]
Markierungs-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsm_color]) ~  v_pmarker

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsm_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsm_color ( WORD handle, WORD color_index );

!item [Implementierung:]
!begin_verbatim
WORD vsm_color (WORD handle, WORD color_index)
{
   intin[0] = color_index;

   contrl[0] = 20;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 20    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! color_index
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsm_fg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Foreground ColorÆ - Vordergrundfarbe setzen

!item [VDI-Nummer:]
200 (Unterfunktion 3)

!item [Binding:]
(!link [Bindings fÅr vsm_fg_color] [Bindings fÅr vsm_fg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Vordergrundfarbe fÅr Marker.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Vordergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Markierungs-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsm_fg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsm_fg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsm_fg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsm_fg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 200;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 3;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 200   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 3
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vsm_height

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Polymarker HeightÆ - bestimmt die Hîhe von Markierungspunkten.

!item [VDI-Nummer:]
19

!item [Binding:]
(!link [Bindings fÅr vsm_height] [Bindings fÅr vsm_height])

!item [Beschreibung:]
Die Funktion setzt die Hîher der Marker. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [height]
Hîhe der Marker bzgl. y-Richtung
!end_xlist

Die Anzahl der verfÅgbaren Hîhen kann beim ôffnen der virtuellen Workstation
per v_opnvwk ermittelt werden.

(!B)Hinweis:(!b) Die Breite der Marker wird automatisch angepaût. Bei einer
ungÅltigen Hîhe wird vom VDI die nÑchst passende gewÑhlt. Der Punkt kann in
seiner Grîûe (!I)nicht(!i) verÑndert werden.

!item [Ergebnis:]
Die Funktion liefert die tatsÑchlich gewÑhlte Grîûe.

!item [Gruppe:]
Markierungs-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsm_height]) ~  v_pmarker

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsm_height
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsm_height ( WORD handle, WORD height );

!item [Implementierung:]
!begin_verbatim
WORD vsm_height (WORD handle, WORD height)
{
   ptsin[0] = 0;
   ptsin[1] = height;

   contrl[0] = 19;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   return ( ptsout[1] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 19    Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 1     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! 0
ptsin+2   !! ptsin[1]  !! height
ptsout    !! ptsout[0] !! set_height_x
ptsout+2  !! ptsout[1] !! Return-Wert
!end_table

(!B)Hinweis:(!b) Die Komponente (!I)set_height_x(!i) beschreibt die
ausgewÑhlte Markerhîhe bzgl. der x-Richtung; in PC-GEM wird stets der Wert 0
geliefert.

(!ende_liste)
!end_node



!begin_node vsm_type

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Polymarker TypeÆ - bestimmt die Art der Markierungspunkte

!item [VDI-Nummer:]
18

!item [Binding:]
(!link [Bindings fÅr vsm_type] [Bindings fÅr vsm_type])

!item [Beschreibung:]
Die Funktion bestimmt das Aussehen der Marker. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung                  Symbole
!item [~]
~
!item [handle]
Kennung der Workstation
!item [typ]
Typ des Markers
@image @:"picture_path"\marker.img 58 3 3               
!ifdest [html]
!ifset [No_Bilder_Pfad]
!image marker
!else
!image (!picture_path)\marker
!endif
!else
!image (!picture_path)\marker
!endif
!begin_xlist !short
!item [1 =]
Punkt (feste Grîûe)
!item [2 =]
Plus
!item [3 =]
Stern
!item [4 =]
Quadrat
!item [5 =]
Andreaskreuz
!item [6 =]
Raute
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Bei öbergabe einer ungÅltigen Nummer wird der dritte Typ
gewÑhlt. Der Punkt kann in seiner Grîûe (!I)nicht(!i) verÑndert werden. Auf
bestimmten GerÑten kînnen weitere Marker-Typen existieren.

!item [Ergebnis:]
Die Funktion liefert die tatsÑchlich ausgewÑhlte Markierung.

!item [Gruppe:]
Markierungs-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsm_type]) ~  v_pmarker ~  vsm_height

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsm_type
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsm_type ( WORD handle, WORD typ );

!item [Implementierung:]
!begin_verbatim
WORD vsm_type (WORD handle, WORD typ)
{
   intin[0] = typ;

   contrl[0] = 18;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 18    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! type
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



### Textattribute



!begin_node v_topbot

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Character Height, absolute ModeÆ - bestimmt die Zeichenhîhe bei
Textausgaben.

!item [VDI-Nummer:]
5 (Escape 18501)

!item [Binding:]
(!link [Bindings fÅr v_topbot] [Bindings fÅr v_topbot])

!item [Beschreibung:]
This call is an alternative to vst_height. It uses top to bottom distance for
text scaling, instead of top to baseline distance.

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [height]
Zeichenhîhe
!item [char_width]
gewÑhlte Zeichenbreite
!item [char_height]
gewÑhlte Zeichenhîhe
!item [cell_width]
Zeichenzellenbreite
!item [cell_height]
Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Falls die gewÅnschte Zeichenhîhe nicht verfÅgbar ist, wird
automatisch die nÑchstkleinere gewÑhlt. Bei Proportionalfonts enthalten die
Ausgabeparameter die Breite des breitesten Zeichens im Zeichensatz.

Die meisten Bildschirmtreiber kînnen bei dieser Funktion vorhandene
ZeichensÑtze beliebig verkleinern, oder auf das doppelte vergrîûern. Dies
gilt insbesondere fÅr den im ROM implementierten Bildschirmtreiber.

Bei Vektorfonts stellen die ausgegebenen Breiten von (!I)char_width(!i) und
(!I)cell_width(!i) gerundete Werte dar.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
(!nolink [GEM])/3 Release 3.1

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_topbot]) ~ v_gtext ~ v_justified ~ vst_point ~ vst_height

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_topbot
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID v_topbot ( WORD handle, WORD height, WORD *char_width,
                WORD *char_height, WORD *cell_width, WORD *cell_height );

!item [Implementierung:]
!begin_verbatim
VOID v_topbot (WORD handle, WORD height, WORD *char_width,
               WORD *char_height, WORD *cell_width, WORD *cell_height)
{
   ptsin[0] = 0;
   ptsin[1] = height;

   contrl[0] = 5;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[5] = 18501;
   contrl[6] = handle;

   vdi ();

   *char_width  = ptsout[0];
   *char_height = ptsout[1];
   *cell_width  = ptsout[2];
   *cell_height = ptsout[3];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 5     Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 4     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+10 !! contrl[5] !! 18501
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! 0
ptsin+2   !! ptsin[1]  !! height
ptsout    !! ptsout[0] !! char_width
ptsout+2  !! ptsout[1] !! char_height
ptsout+4  !! ptsout[2] !! cell_width
ptsout+6  !! ptsout[3] !! cell_height
!end_table

(!ende_liste)
!end_node




!begin_node vst_alignment

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Graphic Text AlignmentÆ - bestimmt die Ausrichtung fÅr Textausgaben.

!item [VDI-Nummer:]
39

!item [Binding:]
(!link [Bindings fÅr vst_alignment] [Bindings fÅr vst_alignment])

!item [Beschreibung:]
Die Funktion bestimmt die horizontale und vertikale Ausrichtung eines
Textes.

!ifdest [html]
!ifset [No_Bilder_Pfad]
!image aligment
!else
!image (!picture_path)\aligment
!endif
!else
!image (!picture_path)\aligment
!endif

(!U)Beispiel:(!u)

(!B)Der Funktion werden folgende Parameter Åbergeben:(!b)

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [hor_in]
(!B)horizontale (!nolink [Ausrichtung])(!b)
!begin_xlist !short
!item [0 =]
linksbÅndig (default)
!item [1 =]
zentriert
!item [2 =]
rechtsbÅndig
!end_xlist
!item [vert_in]
(!B)vertikale (!nolink [Ausrichtung])(!b)
!begin_xlist !short
!item [0 =]
Basislinie (default)
!item [1 =]
Halblinie
!item [2 =]
Zeichenoberkante
!item [3 =]
Zeichenzellenunterkante
!item [4 =]
Zeichenunterkante
!item [5 =]
Zeichenzellenoberkante
!end_xlist
!item [hor_out]
ausgewÑhlte horizontale Ausrichtung
!item [vert_out]
ausgewÑhlte vertikale Ausrichtung               
!end_xlist

(!B)Hinweis:(!b) Standardeinstellung ist der linke Rand der Basislinie. Bei
falscher Eingabe fÅr die horizontale (!nolink [Ausrichtung]) wird der Text
linksjustiert. Eine fehlerhafte Angabe der vertikalen (!nolink [Ausrichtung]) bewirkt
(!nolink [Ausrichtung]) an der Basislinie.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_alignment]) ~  v_gtext ~  v_justified

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_alignment
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_alignment ( WORD handle, WORD hor_in, WORD vert_in, WORD *hor_out,
                     WORD *vert_out );

!item [Implementierung:]
!begin_verbatim
VOID vst_alignment (WORD handle, WORD hor_in, WORD vert_in,
                    WORD *hor_out, WORD *vert_out)
{
   intin[0] = hor_in;
   intin[1] = vert_in;

   contrl[0] = 39;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *hor_out  = intout[0];
   *vert_out = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 39    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 2     # EintrÑge in intin
contrl+8  !! contrl[4] !! 2     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! hor_in
intin+2   !! intin[1]  !! vert_in
intout    !! intout[0] !! hor_out
intout+2  !! intout[1] !! vert_out
!end_table

(!ende_liste)
!end_node



!begin_node vst_arbpt

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet character cell height by arbitrary pointsÆ - Setzen der
Zeichenzellenhîhe in Punkten.

!item [VDI-Nummer:]
246

!item [Binding:]
(!link [Bindings fÅr vst_arbpt] [Bindings fÅr vst_arbpt])

!item [Beschreibung:]
Die Funktion setzt die aktuelle Zeichenhîhe in Printerpunkten. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [point]
gewÅnschte Zeichenhîhe
!item [chwd]
resultierende Zeichenbreite
!item [chht]
resultierende Zeichenhîhe
!item [cellwd]
resultierende Zeichenzellenbreite
!item [cellht]
resultierende Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Im Gegensatz zu vst_point erlaubt die Funktion die
Skalierung in (!I)jeder(!i) Punktgrîûe, unabhÑngig davon, welche Angaben in
EXTEND.SYS stehen. 

Wenn man negative Werte einstellt, werden die Zeichen an der x-Achse
gespiegelt. Bei den zurÅckgelieferten Zeichenbreiten handelt es sich um
gerundete Werte, die man nicht ohne weiteres zur Breitenberechnung benutzen
kann.

!item [Ergebnis:]
Die Funktion liefert die gesetzte Zeichenhîhe in Punkten zurÅck.


!item [VerfÅgbar:]
ab SpeedoGDOS 4.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_arbpt]) ~  vst_arbpt32 ~ vst_point ~  vst_setsize ~  SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_arbpt
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_arbpt ( WORD handle, WORD point, WORD *chwd,
                    WORD *chht, WORD *cellwd, WORD *cellht );

!item [Implementierung:]
!begin_verbatim
WORD vst_arbpt (WORD handle, WORD point, WORD *chwd, WORD *chht,
                WORD *cellwd, WORD *cellht)
{
   intin[0] = point;

   contrl[0] = 246;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 246   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 1     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]  !! point
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwd
ptsout+6  !! ptsout[3]    !! cellht
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vst_arbpt32

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet character cell height by arbitrary pointsÆ - Setzen der
Zeichenzellenhîhe in Punkten.

!item [VDI-Nummer:]
246

!item [Binding:]
(!link [Bindings fÅr vst_arbpt32] [Bindings fÅr vst_arbpt32])

!item [Beschreibung:]
Die Funktion setzt die aktuelle Zeichenhîhe in Printerpunkten. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [point]
gewÅnschte Zeichenhîhe
!item [chwd]
resultierende Zeichenbreite
!item [chht]
resultierende Zeichenhîhe
!item [cellwd]
resultierende Zeichenzellenbreite
!item [cellht]
resultierende Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Im Gegensatz zu vst_point erlaubt die Funktion die
Skalierung in (!I)jeder(!i) Punktgrîûe, unabhÑngig davon, welche Angaben in
EXTEND.SYS stehen. 

Wenn man negative Werte einstellt, werden die Zeichen an der x-Achse
gespiegelt. Bei den zurÅckgelieferten Zeichenbreiten handelt es sich um
gerundete Werte, die man nicht ohne weiteres zur Breitenberechnung benutzen
kann.

!item [Ergebnis:]
Die Funktion liefert die gesetzte Zeichenhîhe in 1/65536 Punkten zurÅck.

Aus der SpeedoGDOS Dokumentation geht das nicht hervor. Es ist mîglich das hier nur
die Zeichenhîhe in Punkte zurÅckgeliefert wird.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00 und ab NVDI 3.00. In der Doku zu NVDI 3.00 wird die Funktion
fÑlschlicherweise vst_arbpt genannt.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_arbpt32]) ~  vst_point ~  vst_setsize ~  SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_arbpt32
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
fix31 vst_arbpt32 ( WORD handle, fix31 point, WORD *chwd,
                    WORD *chht, WORD *cellwd, WORD *cellht );

!item [Implementierung:]
!begin_verbatim
fix31 vst_arbpt32 (WORD handle, fix31 point, WORD *chwd, WORD *chht,
                   WORD *cellwd, WORD *cellht)
{
   intin[0..1] = point;

   contrl[0] = 246;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0..1] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 246   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 2     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 2     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! point
intout    !! intout[0..1] !! Return-Wert
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwe
ptsout+6  !! ptsout[3]    !! cellht
!end_table
(!ende_liste)
!end_node

!begin_node vst_bg_color
(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Background ColorÆ - Hintergrundfarbe setzen

!item [VDI-Nummer:]
201 (Unterfunktion 0)

!item [Binding:]
(!link [Bindings fÅr vst_bg_color] [Bindings fÅr vst_bg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Hintergrundfarbe fÅr Text.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Hintergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_bg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_bg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_bg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vst_bg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 201;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 0;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 201   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 0
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vst_charmap

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet character mapping modeÆ - wÑhlt die Art der Zeichensatzindizierung

!item [VDI-Nummer:]
236

!item [Binding:]
(!link [Bindings fÅr vst_charmap] [Bindings fÅr vst_charmap])

!item [Beschreibung:]
Die Funktion legt die Art der Zeichensatzindizierung fest. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [mode]
Art der Indizierung
!begin_xlist !short
!item [0 =]
direktes Mapping, d.h. keine Umsetzung des Zeichen-Index
!item [1 =]
Zeichen-Index wird als ASCII-Wert interpretiert
!end_xlist
!end_xlist
FÅr SppedoGDOS gilt:
!begin_xlist !short [Parameter]
!item [mode]
Art der Indizierung
!begin_xlist !short
!item [0 =]
Atari characters
!item [1 =]
Bitstream
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Durch Umschalten auf direktes (!nolink [Mapping]) Ñndert sich die
Anzahl der vorhandenen Zeichen pro Font von 256 auf die tatsÑchlich
verfÅgbare Zahl an Zeichen.

Ab NVDI 4.00 gibt es einer erweiterte Version: vst_map_mode

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck

!item [VerfÅgbar:]
SpeedoGDOS 4.0, NVDI 3.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_charmap]) ~ vst_map_mode ~  vqt_fontinfo ~  ASCII-Tabelle

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_charmap
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_charmap ( WORD handle, WORD mode );

!item [Implementierung:]
!begin_verbatim
VOID vst_charmap (WORD handle, WORD mode)
{
   intin[0] = mode;

   contrl[0] = 236;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 236   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! mode
!end_table

(!ende_liste)
!end_node



!begin_node vst_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Graphic Text Color IndexÆ - bestimmt die Farbe der Textausgaben.

!item [VDI-Nummer:]
22

!item [Binding:]
(!link [Bindings fÅr vst_color] [Bindings fÅr vst_color])

!item [Beschreibung:]
Die Funktion setzt die Text-Farbe. Es gilt:

!begin_xlist !short [color_index]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_index]
gewÅnschte Textfarbe
!end_xlist

(!B)Hinweis:(!b) Die Farb-Indizes 0 und 1 sind immer verfÅgbar; alle
weiteren sind vom verwendeten AusgabegerÑt abhÑngig. Bei Angabe eines
ungÅltigen Indexes wird der Wert 1 angenommen.

!item [Ergebnis:]
Die Funktion liefert die tatsÑchlich eingestellte Farbe.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_color]) ~  v_gtext ~  v_justified

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_color ( WORD handle, WORD color_index );

!item [Implementierung:]
!begin_verbatim
WORD vst_color (WORD handle, WORD color_index)
{
   intin[0] = color_index;

   contrl[0] = 22;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 22    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! color_index
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vst_effects
!label Texteffekte

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Graphic Text Special EffectsÆ - legt Spezialeffekte fÅr Textausgaben
fest.

!item [VDI-Nummer:]
106

!item [Binding:]
(!link [Bindings fÅr vst_effects] [Bindings fÅr vst_effects])

!item [Beschreibung:]
Die Funktion legt verschiedene Texteffekte fest. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [effect]
Texteffekt in Bit-Darstellung
!begin_xlist !short
!item [0x00 =]
normal
!item [0x01 =]
fett
!item [0x02 =]
hell
!item [0x04 =]
kursiv
!item [0x08 =]
unterstrichen
!item [0x10 =]
hohl
!item [0x20 =]
schattiert
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Die Texteffekte kînnen durch eine Oder-VerknÅpfung auch
gemischt werden; nicht verfÅgbare Effekte werden nicht gesetzt.

!item [Ergebnis:]
Die Funktion liefert den ausgewÑhlten Texteffekt.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_effects]) ~  v_gtext ~  v_justified

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_effects
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_effects ( WORD handle, WORD effect );

!item [Implementierung:]
!begin_verbatim
WORD vst_effects (WORD handle, WORD effect)
{
   intin[0] = effect;

   contrl[0] = 106;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 106   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! effect
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vst_error

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Outline Font error modeÆ - Setzen der GDOS Fehlerbehandlung.

!item [VDI-Nummer:] 245

!item [Binding:]
(!link [Bindings fÅr vst_error] [Bindings fÅr vst_error])

!item [Beschreibung:]
Die Funktion bestimmt die Art der GDOS-Fehlerbehandlung. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [mode]
Art der Fehlerbehandlung
!begin_xlist !short
!item [0 =]
Ausgabe in globale Variable
!item [1 =]
Ausgabe auf Bildschirm (default)
!end_xlist
!item [errorvar]
Adresse der Fehlervariablen, die mit Null initialisiert sein sollte
Folgende Fehlercodes gibt es:
!begin_xlist !short [255 =]
!item [1 =] Out of system memory (Misc cache)
!item [2 =] Error opening font file
!item [3 =] Error reading font file
!item [4 =] Error while writiing out cache buffer
!item [5 =] Font scaler error
!item [6 =] (not implemented
!item [7 =] Not enough memory for scratch buffer
!item [8 =] Out of system memory (character cache)
!item [255 =] Misc Speedo Error
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Die Fehlervariable (!I)errorvar(!i) sollte vor dem Aufruf
der folgenden GDOS-Funktionen abgefragt werden:

!begin_verbatim
v_gtext            v_ftext
v_justified        vst_point
vst_height         vst_font
vst_arbpt          vqt_advance
vst_setsize        vqt_fontinfo
vqt_name           vqt_width
vqt_extent         vqt_f_extent
v_opnwk            v_opnvwk
vst_load_fonts     vst_unload_fonts
!end_verbatim

!item [Ergebnis:]
Diese Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_error]) ~  GDOS  ~  SpeedoGDOS

(!ende_liste)
!end_node

!begin_node Bindings fÅr vst_error
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_error ( WORD handle, WORD mode, WORD *errorvar );

!item [Implementierung:]
!begin_verbatim
VOID vst_error ( WORD handle, WORD mode, WORD *errorvar )
{
   intin[0] = mode;
   intin[1..2] = errorvar;

   contrl[0] = 245;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 245   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 1     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 3     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! mode
intin+2   !! intin[1..2]  !! errorvar
!end_table
# Quelle: contrl[2] = 1 original Doku SpeedoGDOS 4.xx
(!ende_liste)
!end_node




!begin_node vst_fg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Foreground ColorÆ - Vordergrundfarbe setzen

!item [VDI-Nummer:]
200 (Unterfunktion 0)

!item [Binding:]
(!link [Bindings fÅr vst_fg_color] [Bindings fÅr vst_fg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Vordergrundfarbe fÅr Text.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Vordergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_fg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_fg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_fg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vst_fg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 200;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 0;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 200   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 0
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vst_font

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Text FaceÆ - wÑhlt einen Zeichensatz fÅr die Textausgabe.

!item [VDI-Nummer:]
21

!item [Binding:]
(!link [Bindings fÅr vst_font] [Bindings fÅr vst_font])

!item [Beschreibung:]
Die Funktion wÑhlt einen Zeichensatz fÅr nachfolgende Textausgaben aus. Es
gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [font]
Index des Zeichensatzes
!end_xlist

(!B)Hinweis:(!b) Die Namen und Indizes der ZeichensÑtze kînnen Åber die
Funktion vqt_name ermittelt werden. Ob ZeichensÑtze unterstÅtzt werden,
hÑngt vom jeweiligen AusgabegerÑt ab.

Sollte der Zeichensatz (!I)font(!i) nicht vorhanden sein, wird auf den
Systemzeichensatz umgeschaltet.

!item [Ergebnis:]
Die Funktion liefert die Nummer des tatsÑchlich gewÑhlten Zeichensatzes.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_font])   ~   vst_load_fonts ~  vqt_name ~  v_gtext
v_justified

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_font
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_font ( WORD handle, WORD font );

!item [Implementierung:]
!begin_verbatim
WORD vst_font (WORD handle, WORD font)
{
   intin[0] = font;

   contrl[0] = 21;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 21    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! font
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vst_height

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Character Height, absolute ModeÆ - bestimmt die Zeichenhîhe bei
Textausgaben.

!item [VDI-Nummer:]
12

!item [Binding:]
(!link [Bindings fÅr vst_height] [Bindings fÅr vst_height])

!item [Beschreibung:]
Die Funktion legt die absolute Zeichenhîhe bei Textausgaben fest. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [height]
Zeichenhîhe
!item [char_width]
gewÑhlte Zeichenbreite
!item [char_height]
gewÑhlte Zeichenhîhe
!item [cell_width]
Zeichenzellenbreite
!item [cell_height]
Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Falls die gewÅnschte Zeichenhîhe nicht verfÅgbar ist, wird
automatisch die nÑchstkleinere gewÑhlt. Bei Proportionalfonts enthalten die
Ausgabeparameter die Breite des breitesten Zeichens im Zeichensatz.

Die meisten Bildschirmtreiber kînnen bei dieser Funktion vorhandene
ZeichensÑtze beliebig verkleinern, oder auf das doppelte vergrîûern. Dies
gilt insbesondere fÅr den im ROM implementierten Bildschirmtreiber.

Bei Vektorfonts stellen die ausgegebenen Breiten von (!I)char_width(!i) und
(!I)cell_width(!i) gerundete Werte dar.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_height]) ~ v_gtext ~ v_justified ~ vst_point

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_height
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_height ( WORD handle, WORD height, WORD *char_width,
                  WORD *char_height, WORD *cell_width, WORD *cell_height );

!item [Implementierung:]
!begin_verbatim
VOID vst_height (WORD handle, WORD height, WORD *char_width,
                 WORD *char_height, WORD *cell_width, WORD *cell_height)
{
   ptsin[0] = 0;
   ptsin[1] = height;

   contrl[0] = 12;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *char_width  = ptsout[0];
   *char_height = ptsout[1];
   *cell_width  = ptsout[2];
   *cell_height = ptsout[3];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 12    Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! 0
ptsin+2   !! ptsin[1]  !! height
ptsout    !! ptsout[0] !! char_width
ptsout+2  !! ptsout[1] !! char_height
ptsout+4  !! ptsout[2] !! cell_width
ptsout+6  !! ptsout[3] !! cell_height
!end_table

(!ende_liste)
!end_node



!begin_node vst_kern

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet kerning modeÆ - (!nolink [Kerning]) Modus setzen

!item [VDI-Nummer:]
237

!item [Binding:]
(!link [Bindings fÅr vst_kern] [Bindings fÅr vst_kern])

!item [Beschreibung:]
Die Funktion erlaubt das Setzen des gewÅnschten Kerning-Modus. Es gilt:

!begin_xlist
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [tmode]
Track-Kerning
!begin_xlist !short
!item [0 =]
kein (!nolink [Kerning])
!item [1 =]
normales (!nolink [Kerning])
!item [2 =]
enges (!nolink [Kerning])
!item [3 =]
sehr enges Kerning
!end_xlist

!item [pmode]
Pair-Kerning
!begin_xlist !short
!item [0 =]
ausschalten
!item [1 =]
einschalten
!end_xlist
!item [tracks]
gesetzter Track-Kerning Modus

!item [pairs]
Anzahl der (!nolink [Kerning])-Paare im Zeichensatz
!end_xlist

(!B)Hinweis:(!b) Informationen fÅr Track-Kerning sind in den meisten
Speedo-Fonts enthalten. TrueType-Fonts bieten normalerweise kein
(!nolink [Track-Kerning]); anders ist dies jedoch bei den neuen TrueType-GX-Fonts.

Unter NVDI kann per vst_track_offset ein selbstdefiniertes (!nolink [Track-Kerning])
eingestellt werden.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00 und ab NVDI 3.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_kern])  ~ vqt_pairkern ~ vqt_trackkern ~
vst_track_offset

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_kern
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_kern ( WORD handle, WORD tmode, WORD pmode,
                WORD *tracks, WORD *pairs );

!item [Implementierung:]
!begin_verbatim
VOID vst_kern (WORD handle, WORD tmode, WORD pmode,
               WORD *tracks, WORD *pairs)
{
   intin[0] = tmode;
   intin[1] = pmode;

   contrl[0] = 237;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *tracks = intout[0];
   *pairs  = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 237   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 2     # EintrÑge in intin
contrl+8  !! contrl[4] !! 2     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! tmode
intin+2   !! intin[1]  !! pmode
intout    !! intout[0] !! tracks
intout+2  !! intout[1] !! pairs
!end_table

(!ende_liste)
!end_node



!begin_node vst_map_mode

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet character mapping modeÆ - wÑhlt die Art der Zeichensatzindizierung

!item [VDI-Nummer:]
236

!item [Binding:]
(!link [Bindings fÅr vst_map_mode] [Bindings fÅr vst_map_mode])

!item [Beschreibung:]
Die Funktion legt die Art der Zeichensatzindizierung fest. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [mode]
Art der Indizierung
!begin_xlist !short
!item [0 =]
direktes Mapping, d.h. keine Umsetzung des Zeichen-Index
!item [1 =]
ASCII-Wert
!item [2 =]
Unicode
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Durch Umschalten auf direktes (!nolink [Mapping]) Ñndert sich die
Anzahl der vorhandenen Zeichen pro Font von 256 auf die tatsÑchlich
verfÅgbare Zahl an Zeichen.

Wenn man Unicode anwÑhlt und feststellen mîchte, ob ein bestimmtes Zeichen
im eingestellten Font existiert, kann man vqt_width fÅr dieses Zeichen
aufrufen. Sollte (!nolink [vqt_width]) als Index -1 zurÅckliefern, existiert das Zeichen
nicht. Alternativ zu (!nolink [vqt_width]) kann man auch vqt_char_index aufrufen und den
fraglichen Unicode in einen direkten Index wandeln lassen.

!item [Ergebnis:]
Die Funktion liefert das ausgewÑhlte (!nolink [Mapping]).

!item [Gruppe:]
Text-Attribute

!item [VerfÅgbar:]
NVDI 4.0

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_map_mode]) ~ vst_charmap ~ vqt_fontinfo ~  ASCII-Tabelle

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_map_mode
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_map_mode ( WORD handle, WORD mode );

!item [Implementierung:]
!begin_verbatim
WORD vst_charmap (WORD handle, WORD mode)
{
   intin[0] = mode;
   intin[1] = 1;       /* Mapping zurÅckliefern */

   contrl[0] = 236;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 236   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 2     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! mode
intin+2   !! intin[1]  !! 1
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node


!begin_node vst_name

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet text face by nameÆ - Zeichensatz suchen und einstellen

!item [VDI-Nummer:]
230 (Opcode 0)

!item [Binding:]
(!link [Bindings fÅr vst_name] [Bindings fÅr vst_name])

!item [Beschreibung:]
Die Funktion sucht einen Zeichensatz, und stellt ihn ein. Es gilt:

!begin_xlist !short [font_format]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [font_format]
gewÅnschtes Zeichensatz-Format
!begin_xlist !short
!item [1 =]
Bitmap-Font
!item [2 =]
Speedo
!item [4 =]
TrueType
!item [8 =]
Type-1
!end_xlist
!item [font_name]
gewÅnschter Zeichensatz-Name
!item [ret_name]
Name des eingestellten Fonts
!end_xlist

(!B)Hinweis:(!b) Fehlende oder ÅberschÅssige Leerzeichen werden bei der
Suche ignoriert. Wenn in den angegebenen Formaten kein Zeichensatz des
gesuchten Namens vorhanden ist, wird der System-Font gesetzt.

Die Funktion steht unter NVDI ab Version 3.02 zur VerfÅgung.

!item [Ergebnis:]
Die Funktion liefert die ID des eingestellten Zeichensatzes zurÅck.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_name]) ~  vqt_name ~  vqt_xfntinfo

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_name
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_name ( WORD handle, WORD font_format, 
                BYTE *font_name, BYTE *ret_name );

!item [Implementierung:]
!begin_verbatim
WORD vst_name (WORD handle, WORD font_format, BYTE *font_name,
               BYTE *ret_name)
{
   intin[0] = font_format;
   intin[1..n] = font_name[0..n-1];

   contrl[0] = 230;
   contrl[1] = 0;
   contrl[3] = n;
   contrl[5] = 0;
   contrl[6] = handle;

   vdi ();

   ret_name[0..m-1] = intout[1..m];
   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 230   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! n     # EintrÑge in intin
contrl+8  !! contrl[4]    !! m     # EintrÑge in intout
contrl+10 !! contrl[5]    !! 0     Unterfunktion
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! font_format
intin+2   !! intin[1..n]  !! font_name[0..n-1]
intout    !! intout[0]    !! Return-Wert
intout+2  !! intout[1..m] !! ret_name[0..m-1]
!end_table

(!ende_liste)
!end_node



!begin_node vst_point

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Character Height, Points ModeÆ - bestimmt die Zeichenzellengrîûe bei
Textausgaben.

!item [VDI-Nummer:]
107

!item [Binding:]
(!link [Bindings fÅr vst_point] [Bindings fÅr vst_point])

!item [Beschreibung:]
Die Funktion setzt die Zeichenzellengrîûe, d.h. den Abstand zweier
Basislinien. Es gilt:

!begin_xlist !short [cell_height]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation  
!item [point]
Zeichenzellenhîhe
!item [char_width]
gewÑhlte Zeichenbreite
!item [char_height]
gewÑhlte Zeichenhîhe
!item [cell_width]
gewÑhlte Zeichenzellenbreite
!item [cell_height]
gewÑhlte Zeichenzellenhîhe
!end_xlist

Der Abstand wird in Point gemessen. Hierunter versteht man 1/72 Zoll oder
ca. 0.353mm.

(!B)Hinweis:(!b) Falls die gewÅnschte Zeichenhîhe nicht verfÅgbar ist, wird
die nÑchstkleinere gewÑhlt. Bei proportionalen ZeichensÑtzen werden fÅr
Breite/Hîhe die maximal mîglichen Werte zurÅckgeliefert.

Bei Vektorfonts kann man mit dieser Funktion nur die vordefinierten Hîhen
anwÑhlen (in der Regel sind das 8,9,10,11,12,14,18,24,36, und 48 pt).

(!B)Achtung:(!b) Der Bildschirmtreiber im ROM kann vorhandene ZeichensÑtze
auf die jeweils doppelte Grîûe skalieren, so daû es (!I)nicht(!i) ohne
weiteres mîglich ist, zwischen skalierten und tatsÑchlich vorhandenen Fonts
zu unterscheiden. Man kann sich hier mit einer Routine behelfen, die alle
(!I)vorhandenen(!i) Punktgrîûen ermittelt, da vst_point bei Angabe einer
falschen Grîûe die nÑchstkleinere und vorhandene Grîûe wÑhlt. Wenn man auf
diese Art und Weise feststellt, daû (!I)alle(!i) Punktgrîûen vorhanden sind,
liegt offensichtlich ein Vektorfont vor.

!item [Ergebnis:]
Die Funktion liefert die Zeichenzellenhîhe in Point.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_point]) ~ v_gtext ~ v_justified ~ vst_height

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_point
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_point ( WORD handle, WORD point, WORD *char_width,
                 WORD *char_height, WORD *cell_width, WORD *cell_height );

!item [Implementierung:]
!begin_verbatim
WORD vst_point (WORD handle, WORD point, WORD *char_width,
                WORD *char_height, WORD *cell_width,
                WORD *cell_height)
{
   intin[0] = point;

   contrl[0] = 107;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *char_width  = ptsout[0];
   *char_height = ptsout[1];
   *cell_width  = ptsout[2];
   *cell_height = ptsout[3];

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 107   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! point
intout    !! intout[0] !! Return-Wert
ptsout    !! ptsout[0] !! char_width
ptsout+2  !! ptsout[1] !! char_height
ptsout+4  !! ptsout[2] !! cell_width
ptsout+6  !! ptsout[3] !! cell_height
!end_table

(!ende_liste)
!end_node



!begin_node vst_rotation

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Character Baseline VectorÆ - Bestimmt die Ausrichtung der Basislinie
fÅr Textausgaben.

!item [VDI-Nummer:]
13

!item [Binding:]
(!link [Bindings fÅr vst_rotation] [Bindings fÅr vst_rotation])

!item [Beschreibung:]
Die Funktion legt die (!nolink [Ausrichtung]) der Basislinie fÅr Textausgaben fest. Es
gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [angle]
gewÅnschte (!nolink [Ausrichtung]) der Basislinie
!end_xlist

(!B)Hinweis:(!b) Der Winkel wird in 1/10 Grad angegeben. FÅr Bitmapfonts ist
die Rotation nur in 90-Grad-Schritten mîglich; bei Vektorfonts stufenlos.
Auf einigen GerÑten ist diese Funktion (!I)nicht(!i) verfÅgbar.

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich gewÑhlten Winkel.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_rotation]) ~  v_gtext ~  v_justified

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_rotation
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_rotation ( WORD handle, WORD angle );

!item [Implementierung:]
!begin_verbatim
WORD vst_rotation (WORD handle, WORD angle)
{
   intin[0] = angle;

   contrl[0] = 13;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 13    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! angle
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vst_scratch

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet scratch buffer allocation modeÆ - Scratch-Buffers

!item [VDI-Nummer:] 244

!item [Binding:]
(!link [Bindings fÅr vst_scratch] [Bindings fÅr vst_scratch])

!item [Beschreibung:]
Die Funktion legt die Art fest, mit der der Scratch-Buffers angelegt
werden soll. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [mode]
Art des Buffers
!begin_xlist [0 =]
!item [0 =]
BerÅcksichtigung von Bitmap- und Vektorfonts (default)
!item [1 =]
Grîûe richtet sich nach den Bitmap-Fonts. Auf Texteffekte fÅr Vektorfonts
sollte verzichtet werden.
!item [2 =]
keinen Scratch-Buffer anlegen, und auf (!nolink [Texteffekte]) verzichten
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Der Scratch-Buffer dient der Generierung von Texteffekten.
Da Vektor-ZeichensÑtze frei skalierbar sind, kann dem Scratch-Buffer keine
eindeutige Grîûe zugeordnet werden.

!item [Ergebnis:]
Diese Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_scratch]) ~  (!link [GDOS][Das GDOS])  ~
SpeedoGDOS ~  vst_effects

(!ende_liste)
!end_node

!begin_node Bindings fÅr vst_scratch
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_scratch ( WORD handle, WORD mode );

!item [Implementierung:]
!begin_verbatim
VOID vst_scratch ( WORD handle, WORD mode );
{
   intin[0] = mode;

   contrl[0] = 244;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 244   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 1     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! mode
!end_table
# Quelle: fÅr contrl[2] = 1 original SpeedoGDOS Doku 4.xx
(!ende_liste)
!end_node




!begin_node vst_setsize

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet character cell width by arbitrary pointsÆ - Setzen der
Zeichenzellenbreite in Punkten.

!item [VDI-Nummer:]
252

!item [Binding:]
(!link [Bindings fÅr vst_setsize] [Bindings fÅr vst_setsize])

!item [Beschreibung:]
Die Funktion setzt die Zeichenbreite in Pixel. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [point]
gewÅnschte Zeichenbreite
!item [chwd]
resultierende Zeichenbreite
!item [chht]
resultierende Zeichenhîhe
!item [cellwd]
resultierende Zeichenzellenbreite
!item [cellht]
resultierende Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Durch einen Aufruf von vst_point, vst_arbpt oder vst_height
wird die durch den Funktionsaufruf gesetzte Breite wieder aufgehoben, und
die vom jeweiligen Zeichen verlangte Breite eingestellt. Bei negativen
Breiten werden die Zeichen an der y-Achse gespiegelt.

!item [Ergebnis:]
Die Funktion liefert die gesetzte Zeichenzellenbreite in Pixel
zurÅck.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_setsize]) ~ vst_setsize32 ~  vst_point ~ vst_height ~  vst_arbpt

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_setsize
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_setsize ( WORD handle, WORD point, WORD *chwd, WORD *chht,
                    WORD *cellwd, WORD *cellht );

!item [Implementierung:]
!begin_verbatim
WORD vst_setsize (WORD handle, WORD point, WORD *chwd,
                 WORD *chht, WORD *cellwd, WORD *cellht)
{
   intin[0] = point;

   contrl[0] = 252;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 252   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 1     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! point
intout    !! intout[0]    !! Return-Wert
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwd
ptsout+6  !! ptsout[3]    !! cellht
!end_table

(!ende_liste)
!end_node



!begin_node vst_setsize32

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet character cell width by arbitrary pointsÆ - Setzen der
Zeichenzellenbreite in Punkten.

!item [VDI-Nummer:]
252

!item [Binding:]
(!link [Bindings fÅr vst_setsize32] [Bindings fÅr vst_setsize32])

!item [Beschreibung:]
Die Funktion setzt die Zeichenbreite in 1/65536 Punkten. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [point]
gewÅnschte Zeichenbreite
!item [chwd]
resultierende Zeichenbreite
!item [chht]
resultierende Zeichenhîhe
!item [cellwd]
resultierende Zeichenzellenbreite
!item [cellht]
resultierende Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Durch einen Aufruf von vst_point, vst_arbpt oder vst_height
wird die durch den Funktionsaufruf gesetzte Breite wieder aufgehoben, und
die vom jeweiligen Zeichen verlangte Breite eingestellt. Bei negativen
Breiten werden die Zeichen an der y-Achse gespiegelt.

!item [Ergebnis:]
Die Funktion liefert die gesetzte Zeichenzellenbreite in 1/65536 Punkten
zurÅck.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00 und ab NVDI 3.00. In der Doku zu NVDI 3.00 wird die Funktion
fÑlschlicherweise vst_setsize genannt.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_setsize32]) ~ vst_point ~ vst_height ~ vst_arbpt

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_setsize32
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
fix31 vst_setsize32 ( WORD handle, fix31 point, WORD *chwd, WORD *chht,
                    WORD *cellwd, WORD *cellht );

!item [Implementierung:]
!begin_verbatim
fix31 vst_setsize32 (WORD handle, fix31 point, WORD *chwd,
                     WORD *chht, WORD *cellwd, WORD *cellht)
{
   intin[0..1] = point;

   contrl[0] = 252;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0..1] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 252   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 2     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 2     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! point
intout    !! intout[0..1] !! Return-Wert
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwd
ptsout+6  !! ptsout[3]    !! cellht
!end_table

(!ende_liste)
!end_node




!begin_node vst_skew

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet outline font skewÆ - Setzen des Neigungsgrades fÅr kursive Schrift.

!item [VDI-Nummer:]
253

!item [Binding:]
(!link [Bindings fÅr vst_skew] [Bindings fÅr vst_skew])

!item [Beschreibung:]
Die Funktion setzt den Neigungsgrad fÅr Kursivschrift. Es gilt:

!begin_xlist
!item [Parameter]
Bedeutung
!item [handle]
Kennung der Workstation
!item [skew]
gewÅnschter Winkel
!end_xlist

(!B)Hinweis:(!b) Der Winkel wird in zehntel Grad angegeben und darf zwischen
-900 und +900 variieren. Wie Åberall im VDI sind auch hier die Winkel
entgegen dem Uhrzeigersinn gerichtet. Positive Winkel fÅhren zu einer
Neigung nach links, wogegen negative Winkel Zeichen nach rechts neigen.

Diese Funktion kann eigentlich nur als nette Spielerei angesehen werden, da
die erzeugten Zeichen grundsÑtzlich schlechter aussehen, als ein richtiger
Italic Zeichensatz.

!item [Ergebnis:]
Die Funktion liefert den gesetzten Neigungsgrad zurÅck.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00 und ab NVDI 3.00.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_skew]) ~  vst_effects ~  SpeedoGDOS ~ NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_skew
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vst_skew ( WORD handle, WORD skew );

!item [Implementierung:]
!begin_verbatim
WORD vst_skew (WORD handle, WORD skew)
{
   intin[0] = skew;

   contrl[0] = 253;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 253   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! skew
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vst_track_offset

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet track-kerning offsetÆ - Offset fÅr Trackkerning setzen

!item [VDI-Nummer:]
237 (Opcode 255)

!item [Binding:]
(!link [Bindings fÅr vst_track_offset] [Bindings fÅr vst_track_offset])

!item [Beschreibung:]
Die Funktion ermîglicht es, ein selbstdefiniertes Track-Kerning
einzustellen. Es gilt:

!begin_xlist !short [Paramewter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [offset]
gewÅnschter Abstand
!item [pairmode]
Pair-Kerning
!begin_xlist !short
!item [0 =]
ausschalten
!item [1 =]
einschalten
!end_xlist
!item [tracks]
gesetzter (!nolink [Track-Kerning]) Modus
!item [pairs]
Anzahl der Kerning-Paare im Zeichensatz
!end_xlist

(!B)Hinweis:(!b) Die Funktion steht unter NVDI ab Version 3.00 zur
VerfÅgung.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_track_offset]) ~  vqt_pairkern ~  vqt_trackkern ~  vst_kern

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_track_offset
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_track_offset ( WORD handle, fix31 offset, WORD pairmode,
                        WORD *tracks, WORD *pairs );

!item [Implementierung:]
!begin_verbatim
VOID vst_track_offset (WORD handle, fix31 offset, WORD pairmode,
                       WORD *tracks, WORD *pairs)
{
   intin[0] = 255;
   intin[1] = pairmode;
   intin[2..3] = offset;

   contrl[0] = 237;
   contrl[1] = 0;
   contrl[3] = 4;
   contrl[6] = handle;

   vdi ();

   *tracks = intout[0];
   *pairs  = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 237   Opcode der Funktion
contrl+2  !! contrl[1]   !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 4     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 2     # EintrÑge in intout
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! 255
intin+2   !! intin[1]    !! pairmode
intin+4   !! intin[2..3] !! offset
intout    !! intout[0]   !! tracks
intout+2  !! intout[1]   !! pairs
!end_table

(!ende_liste)
!end_node



!begin_node vst_width

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet character width (absolute mode)Æ - Zeichenbreite in Pixeln setzen

!item [VDI-Nummer:]
231

!item [Binding:]
(!link [Bindings fÅr vst_width] [Bindings fÅr vst_width])

!item [Beschreibung:]
Die Funktion setzt die Zeichenbreite in Pixeln. Es gilt:

!begin_xlist !short [cell_height]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [width]
gewÅnschte Zeichenbreite
!item [char_width]
ausgewÑhlte Zeichenbreite
!item [char_height]
ausgewÑhlte Zeichenhîhe
!item [cell_width]
ausgewÑhlte Zeichenzellenbreite
!item [cell_height]
ausgewÑhlte Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Durch den nÑchsten Aufruf von vst_height, vst_point oder
vst_arbpt32 wird die gesetzte Breite wieder zurÅckgesetzt. Zum Einstellen des
Breiten-Hîhen VerhÑltnisses ist vst_setsize32 besser geeignet, da diese
Funktion eine feinere Einstellung ermîglicht.


!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.20 und ab NVDI 3.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_width])  ~    vst_arbpt ~  vst_height ~  vst_point
vst_setsize

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_width
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vst_width ( WORD handle, WORD width, WORD *char_width,
                 WORD *char_height, WORD *cell_width, WORD *cell_height );

!item [Implementierung:]
!begin_verbatim
VOID vst_width (WORD handle, WORD width, WORD *char_width,
                WORD *char_height, WORD *cell_width,
                WORD *cell_height)
{
   ptsin[0] = width;

   contrl[0] = 231;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *char_width  = ptsout[0];
   *char_height = ptsout[1];
   *cell_width  = ptsout[2];
   *cell_height = ptsout[3];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 231   Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! width
ptsout    !! ptsout[0] !! char_width
ptsout+2  !! ptsout[1] !! char_height
ptsout+4  !! ptsout[2] !! cell_width
ptsout+6  !! ptsout[3] !! cell_height
!end_table

(!ende_liste)
!end_node



### FÅlltypattribute



!begin_node vsf_bg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Background ColorÆ - Hintergrundfarbe setzen

!item [VDI-Nummer:]
201 (Unterfunktion 1)

!item [Binding:]
(!link [Bindings fÅr vsf_bg_color] [Bindings fÅr vsf_bg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Hintergrundfarbe fÅr Objekte.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Hintergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_bg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_bg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsf_bg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsf_bg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 201;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 201   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 1
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsf_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Fill Color IndexÆ - bestimmt die Farbe mit der ein Polygon ausgefÅllt
wird.

!item [VDI-Nummer:]
25

!item [Binding:]
(!link [Bindings fÅr vsf_color] [Bindings fÅr vsf_color])

!item [Beschreibung:]
Die Funktion legt die FÅllfarbe fÅr Polygone fest. Es gilt:

!begin_xlist !short [color_index]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_index]
gewÅnschte Farbe
!end_xlist

(!B)Hinweis:(!b) Die Farbindizes 0 und 1 sind immer verfÅgbar; alle weiteren
hÑngen vom jeweiligen AusgabegerÑt ab. Ein ungÅltiger Farbindex wird durch
den Wert 1 ersetzt. Der Farbindex hat keine Auswirkung auf mehrfarbige
Muster; er sollte in diesem Fall auf 1 gesetzt werden.

!item [Ergebnis:]
Die Funktion liefert die tatsÑchlich eingestellte Farbe zurÅck.

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_color])   ~  v_fillarea ~  v_contourfill ~  vr_recfl
v_bar    ~   v_pieslice ~  v_circle   ~     v_ellipse ~
v_ellpie ~   v_rfbox  ~    vsf_udpat

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsf_color ( WORD handle, WORD color_index );

!item [Implementierung:]
!begin_verbatim
WORD vsf_color (WORD handle, WORD color_index)
{
   intin[0] = color_index;

   contrl[0] = 25;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 25    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! color_index
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsf_fg_color

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Foreground ColorÆ - Vordergrundfarbe setzen

!item [VDI-Nummer:]
200 (Unterfunktion 1)

!item [Binding:]
(!link [Bindings fÅr vsf_fg_color] [Bindings fÅr vsf_fg_color])

!item [Beschreibung:]
Diese Funktionen setzen die Vordergrundfarbe fÅr gefÅllte Objekt.

!begin_xlist !short [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [color_space]
Farbraum (z.Zt. nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)
!item [fg_color]
COLOR_ENTRY der Vordergrundfarbe
!end_xlist


!item [Ergebnis:]
-1 = falsche Unterfunktionsnummer (!nl)
~0 = Funktion nicht vorhanden (!nl)
~1 = alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_fg_color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_fg_color
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsf_fg_color ( WORD handle, LONG color_space, COLOR_ENTRY *fg_color );

!item [Implementierung:]
!begin_verbatim
WORD vsf_fg_color( WORD handle, LONG color_space,
                   COLOR_ENTRY *fg_color )
{
   intin[0..1] = color_space;
   intin[2..5] = fg_color;

   contrl[0] = 200;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 200   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 6     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+10 !! contrl[5] !! 1
contrl+12 !! contrl[6] !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! fg_color
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node vsf_interior

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Fill Interior StyleÆ - bestimmt den FÅllmustertyp.

!item [VDI-Nummer:]
23

!item [Binding:]
(!link [Bindings fÅr vsf_interior] [Bindings fÅr vsf_interior])

!item [Beschreibung:]
Die Funktion bestimmt den FÅlltyp. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [style]
gewÅnschter (!link [FÅlltyp][Grafische öbersicht von FÅlltyp und Musterindex])
!begin_xlist
!item [0 =]
leer
!item [1 =]
deckend
!item [2 =]
gemustert
!item [3 =]
schraffiert
!item [4 =]
frei definierbar
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Bei öbergabe eines ungÅltigen Typs wird der FÅlltyp
(!I)leer(!i) angenommen.

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich ausgewÑhlten FÅlltyp zurÅck.

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_interior])   ~   v_fillarea ~   v_contourfill ~  vr_recfl ~
v_bar  ~      v_pieslice  ~  v_circle   ~     v_ellipse ~
v_ellpie  ~   v_rfbox   ~    vsf_style    ~   vsf_udpat

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_interior
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsf_interior ( WORD handle, WORD style );

!item [Implementierung:]
!begin_verbatim
WORD vsf_interior (WORD handle, WORD style)
{
   intin[0] = style;

   contrl[0] = 23;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 23    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! style
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsf_perimeter

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Fill Perimeter VisibilityÆ - bestimmt, ob eine Umrandung um
FÅllbereiche gezeichnet wird.

!item [VDI-Nummer:]
104

!item [Binding:]
(!link [Bindings fÅr vsf_perimeter] [Bindings fÅr vsf_perimeter])

!item [Beschreibung:]
Die Funktion schaltet die automatische Umrahmung der FÅllflÑche ein oder
aus. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [per_vis]
gewÅnschter Modus
!begin_xlist !short [<> 0 =]
!item [~~ 0 =]
keine Umrahmung
!item [<> 0 =]
Umrahmung 
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Der Rand wird bei aktivierter Umrahmung (default) in der
aktuellen FÅllfarbe und als durchgehende Linie gezeichnet.

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich eingestellten Modus zurÅck.

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_perimeter])  ~ vsf_xperimeter ~  v_fillarea ~  v_contourfill ~  vr_recfl ~
v_bar  ~    v_pieslice ~  v_circle  ~  v_ellipse ~ v_ellpie ~  v_rfbox

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_perimeter
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsf_perimeter ( WORD handle, WORD per_vis );

!item [Implementierung:]
!begin_verbatim
WORD vsf_perimeter (WORD handle, WORD per_vis)
{
   intin[0] = per_vis;

   contrl[0] = 104;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 104   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! per_vis
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsf_style

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Fill Style (!nolink [Index])Æ - bestimmt das FÅllmuster.

!item [VDI-Nummer:]
24

!item [Binding:]
(!link [Bindings fÅr vsf_style] [Bindings fÅr vsf_style])

!item [Beschreibung:]
Die Funktion bestimmt das FÅllmuster. Es gilt:

!begin_xlist !short [style_index]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [style_index]
(!link [Index des Musters][Grafische öbersicht von FÅlltyp und Musterindex])
!end_xlist

(!B)Hinweis:(!b) Die Funktion hat nur dann einen Sinn, wenn als FÅlltyp
(!I)nicht(!i) leer, deckend oder frei definierbar gewÑhlt wurde. Nicht
verfÅgbare Indizes werden durch den Musterindex 1 ersetzt.

!item [Ergebnis:]
Die Funktion liefert das tatsÑchlich eingestellte FÅllmuster.

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_style])  ~   v_fillarea ~  v_contourfill ~  vr_recfl ~
v_bar    ~   v_pieslice ~  v_circle   ~     v_ellipse ~
v_ellpie ~   v_rfbox   ~   vsf_interior

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_style
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsf_style ( WORD handle, WORD style_index );

!item [Implementierung:]
!begin_verbatim
WORD vsf_style (WORD handle, WORD style_index)
{
   intin[0] = style_index;

   contrl[0] = 24;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 24    Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! style_index
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node



!begin_node vsf_udpat

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet User Defined Fill PatternÆ - definiert ein neues FÅllmuster.

!item [VDI-Nummer:]
112

!item [Binding:]
(!link [Bindings fÅr vsf_udpat] [Bindings fÅr vsf_udpat])

!item [Beschreibung:]
Die Funktion definiert ein neues FÅllmÅster. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [pfill_pat]
Zeiger auf ein Feld mit (!I)planes(!i) Zeilen zu je 16 EintrÑgen.
!item [planes]
Anzahl der Farbebenen
!end_xlist

(!B)Hinweis:(!b) Jede Zeile gibt das FÅllmuster fÅr eine Farbebene wieder.
Der erste Eintrag in einer Zeile entspricht dabei der ersten Zeile des
Musters usw.

Mehrfarbige Muster werden im Standardformat Åbergeben und mÅssen die gleiche
Ebenenanzahl haben wie der Bildschirm. Die Ausnahme von dieser Regel sind
die Direct RGB-Modi (mehr als 8 Ebenen mit direkter RGB-Zuordnung) wie
True-Color. Hier wird das Muster immer als True-Color Muster mit
32-Bit-Pixeln (xRGB) Åbergeben.

Bei Mehrfarbmustern sollte man die FÅllfarbe auf 1 setzen und als
Schreibmodus REPLACE anwÑhlen.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_udpat]) ~  vsf_interior

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_udpat
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
VOID vsf_udpat ( WORD handle, WORD *pfill_pat, WORD planes );

!item [Implementierung:]
!begin_verbatim
VOID vsf_udpat (WORD handle, WORD *pfill_pat, WORD planes)
{
   intin[0..16n-1] = pfill_pat[0..16n-1];

   contrl[0] = 112;
   contrl[1] = 0;
   contrl[3] = planes * 16;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl      !! contrl[0]    !! 112   Opcode der Funktion
contrl+2    !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4    !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6    !! contrl[3]    !! 16*n  # EintrÑge in intin
contrl+8    !! contrl[4]    !! 0     # EintrÑge in intout
contrl+12   !! contrl[6]    !! handle
intin       !! intin[0]     !! pfill_pat[0]
...         !! ...          !! ...
...         !! ...          !! ...
intin+32n-2 !! intin[16n-1] !! pfill_pat[16n-1]
!end_table

(!ende_liste)
!end_node



!begin_node vsf_xperimeter

(!begin_liste) [Beschreibung:]

!item [Name:]
ØSet Fill Perimeter VisibilityÆ - bestimmt, ob eine Umrandung um
FÅllbereiche gezeichnet wird.

!item [VDI-Nummer:]
104

!item [Binding:]
(!link [Bindings fÅr vsf_xperimeter] [Bindings fÅr vsf_xperimeter])

!item [Beschreibung:]


!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [on_off]
gewÅnschter Modus
!begin_xlist !short [<> 0 =]
!item [~~ 0 =]
Turn perimeter outlining off
!item [~~ 1 =]
Turn perimeter outlining on
!item [~~-1 =]
Do not change perimeter outlining
!end_xlist
!item [f_or_l]
Linientyp analog zu vsl_type
!begin_xlist !short [ 1 =]
!item [~ 0 =]
Use normal fill color for perimeter
!item [~ 1 =]
Use line style attributes for perimeter
!end_xlist
!end_xlist

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich eingestellten Modus zurÅck.

!item [VerfÅgbar:] (!nolink [GEM])/3 Release 3.1
!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_xperimeter]) ~ vsf_perimeter ~  v_fillarea ~  v_contourfill ~  vr_recfl ~
v_bar  ~   v_pieslice ~  v_circle  ~   v_ellipse ~
v_ellpie ~  v_rfbox

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_xperimeter
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD vsf_xperimeter ( WORD handle, WORD on_off, WORD f_or_l );

!item [Implementierung:]
!begin_verbatim
WORD (!nolink [vsf_xperimeter]) (WORD handle,  WORD on_off, WORD f_or_l )
{
   intin[0] = on_off;
   intin[1] = f_or_l;

   contrl[0] = 104;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 104   Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 2     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! on_off
intin+2   !! intin[1]  !! f_or_l
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node




!begin_node Grafische öbersicht von FÅlltyp und Musterindex

Die folgende Abbildung zeigt die mîglichen Kombinationen von FÅlltyp und
Musterindex. Die erste Ziffer gibt dabei den FÅlltyp, die zweite den Index
des Musters an.

!ifdest [html]
!ifset [No_Bilder_Pfad]
!image muster
!else
!image (!picture_path)\muster
!endif
!else
!image (!picture_path)\muster
!endif

(!B)Hinweis:(!b) Ein FÅlltyp mit dem Wert 1, gefolgt von einem beliebigen
Musterindex, entspricht immer dem FÅlltyp 2 mit Musterindex 8. Der Index 1
ist bei Mustern vom Typ 2 immer das Muster mit der geringsten IntensitÑt auf
dem jeweiligen AusgabegerÑt, und darÅber hinaus auch immer monochrom.

Querverweis: vsf_interior ~  vsf_style
!end_node


!begin_node Beschreibung der VDI-Schreibmodi

!label Replace-Modus
(!B)Replace:(!b) In diesem Modus Åberschreibt das VDI den Hintergrund mit
der Vordergrundfarbe, falls das entsprechende Bit gesetzt ist, bzw. mit der
Farbe Weiû, wenn das entsprechende Bit den Wert 0 besitzt. Die logische
VerknÅpfung lautet:

Neu := (Vordergrund AND Maske) OR (Hintergrund AND NOT Maske)

öbertragen auf das Arbeiten mit Bleistift und Papier kann man sich dies wie
folgt vorstellen: zunÑchst malt man eine Figur auf weiûes Papier, schneidet
sie aus, und klebt sie dann auf die Grafik.

!label Transparent-Modus
(!B)Transparent:(!b) In diesem Modus werden alle Bits der zu zeichnenden
Form die den Wert 0 besitzen (also nicht gesetzt sind) vom (!nolink [VDI]) ignoriert. Es
werden also nur die Bits ausgegeben, die gesetzt sind. Die logische
VerknÅpfung lautet in diesem Fall:

Neu := (Vordergrund AND Maske) OR (Farbe AND NOT Maske)

Auch hier wieder der Vergleich beim Arbeiten mit Papier und Bleistift:
Dieser Modus entspricht dem Replace-Modus, nur daû nicht auf normales
Papier, sondern auf eine durchsichtige (transparente) Folie gezeichnet wird.

!label XOR-Modus
(!B)XOR:(!b) In diesem Modus werden die Bits des Hintergrundes und der zu
zeichnenden Figur mit einem Exklusiv-ODER verknÅpft, wobei eine interessante
und nÅtzliche Eigenschaft auftritt:

Wird die Figur nÑmlich ein zweites Mal in diesem Modus gezeichnet, so ist
sie plîtzlich wieder verschwunden. BegrÅndung: Die XOR-VerknÅpfung eines
Bits mit sich selbst ergibt immer den inversen Wert. (!B)Deshalb lÑût sich
dieser Modus hervorragend fÅr einfache Animationen wie eine Gummibox
einsetzen; das Kochrezept lautet:(!b)

!begin_xlist !short
!item [1.]
Objekt einmal ausgeben
!item [2.]
Objekt erneut ausgeben (es ist nun wieder verschwunden)
!item [3.]
Objekt in der Grîûe oder Position verÑndern.
!item [4.]
ZurÅck zu Schritt 1.
!end_xlist

Die logische VerknÅpfung lautet: Neu := (Maske XOR Farbe)

Im allgemeinen lÑût sich Åber diesen Modus nur aussagen, daû aus der Farbe
Schwarz die Farbe Weiû wird, und umgekehrt; alles andere ist nicht fest
definiert.

!label Reverse Transparent-Modus
(!B)Reverse Transparent:(!b) In diesem Modus werden nur die Pixel
berÅcksichtigt, die im zu zeichnenden Bild auf den Wert 0 gesetzt sind. Die
logische VerknÅpfung lautet in diesem Fall:

Neu := (Farbe AND Maske) OR (Vordergrund AND NOT Maske)

Auch dieser Modus bietet interessante Einsatzmîglichkeiten; so kann er z.B.
mit dem Transparent-Modus gemeinsam angewendet werden, um Text mit einer
zusÑtzlichen Hintergrundfarbe erscheinen zu lassen.

(!B)Die folgende Abbildung soll die unterschiedlichen (!nolink [VDI])-Schreibmodi noch
einmal verdeutlichen:(!b)

!ifdest [html]
!ifset [No_Bilder_Pfad]
!image wr_modi
!else
!image (!picture_path)\wr_modi
!endif
!else
!image (!picture_path)\wr_modi
!endif

Querverweis: vswr_mode
!end_node
