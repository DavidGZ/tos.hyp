!iflang [english]

!begin_node v_get_driver_info

(!begin_liste) [Availability]

!item [Name:]
ØInquire extended device status infoÆ - Informationen Åber einen Treiber
ermitteln.

!item [Opcode:]
-1 (Sub-Opcode 4)

!item [Syntax:]
void v_get_driver_info ( int16_t device_id, int16_t info_select, int8_t *info_string );

!item [Description:]
Die Funktion liefert Informationen GerÑtetreiber und ZeichensÑtze.

!begin_xlist !short [info_select]
!item [Parameter]
Bedeutung
!item [~]
~
!item [device_id]
Nummer des (!link [GerÑtetreibers][GDOS-Treiber])
!item [info_select]
Je nach wert von (!I)info_select(!i) bekommt man in (!I)info_string(!i) bestimmte
Informationen.
   !begin_xlist !short [info_string]
   !item [info_select]
          info_string
   !item [~]
      ~
   !item [1]
      Dateiname des Treiber
   !item [2]
      Bezeichnung des GerÑtes
   !item [3]
      Zusatzinformationen, falls vorhanden
   !item [4]
      Zeichensatzdateien des GerÑtes
   !item [5]
      Patchadresse des Treibers (z.B. Drucker-Port-Nummer)
   !end_xlist


!end_xlist

!item [(!nolink [Return]) Value:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [Availability:]
(!nolink [GEM])/3

!item [Group:]
Inqurie function

!item [See Also:]
(!link [Binding] [Bindings for v_get_driver_info])

(!ende_liste)
!end_node



!begin_node Bindings for v_get_driver_info
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_get_driver_info ( int16_t device_id, int16_t info_select, int8_t *info_string );

!item [Binding:]
!begin_verbatim
void v_get_driver_info ( int16_t device_id, int16_t info_select,
                         int8_t *info_string )
{
   intin[0] = device_id;
   intin[1] = info_select;

   contrl[0] = -1;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[5] = 4;
   contrl[6] = 0;

   vdi ();

   if ( info_select != 5 )
   {
      bptr = (int8_t *) intout ;
      for ( ii = 0; ii < contrl[ 4 ]; ii ++ )
         *info_string++ = *bptr++ ;
      *info_string = 0 ;
   }
   else
      *(int16_t *)info_string = intout[ 0 ] ;
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]      !! -1   Function Opcode
contrl+2  !! contrl[1]      !! 0     # entry in ptsin
contrl+4  !! contrl[2]      !! 0     # entry in ptsout
contrl+6  !! contrl[3]      !! 2     # entry in intin
contrl+8  !! contrl[4]      !! n     # entry in intout
contrl+10 !! contrl[5]      !! 4
contrl+12 !! contrl[6]      !! 0
intin     !! intin[0]       !! device_id
intin+2   !! intin[1]       !! info_select
intout    !! intout[0..n-1] !! info_string
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_get_driver_info

(!begin_liste) [Beschreibung]

!item [Name:]
ØInquire extended device status infoÆ - Informationen Åber einen Treiber
ermitteln.

!item [VDI-Nummer:]
-1 (Unterfunktion 4)

!item [Deklaration:]
void v_get_driver_info ( int16_t device_id, int16_t info_select, int8_t *info_string );

!item [Beschreibung:]
Die Funktion liefert Informationen GerÑtetreiber und ZeichensÑtze.

!begin_xlist !short [info_select]
!item [Parameter]
Bedeutung
!item [~]
~
!item [device_id]
Nummer des (!link [GerÑtetreibers][GDOS-Treiber])
!item [info_select]
Je nach wert von (!I)info_select(!i) bekommt man in (!I)info_string(!i) bestimmte
Informationen.
   !begin_xlist !short [info_string]
   !item [info_select]
          info_string
   !item [~]
      ~
   !item [1]
      Dateiname des Treiber
   !item [2]
      Bezeichnung des GerÑtes
   !item [3]
      Zusatzinformationen, falls vorhanden
   !item [4]
      Zeichensatzdateien des GerÑtes
   !item [5]
      Patchadresse des Treibers (z.B. Drucker-Port-Nummer)
   !end_xlist


!end_xlist

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
(!nolink [GEM])/3

!item [Gruppe:]
Auskunftsfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_get_driver_info])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_get_driver_info
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_get_driver_info ( int16_t device_id, int16_t info_select, int8_t *info_string );

!item [Umsetzung:]
!begin_verbatim
void v_get_driver_info ( int16_t device_id, int16_t info_select,
                         int8_t *info_string )
{
   intin[0] = device_id;
   intin[1] = info_select;

   contrl[0] = -1;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[5] = 4;
   contrl[6] = 0;

   vdi ();

   if ( info_select != 5 )
   {
      bptr = (int8_t *) intout ;
      for ( ii = 0; ii < contrl[ 4 ]; ii ++ )
         *info_string++ = *bptr++ ;
      *info_string = 0 ;
   }
   else
      *(int16_t *)info_string = intout[ 0 ] ;
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]      !! -1   Opcode der Funktion
contrl+2  !! contrl[1]      !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]      !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]      !! 2     # EintrÑge in intin
contrl+8  !! contrl[4]      !! n     # EintrÑge in intout
contrl+10 !! contrl[5]      !! 4
contrl+12 !! contrl[6]      !! 0
intin     !! intin[0]       !! device_id
intin+2   !! intin[1]       !! info_select
intout    !! intout[0..n-1] !! info_string
!end_table

(!ende_liste)
!end_node

!endif
