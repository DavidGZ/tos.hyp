!iflang [english]

!begin_node rsrc_rcfix

(!begin_liste) [Availability]

!item [Name:]
ØResource Object FixÆ - wandelt Zeichenkoordinaten in Pixelkoordinaten

!item [Opcode:]
115

!item [Syntax:]
int16_t rsrc_rcfix ( RSHDR *rc_header );

!item [Description:]
Diese in MagiC und MultiTOS vorhandene Funktion paût von der Applikation
bereits in den Speicher geladene Resourcedaten an. Dabei werden die
Koordinaten von Zeichen- in Pixelkoordinaten gewandelt.

Falls die Applikation vor dem Aufruf dieser Funktion bereits eine RSC-Datei
geladen hat, so muû diese vorher mit rsrc_free freigegeben werden. Das
gleiche gilt beim Beenden der Applikation.

Der Vorteil dieser Funktion besteht darin, daû die Resource-Datei des
Programms in den Programmcode eingebunden werden kann. Es reicht dann aus,
einfach rsrc_rcfix aufzurufen, und ein Laden via rsrc_load kann entfallen.

!begin_xlist !short [rc_header:]
!item [rc_header:]
Adresse des RSC-Headers im Speicher; hinter diesem mÅssen die RSC-Daten
liegen.
!end_xlist

!item [(!nolink [Return]) Value:]
z.Zt. unbekannt.

!item [Availability:]
Available only in AES versions 4.0 and greater. The
presence of this call should also be checked for using
appl_getinfo().

Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_4]) (Opcode 4)
festgestellt werden.

!item [Group:]
Resource Library

!item [See Also:]
(!link [Binding] [Bindings for rsrc_rcfix]) ~  rsrc_load ~  rsrc_obfix ~  appl_getinfo

(!ende_liste)



!begin_node Bindings for rsrc_rcfix
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t rsrc_rcfix ( RSHDR *rc_header );

!item [Binding:]
!begin_verbatim
int16_t rsrc_rcfix ( RSHDR *rc_header )
{
   addr_in[0] = rc_header;
   return ( crys_if(115) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 115   # Function Opcode
control+2 !! control[1] !! 0     # entry in int_in
control+4 !! control[2] !! 1     # entry in int_out
control+6 !! control[3] !! 1     # entry in addr_in
control+8 !! control[4] !! 0     # entry in addr_out
addr_in   !! addr_in[0] !! rc_header
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node rsrc_rcfix

(!begin_liste) [Beschreibung]

!item [Name:]
ØResource Object FixÆ - wandelt Zeichenkoordinaten in Pixelkoordinaten

!item [AES-Nummer:]
115

!item [Deklaration:]
int16_t rsrc_rcfix ( RSHDR *rc_header );

!item [Beschreibung:]
Diese in MagiC und MultiTOS vorhandene Funktion paût von der Applikation
bereits in den Speicher geladene Resourcedaten an. Dabei werden die
Koordinaten von Zeichen- in Pixelkoordinaten gewandelt.

Falls die Applikation vor dem Aufruf dieser Funktion bereits eine RSC-Datei
geladen hat, so muû diese vorher mit rsrc_free freigegeben werden. Das
gleiche gilt beim Beenden der Applikation.

Der Vorteil dieser Funktion besteht darin, daû die Resource-Datei des
Programms in den Programmcode eingebunden werden kann. Es reicht dann aus,
einfach rsrc_rcfix aufzurufen, und ein Laden via rsrc_load kann entfallen.

!begin_xlist !short [rc_header:]
!item [rc_header:]
Adresse des RSC-Headers im Speicher; hinter diesem mÅssen die RSC-Daten
liegen.
!end_xlist

!item [Ergebnis:]
z.Zt. unbekannt.

!item [VerfÅgbar:]
Available only in AES versions 4.0 and greater. The
presence of this call should also be checked for using
appl_getinfo().

Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_4]) (Opcode 4)
festgestellt werden.

!item [Gruppe:]
(!link [Resourceorganisation][Resourcefunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr rsrc_rcfix]) ~  rsrc_load ~  rsrc_obfix ~  appl_getinfo

(!ende_liste)



!begin_node Bindings fÅr rsrc_rcfix
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t rsrc_rcfix ( RSHDR *rc_header );

!item [Umsetzung:]
!begin_verbatim
int16_t rsrc_rcfix ( RSHDR *rc_header )
{
   addr_in[0] = rc_header;
   return ( crys_if(115) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 115   # Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! rc_header
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
