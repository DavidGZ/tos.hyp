!iflang [english]

!begin_node wdlg_evnt

(!begin_liste) [Availability]

!item [Name:]
ØWindowDialog EventÆ - Dialogbearbeitung.

!item [Opcode:]
166

!item [Syntax:]
int16_t wdlg_evnt ( DIALOG *dialog, EVNT *events );

!item [Description:]
Die Funktion dient zur Auswertung bzw. Bearbeitung von Ereignissen eines
Fensterdialogs. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [dialog]
Pointer to the dialog structure
!item [events]
Pointer to the EVNT-structure
!end_xlist

(!B)Note:(!b) 
This function must be called in an event-loop. The event-bits that 
refer to the window dialog are cleared in the bit vector (!I)mwhich(!i).
Following wdlg_evnt the EVNT-structure of the application can be used 
to evaluate the events intended for it. 

If wdlg_evnt() returns a 0, the window dialog has to be
closed (call (wdlg_close).

(!B)Note:(!b) The Iconify-event is not supported by wdlg_evnt. Those wanting 
to install the Iconifier icon as a window object during wdlg_open 
therefore have to evaluate this even and handle it themselves. The same 
applies if one want to install the Sizer icon as an object.

!item [(!nolink [Return]) Value:]
Die Funktion liefert den Wert 1 zurÅck, wenn kein Fehler aufgetreten ist.
Bei einem RÅckgabewert von 0 muû der Dialog geschlossen werden.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
Fensterdialoge

!item [See Also:]
(!link [Binding] [Bindings for wdlg_evnt])  ~ wdlg_open  ~ wdlg_close

(!ende_liste)



!begin_node Bindings for wdlg_evnt
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wdlg_evnt ( DIALOG *dialog, EVNT *events );

!item [Binding:]
!begin_verbatim
int16_t wdlg_evnt ( DIALOG *dialog, EVNT *events )
{
   addr_in[0] = dialog;
   addr_in[1] = events;

   crys_if (166);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 166   # Function Opcode
control+2 !! control[1] !! 0     # entry in int_in
control+4 !! control[2] !! 1     # entry in int_out
control+6 !! control[3] !! 2     # entry in addr_in
control+8 !! control[4] !! 0     # entry in addr_out
addr_in   !! addr_in[0] !! dialog
addr_in+4 !! addr_in[1] !! events
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node wdlg_evnt

(!begin_liste) [Beschreibung]

!item [Name:]
ØWindowDialog EventÆ - Dialogbearbeitung.

!item [AES-Nummer:]
166

!item [Deklaration:]
int16_t wdlg_evnt ( DIALOG *dialog, EVNT *events );

!item [Beschreibung:]
Die Funktion dient zur Auswertung bzw. Bearbeitung von Ereignissen eines
Fensterdialogs. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [dialog]
Zeiger auf den Dialog
!item [events]
Zeiger auf EVNT-Struktur
!end_xlist

(!B)Hinweis:(!b) Diese Funktion muû im Event-Loop aufgerufen werden. Im
Bitvektor (!I)mwhich(!i) der (!nolink [EVNT])-Struktur werden die Ereignis-Bits
gelîscht, die sich auf den Fensterdialog beziehen. Nach dem Aufruf dieser
Funktion kann die (!nolink [EVNT])-Struktur von der Applikation zur Auswertung der fÅr
sie bestimmten Events benutzt werden.

Falls die Funktion den Wert 0 zurÅckliefert, muû der Dialog (per wdlg_close
geschlossen werden.

(!B)Achtung:(!b) Das Iconifying wird (!I)nicht(!i) von dieser Funktion
unterstÅtzt. Wird der Iconifier bei wdlg_open als Fensterelement angemeldet
muû daher dieses Ereignis selbst ausgewertet und behandelt werden. Das
gleiche gilt, wenn man den Sizer als Element anmeldet.

!item [Ergebnis:]
Die Funktion liefert den Wert 1 zurÅck, wenn kein Fehler aufgetreten ist.
Bei einem RÅckgabewert von 0 muû der Dialog geschlossen werden.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7)
festgestellt werden.

!item [Gruppe:]
Fensterdialoge

!item [Querverweis:]
(!link [Binding] [Bindings fÅr wdlg_evnt])  ~ wdlg_open  ~ wdlg_close

(!ende_liste)



!begin_node Bindings fÅr wdlg_evnt
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wdlg_evnt ( DIALOG *dialog, EVNT *events );

!item [Umsetzung:]
!begin_verbatim
int16_t wdlg_evnt ( DIALOG *dialog, EVNT *events )
{
   addr_in[0] = dialog;
   addr_in[1] = events;

   crys_if (166);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 166   # Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 2     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! dialog
addr_in+4 !! addr_in[1] !! events
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
