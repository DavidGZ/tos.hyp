!iflang [english]

!begin_node objc_sysvar

(!begin_liste) [Availability]

!item [Name:]
ØObject sysvarÆ - Manipulation der 3D Objekte

!item [Opcode:]
48

!item [Syntax:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Description:]
Die Funktion erlaubt es, das Erscheinungsbild der 3D-Objekte des AES zu
setzen bzw. zu erfragen. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ob_smode]
!begin_table [l l l]
0 !! - !! Status abfragen
1 !! - !!neuen Status setzen
!end_table
!item [ob_swhich]
GewÅnschte 3D-Komponente:
(!nl)
!label LK3DIND
(!B)LK3DIND (1) - Indikatoren(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 = 0
(!nl)
beim Selektieren eines Objektes bewegt sich der zugehîrige Text nicht.
(!nl)
ob_soval1 = 1
(!nl)
beim Selektieren eines Objektes bewegt sich der zugehîrige Text.
(!nl)
ob_soval2 = 0
(!nl)
Objektfarbe Ñndert sich beim Selektieren nicht.
(!nl)
ob_soval2 = 1
(!nl)
Objektfarbe wird beim Selektieren verÑndert.
!item [Modus 1:]
wie Modus 0, nur lassen sich jetzt die jeweiligen Werte, Åber die Parameter
(!I)ob_sival1(!i) bzw. (!I)ob_sival2(!i) setzen.
!end_xlist

!label LK3DACT
(!B)LK3DACT (2) - Aktivatoren(!b)
(!nl)
Bestimmt das Verhalten der Aktivatoren. Alle weiteren Angaben sind analog
den Indikatoren zu verwenden.
(!nl)

!label INDBUTCOL
(!B)INDBUTCOL (3) - Farbe nicht-selektierter Indikatoren!(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label ACTBUTCOL
(!B)ACTBUTCOL (4) - Farbe nicht-selektierter Aktivatoren(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label BACKGRCOL
(!B)BACKGRCOL (5) - Farbe des 3D Hintergrundes(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label AD3DVALUE
(!B)AD3DVALUE (6) - Pixelvergrîûerung erfragen(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1
(!nl)
Anzahl der Pixel in horizontaler Richtung, um die 3D-Buttons nach jeder
Seite vergrîûert werden.
(!nl)
ob_soval2
(!nl)
Anzahl der Pixel in vertikaler Richtung, um die 3D-Buttons nach jeder Seite
vergrîûert werden.
(!nl)
(!B)Hinweis:(!b) Dieser Modus liefert in MagiC stets den Wert 0, da die
Objektgrîûen vom System nicht angetastet werden.
!item [Modus 1:]
z.Zt. nicht unterstÅtzt.         
!end_xlist


!label MX_ENABLE3D
(!B)MX_ENABLE3D (10) - 3D Look ein-/ausschalten(!b)
Dieser Modus ist nur unter (!nolink [MagiC]) (ab Version 3.0) vorhanden, und erlaubt es,
den 3D-Look ein- bzw. auszuschalten. Es gilt:
!begin_xlist !short
!item [Modus 0:]
ob_soval1 = 0
(!nl)
(3D ist aus)
(!nl)
ob_soval1 = 1
(!nl)
(3D ist aktiv)
!item [Modus 1:]
ob_sival1 = 0
(!nl)
ob_sival2 = 0
(!nl)
(3D-Look aus)
(!nl)
ob_sival1 = 1
(!nl)
ob_sival2 = 1
(!nl)
(3D-Look ein)
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Die per objc_sysvar vorgenommenen Einstellungen gelten
nicht nur fÅr das eigene Programm, sondern fÅr das ganze System. Aus diesem
Grund sollte die Funktion in normalen Anwenderprogrammen nicht benutzt
werden, sondern nur in Konfigurations-Programmen (z.B. CPX-Modulen) zum
Einsatz kommen.

In MagiC 2.0 ist die Funktion zwar vorhanden, lÑût jedoch aufgrund der noch
fehlenden 3D-Objekte keine Modifikationen zu. Deshalb sollte der
RÅckgabewert der Funktion beachtet werden. Ab (!nolink [MagiC])-3 steht der 3D-Look zwar
zur VerfÅgung, jedoch gilt es einige Unterschiede zu beachten.

!item [(!nolink [Return]) Value:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis der Wert 0
zurÅckgegeben wird.

!item [Availability:]
Available as of AES version 3.40.

Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_13])
(Opcode 13) erfragt werden.


!item [Group:]
Object Library

!item [Querverweise:]
(!link [Binding] [Bindings for objc_sysvar])

(!ende_liste)



!begin_node Bindings for objc_sysvar
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Binding:]
!begin_verbatim
int16_t objc_sysvar (int16_t ob_smode, int16_t ob_swhich,
                     int16_t ob_sival1, int16_t ob_sival2,
                     int16_t *ob_soval1, int16_t *ob_soval2)
{
   int_in[0] = ob_smode;
   int_in[1] = ob_swhich;
   int_in[2] = ob_sival1;
   int_in[3] = ob_sival2;
 
   crys_if (48);

   *ob_soval1 = int_out[1];
   *ob_soval2 = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 48    # Function Opcode
control+2 !! control[1] !! 4     # entry in int_in
control+4 !! control[2] !! 3     # entry in int_out
control+6 !! control[3] !! 0     # entry in addr_in
control+8 !! control[4] !! 0     # entry in addr_out
int_in    !! int_in[0]  !! ob_smode
int_in+2  !! int_in[1]  !! ob_swhich
int_in+4  !! int_in[2]  !! ob_sival1
int_in+6  !! int_in[3]  !! ob_sival2
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! ob_soval1
int_out+4 !! int_out[2] !! ob_soval2
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node objc_sysvar

(!begin_liste) [Beschreibung]

!item [Name:]
ØObject sysvarÆ - Manipulation der 3D Objekte

!item [AES-Nummer:]
48

!item [Deklaration:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Beschreibung:]
Die Funktion erlaubt es, das Erscheinungsbild der 3D-Objekte des AES zu
setzen bzw. zu erfragen. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ob_smode]
!begin_table [l l l]
0 !! - !! Status abfragen
1 !! - !!neuen Status setzen
!end_table
!item [ob_swhich]
GewÅnschte 3D-Komponente:
(!nl)
!label LK3DIND
(!B)LK3DIND (1) - Indikatoren(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 = 0
(!nl)
beim Selektieren eines Objektes bewegt sich der zugehîrige Text nicht.
(!nl)
ob_soval1 = 1
(!nl)
beim Selektieren eines Objektes bewegt sich der zugehîrige Text.
(!nl)
ob_soval2 = 0
(!nl)
Objektfarbe Ñndert sich beim Selektieren nicht.
(!nl)
ob_soval2 = 1
(!nl)
Objektfarbe wird beim Selektieren verÑndert.
!item [Modus 1:]
wie Modus 0, nur lassen sich jetzt die jeweiligen Werte, Åber die Parameter
(!I)ob_sival1(!i) bzw. (!I)ob_sival2(!i) setzen.
!end_xlist

!label LK3DACT
(!B)LK3DACT (2) - Aktivatoren(!b)
(!nl)
Bestimmt das Verhalten der Aktivatoren. Alle weiteren Angaben sind analog
den Indikatoren zu verwenden.
(!nl)

!label INDBUTCOL
(!B)INDBUTCOL (3) - Farbe nicht-selektierter Indikatoren!(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label ACTBUTCOL
(!B)ACTBUTCOL (4) - Farbe nicht-selektierter Aktivatoren(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label BACKGRCOL
(!B)BACKGRCOL (5) - Farbe des 3D Hintergrundes(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label AD3DVALUE
(!B)AD3DVALUE (6) - Pixelvergrîûerung erfragen(!b)
!begin_xlist !short
!item [Modus 0:]
ob_soval1
(!nl)
Anzahl der Pixel in horizontaler Richtung, um die 3D-Buttons nach jeder
Seite vergrîûert werden.
(!nl)
ob_soval2
(!nl)
Anzahl der Pixel in vertikaler Richtung, um die 3D-Buttons nach jeder Seite
vergrîûert werden.
(!nl)
(!B)Hinweis:(!b) Dieser Modus liefert in MagiC stets den Wert 0, da die
Objektgrîûen vom System nicht angetastet werden.
!item [Modus 1:]
z.Zt. nicht unterstÅtzt.         
!end_xlist


!label MX_ENABLE3D
(!B)MX_ENABLE3D (10) - 3D Look ein-/ausschalten(!b)
Dieser Modus ist nur unter (!nolink [MagiC]) (ab Version 3.0) vorhanden, und erlaubt es,
den 3D-Look ein- bzw. auszuschalten. Es gilt:
!begin_xlist !short
!item [Modus 0:]
ob_soval1 = 0
(!nl)
(3D ist aus)
(!nl)
ob_soval1 = 1
(!nl)
(3D ist aktiv)
!item [Modus 1:]
ob_sival1 = 0
(!nl)
ob_sival2 = 0
(!nl)
(3D-Look aus)
(!nl)
ob_sival1 = 1
(!nl)
ob_sival2 = 1
(!nl)
(3D-Look ein)
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Die per objc_sysvar vorgenommenen Einstellungen gelten
nicht nur fÅr das eigene Programm, sondern fÅr das ganze System. Aus diesem
Grund sollte die Funktion in normalen Anwenderprogrammen nicht benutzt
werden, sondern nur in Konfigurations-Programmen (z.B. CPX-Modulen) zum
Einsatz kommen.

In MagiC 2.0 ist die Funktion zwar vorhanden, lÑût jedoch aufgrund der noch
fehlenden 3D-Objekte keine Modifikationen zu. Deshalb sollte der
RÅckgabewert der Funktion beachtet werden. Ab (!nolink [MagiC])-3 steht der 3D-Look zwar
zur VerfÅgung, jedoch gilt es einige Unterschiede zu beachten.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis der Wert 0
zurÅckgegeben wird.

!item [VerfÅgbar:]
Available as of AES version 3.40.

Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_13])
(Opcode 13) erfragt werden.


!item [Gruppe:]
(!link [Objekte][Objektfunktionen])

!item [Querverweise:]
(!link [Binding] [Bindings fÅr objc_sysvar])

(!ende_liste)



!begin_node Bindings fÅr objc_sysvar
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Umsetzung:]
!begin_verbatim
int16_t objc_sysvar (int16_t ob_smode, int16_t ob_swhich,
                     int16_t ob_sival1, int16_t ob_sival2,
                     int16_t *ob_soval1, int16_t *ob_soval2)
{
   int_in[0] = ob_smode;
   int_in[1] = ob_swhich;
   int_in[2] = ob_sival1;
   int_in[3] = ob_sival2;
 
   crys_if (48);

   *ob_soval1 = int_out[1];
   *ob_soval2 = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 48    # Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! ob_smode
int_in+2  !! int_in[1]  !! ob_swhich
int_in+4  !! int_in[2]  !! ob_sival1
int_in+6  !! int_in[3]  !! ob_sival2
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! ob_soval1
int_out+4 !! int_out[2] !! ob_soval2
!end_table

(!ende_liste)
!end_node
!end_node

!endif
