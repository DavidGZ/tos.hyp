!iflang [english]

!begin_node appl_write
(!begin_liste) [Availability]
!item [Name:]
ØApplication writeÆ - sendet eine Mitteilung an eine andere Applikation.
!item [Opcode:]
12
!item [Syntax:]
int16_t appl_write ( int16_t ap_wid, int16_t ap_wlength, void *ap_wpbuff );

!item [Description:]
Die Funktion schreibt eine Anzahl von Bytes in eine Message-Pipe. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ap_wid]
ID der Applikation, zu der die Nachricht geschickt werden soll
!item [ap_wlength]
Anzahl der zu sendenden Bytes
!item [ap_wpbuff]
Adresse des Puffers mit der zu Åbertragenden Nachricht
!end_xlist
(!B)Hinweis:(!b) Durch diese Funktion besitzt eine Applikation auch die
Mîglichkeit, sich selbst eine Redraw-Nachricht zukommen zu lassen. Ab MagiC
Version 4.0 gilt: besitzt der Parameter (!I)ap_wid(!i) den Wert -2, so zeigt
(!I)ap_wpbuff(!i) auf eine XAESMSG-Struktur.
!item [(!nolink [Return]) Value:]
Wird eine Null zurÅckgegeben, so ist ein Fehler aufgetreten, sonst wird
eine positive Zahl als Ergebnis zurÅckgegeben.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Application Library

!item [See Also:]
(!link [Binding] [Bindings for appl_write]) ~ appl_init  ~ appl_read ~
appl_find ~  Nachrichten

(!ende_liste)



!begin_node Bindings for appl_write
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_write ( int16_t ap_wid, int16_t ap_wlength, void *ap_wpbuff );
!item [Binding:]
!begin_verbatim
int16_t appl_write (int16_t ap_wid, int16_t ap_wlength,
                    void *ap_wpbuff)
{
   int_in[0]  = ap_wid;
   int_in[1]  = ap_wlength;
   addr_in[0] = ap_wpbuff;

   return ( crys_if(12) );  
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control !! control[0] !! 12    # Function Opcode
control+2 !! control[1] !! 2     # entry in int_in
control+4 !! control[2] !! 1     # entry in int_out
control+6 !! control[3] !! 1     # entry in addr_in
control+8 !! control[4] !! 0     # entry in addr_out
int_in !! int_in[0] !! ap_wid
int_in+2 !! int_in[1] !! ap_wlength
addr_in !! addr_in[0] !! ap_wpbuff
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node appl_write
(!begin_liste) [Beschreibung]
!item [Name:]
ØApplication writeÆ - sendet eine Mitteilung an eine andere Applikation.
!item [AES-Nummer:]
12
!item [Deklaration:]
int16_t appl_write ( int16_t ap_wid, int16_t ap_wlength, void *ap_wpbuff );

!item [Beschreibung:]
Die Funktion schreibt eine Anzahl von Bytes in eine Message-Pipe. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ap_wid]
ID der Applikation, zu der die Nachricht geschickt werden soll
!item [ap_wlength]
Anzahl der zu sendenden Bytes
!item [ap_wpbuff]
Adresse des Puffers mit der zu Åbertragenden Nachricht
!end_xlist
(!B)Hinweis:(!b) Durch diese Funktion besitzt eine Applikation auch die
Mîglichkeit, sich selbst eine Redraw-Nachricht zukommen zu lassen. Ab MagiC
Version 4.0 gilt: besitzt der Parameter (!I)ap_wid(!i) den Wert -2, so zeigt
(!I)ap_wpbuff(!i) auf eine XAESMSG-Struktur.
!item [Ergebnis:]
Wird eine Null zurÅckgegeben, so ist ein Fehler aufgetreten, sonst wird
eine positive Zahl als Ergebnis zurÅckgegeben.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])
!item [Querverweis:]
(!link [Binding] [Bindings fÅr appl_write]) ~ appl_init  ~ appl_read ~
appl_find ~  Nachrichten

(!ende_liste)



!begin_node Bindings fÅr appl_write
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_write ( int16_t ap_wid, int16_t ap_wlength, void *ap_wpbuff );
!item [Umsetzung:]
!begin_verbatim
int16_t appl_write (int16_t ap_wid, int16_t ap_wlength,
                    void *ap_wpbuff)
{
   int_in[0]  = ap_wid;
   int_in[1]  = ap_wlength;
   addr_in[0] = ap_wpbuff;

   return ( crys_if(12) );  
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control !! control[0] !! 12    # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in !! int_in[0] !! ap_wid
int_in+2 !! int_in[1] !! ap_wlength
addr_in !! addr_in[0] !! ap_wpbuff
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
