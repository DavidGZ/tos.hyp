!iflang [english]

!begin_node appl_init
(!begin_liste) [Availability]
!item [Name:]
ØApplication InitializationÆ - meldet die Applikation unter (!nolink [AES]) an.
!item [Opcode:]
10
!item [Syntax:]
int16_t appl_init ( void ); (!nl)
int16_t appl_init ( X_BUF_V2 *xbuf );

!item [Description:]
Die Funktion meldet das Programm beim AES an, und initialisiert die
internen ParameterÅbergabefelder.

The extra parameter to an X_BUF_V2 is an extension in 
the FreeGEM AES. If addr_in[0] is set to 1 and an initialised X_BUF_V2
structure is passed in, then on return its arch member will be
0 for DRI GEM or ViewMAX, and 16 or 32 for FreeGEM.

(!B)Hinweis:(!b) Die Versionsnummer des AES lÑût sich nach diesem Aufruf
Åber das Globalfeld (global[0]) erfragen.

!label Auto-Ordner, Start aus dem
Um zu testen, ob ein Programm aus dem Auto-Ordner heraus gestartet worden
ist, bietet sich folgendes Verfahren an:
!begin_itemize !short
!item 
Wert 0 in (!nolink [global])[0] schreiben
!item
Funktion appl_init aufrufen
!item
Globalfeld ((!nolink [global])[0]) inspizieren: steht dort immer noch eine Null, so ist
das (!nolink [AES]) noch nicht betriebsbereit, und das Programm wurde aus dem
Auto-Ordner heraus gestartet.
!end_itemize

Dieses Verfahren ist zwar nicht offiziell dokumentiert, wird aber auch im
Mausbeschleuniger MACCEL von Atari so angewendet.

KAOS-GEM 1.4.2 liefert in int_in[0] 'KA' und int_in[1] 'OS' zurÅck.

!item [(!nolink [Return]) Value:]
Die Funktion liefert die ID der Applikation zurÅck. Im Fehlerfall wird der
Wert -1 zurÅckgegeben.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Application Library

!item [See Also:]
(!link [Binding] [Bindings for appl_init]) ~ appl_find ~ appl_search ~ appl_exit
(!ende_liste)



!begin_node Bindings for appl_init
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_init ( void );
!item [Binding:]
!begin_verbatim
EXTERN AESPB c;

int16_t appl_init (void)
{
   c.cb_pcontrol = control;
   c.cb_pglobal  = global;
   c.cb_pintin   = int_in;
   c.cb_pintout  = int_out;
   c.cb_padrin   = addr_in;
   c.cb_padrout  = addr_out;

   control[4] = 0;
   crys_if (10);

   return (int_out[0]);
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 10    # Function Opcode
control+2 !! control[1] !! 0     # entry in int_in
control+4 !! control[2] !! 1     # entry in int_out
control+6 !! control[3] !! 0     # entry in addr_in
control+8 !! control[4] !! 0     # entry in addr_out
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node appl_init
(!begin_liste) [Beschreibung]
!item [Name:]
ØApplication InitializationÆ - meldet die Applikation unter (!nolink [AES]) an.
!item [AES-Nummer:]
10
!item [Deklaration:]
int16_t appl_init ( void );  (!nl)
int16_t appl_init ( X_BUF_V2 *xbuf );

!item [Beschreibung:]
Die Funktion meldet das Programm beim AES an, und initialisiert die
internen ParameterÅbergabefelder.

The extra parameter to an X_BUF_V2 is an extension in 
the FreeGEM AES. If addr_in[0] is set to 1 and an initialised X_BUF_V2
structure is passed in, then on return its arch member will be
0 for DRI GEM or ViewMAX, and 16 or 32 for FreeGEM.

(!B)Hinweis:(!b) Die Versionsnummer des AES lÑût sich nach diesem Aufruf
Åber das Globalfeld (global[0]) erfragen.

!label Auto-Ordner, Start aus dem
Um zu testen, ob ein Programm aus dem Auto-Ordner heraus gestartet worden
ist, bietet sich folgendes Verfahren an:
!begin_itemize !short
!item 
Wert 0 in (!nolink [global])[0] schreiben
!item 
Funktion appl_init aufrufen
!item 
Globalfeld ((!nolink [global])[0]) inspizieren: steht dort immer noch eine Null, so ist
das (!nolink [AES]) noch nicht betriebsbereit, und das Programm wurde aus dem
Auto-Ordner heraus gestartet.
!end_itemize

Dieses Verfahren ist zwar nicht offiziell dokumentiert, wird aber auch im
Mausbeschleuniger MACCEL von Atari so angewendet.

KAOS-GEM 1.4.2 liefert in int_in[0] 'KA' und int_in[1] 'OS' zurÅck.

!item [Ergebnis:]
Die Funktion liefert die ID der Applikation zurÅck. Im Fehlerfall wird der
Wert -1 zurÅckgegeben.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])
!item [Querverweis:]
(!link [Binding] [Bindings fÅr appl_init]) ~ appl_find ~ appl_search ~ appl_exit
(!ende_liste)



!begin_node Bindings fÅr appl_init
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_init ( void );
!item [Umsetzung:]
!begin_verbatim
EXTERN AESPB c;

int16_t appl_init (void)
{
   c.cb_pcontrol = control;
   c.cb_pglobal  = global;
   c.cb_pintin   = int_in;
   c.cb_pintout  = int_out;
   c.cb_padrin   = addr_in;
   c.cb_padrout  = addr_out;

   control[4] = 0;
   crys_if (10);

   return (int_out[0]);
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 10    # Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
