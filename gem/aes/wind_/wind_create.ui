!iflang [english]

!begin_node wind_create

(!begin_liste) [Availability]

!item [Name:]
ØWindow createÆ - meldet ein neues Fenster an.

!item [Opcode:]
100

!item [Syntax:]
int16_t wind_create ( int16_t wi_crkind, int16_t wi_crwx, int16_t wi_crwy,
                   int16_t wi_crww, int16_t wi_crwh );

!item [Description:]
Die Funktion versucht beim AES ein neues Fenster anzumelden und legt dabei
gleichzeitig sein Aussehen und die maximale Grîûe fest.

wi_crwx, wi_crwy, wi_crww, wi_crwh legen die maximale Ausdehnung des
Fensters fest.

(!I)wi_crkind(!i) beschreibt die
(!link [Komponenten] [Die Komponenten eines Fensters])
als Bitvektor:

!begin_table [l l l]
Komponente !! Wert !! Bedeutung
!hline
NAME        !! 0x0001 !! Titelzeile
CLOSER      !! 0x0002 !! Schlieûbox
FULLER      !! 0x0004 !! Volle-Grîûe-Box
MOVER       !! 0x0008 !! Fenster kann bewegt werden
INFO        !! 0x0010 !! Infozeile
SIZER       !! 0x0020 !! Grîûenverstellungsbox
UPARROW     !! 0x0040 !! Pfeil nach oben
DNARROW     !! 0x0080 !! Pfeil nach unten
VSLIDE      !! 0x0100 !! vertikaler Slider
LFARROW     !! 0x0200 !! Pfeil nach links
RTARROW     !! 0x0400 !! Pfeil nach rechts
HSLIDE      !! 0x0800 !! horizontaler Slider
HOTCLOSEBOX !! 0x1000 !! Close-Box mit Auto-Repeat
MENUBAR     !! 0x1000 !! Menuzeile
BACKDROP    !! 0x2000 !! Hintergrund-Box
ICONIFIER   !! 0x4000 !! Iconify-Button
!end_table

(!B)Hinweis:(!b) Die Hotclose-Box steht erst ab PC-GEM bzw. MagiC (jeweils)
ab Version 2.0 zur VerfÅgung. Nicht benîtigte FensterrÑnder (z.B. Rand
unten) werden ab AES-Version 4.x bzw. (!nolink [MagiC])-3 weggelassen; dadurch stehen
einige Pixel mehr an nutzbarer FlÑche zur VerfÅgung.

MENUBAR steht nur in XaAES zur VerfÅgung.

Das Vorhandensein neuerer Komponenten wie beispielsweise dem Iconify-Button,
sollte am besten per (!link [appl_getinfo][%apgi_11]) (Opcode 11) erfragt werden.

!item [(!nolink [Return]) Value:]
Die Funktion liefert ein nicht negatives Handle, falls das (!nolink [AES]) noch ein
freies Windowhandle zur VerfÅgung hat. Ein RÅckgabewert kleiner Null
signalisiert einen Fehler oder keine weiteren Handles mehr.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Window Library

!item [See Also:]
(!link [Binding] [Bindings for wind_create])  ~ wind_delete

(!ende_liste)



!begin_node Bindings for wind_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wind_create ( int16_t wi_crkind, int16_t wi_crwx, int16_t wi_crwy,
                   int16_t wi_crww, int16_t wi_crwh );

!item [Binding:]
!begin_verbatim
int16_t wind_create (int16_t wi_crkind, int16_t wi_crwx,
                     int16_t wi_crwy, int16_t wi_crww,
                     int16_t wi_crwh)
{
   int_in[0]  = wi_crkind;
   int_in[1]  = wi_crwx;
   int_in[2]  = wi_crwy;
   int_in[3]  = wi_crww;  
   int_in[4]  = wi_crwh;

   return ( crys_if(100) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 100   # Function Opcode
control+2 !! control[1] !! 5     # entry in int_in
control+4 !! control[2] !! 1     # entry in int_out
control+6 !! control[3] !! 0     # entry in addr_in
control+8 !! control[4] !! 0     # entry in addr_out
int_in    !! int_in[0]  !! wi_crkind
int_in+2  !! int_in[1]  !! wi_crwx
int_in+4  !! int_in[2]  !! wi_crwy
int_in+6  !! int_in[3]  !! wi_crww
int_in+8  !! int_in[4]  !! wi_crwh
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node wind_create

(!begin_liste) [Beschreibung]

!item [Name:]
ØWindow createÆ - meldet ein neues Fenster an.

!item [AES-Nummer:]
100

!item [Deklaration:]
int16_t wind_create ( int16_t wi_crkind, int16_t wi_crwx, int16_t wi_crwy,
                   int16_t wi_crww, int16_t wi_crwh );

!item [Beschreibung:]
Die Funktion versucht beim AES ein neues Fenster anzumelden und legt dabei
gleichzeitig sein Aussehen und die maximale Grîûe fest.

wi_crwx, wi_crwy, wi_crww, wi_crwh legen die maximale Ausdehnung des
Fensters fest.

(!I)wi_crkind(!i) beschreibt die
(!link [Komponenten] [Die Komponenten eines Fensters])
als Bitvektor:

!begin_table [l l l]
Komponente !! Wert !! Bedeutung
!hline
NAME        !! 0x0001 !! Titelzeile
CLOSER      !! 0x0002 !! Schlieûbox
FULLER      !! 0x0004 !! Volle-Grîûe-Box
MOVER       !! 0x0008 !! Fenster kann bewegt werden
INFO        !! 0x0010 !! Infozeile
SIZER       !! 0x0020 !! Grîûenverstellungsbox
UPARROW     !! 0x0040 !! Pfeil nach oben
DNARROW     !! 0x0080 !! Pfeil nach unten
VSLIDE      !! 0x0100 !! vertikaler Slider
LFARROW     !! 0x0200 !! Pfeil nach links
RTARROW     !! 0x0400 !! Pfeil nach rechts
HSLIDE      !! 0x0800 !! horizontaler Slider
HOTCLOSEBOX !! 0x1000 !! Close-Box mit Auto-Repeat
MENUBAR     !! 0x1000 !! Menuzeile
BACKDROP    !! 0x2000 !! Hintergrund-Box
ICONIFIER   !! 0x4000 !! Iconify-Button
!end_table

(!B)Hinweis:(!b) Die Hotclose-Box steht erst ab PC-GEM bzw. MagiC (jeweils)
ab Version 2.0 zur VerfÅgung. Nicht benîtigte FensterrÑnder (z.B. Rand
unten) werden ab AES-Version 4.x bzw. (!nolink [MagiC])-3 weggelassen; dadurch stehen
einige Pixel mehr an nutzbarer FlÑche zur VerfÅgung.

MENUBAR steht nur in XaAES zur VerfÅgung.

Das Vorhandensein neuerer Komponenten wie beispielsweise dem Iconify-Button,
sollte am besten per (!link [appl_getinfo][%apgi_11]) (Opcode 11) erfragt werden.

!item [Ergebnis:]
Die Funktion liefert ein nicht negatives Handle, falls das (!nolink [AES]) noch ein
freies Windowhandle zur VerfÅgung hat. Ein RÅckgabewert kleiner Null
signalisiert einen Fehler oder keine weiteren Handles mehr.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
Fensterverwaltung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr wind_create])  ~ wind_delete

(!ende_liste)



!begin_node Bindings fÅr wind_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wind_create ( int16_t wi_crkind, int16_t wi_crwx, int16_t wi_crwy,
                   int16_t wi_crww, int16_t wi_crwh );

!item [Umsetzung:]
!begin_verbatim
int16_t wind_create (int16_t wi_crkind, int16_t wi_crwx,
                     int16_t wi_crwy, int16_t wi_crww,
                     int16_t wi_crwh)
{
   int_in[0]  = wi_crkind;
   int_in[1]  = wi_crwx;
   int_in[2]  = wi_crwy;
   int_in[3]  = wi_crww;  
   int_in[4]  = wi_crwh;

   return ( crys_if(100) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 100   # Opcode der Funktion
control+2 !! control[1] !! 5     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! wi_crkind
int_in+2  !! int_in[1]  !! wi_crwx
int_in+4  !! int_in[2]  !! wi_crwy
int_in+6  !! int_in[3]  !! wi_crww
int_in+8  !! int_in[4]  !! wi_crwh
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
