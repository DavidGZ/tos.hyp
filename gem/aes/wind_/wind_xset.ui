!iflang [english]

!begin_node wind_xset

(!begin_liste) [Availability]

!item [Name:]
ØSet WindowÆ - verÑndert einzelne Parameter eines Fensters.

!item [Opcode:]
105

!item [Syntax:]
int16_t wind_xset ( int16_t wi_shandle, int16_t wi_sfield,
                    int16_t wi_sw1, int16_t wi_sw2,
                    int16_t wi_sw3, int16_t wi_sw4,
                    int16_t *wo_sw1, int16_t *wo_sw2,
                    int16_t *wo_sw3, int16_t *wo_sw4 );

!item [Description:]
Die Funktion verÑndert, abhÑngig von den Åbergebenen Parametern,
verschiedene Eigenschaften des Fensters mit der Kennung (!I)wi_shandle(!i).
Es gilt.

Zusammenfassung aller (!link [Unterfunktionen] [öbersicht der wind_get/set Unterfunktionen])

!begin_xlist !short [WF_TOP]

!label WF_CURRXYWH, wind_xset
!item [WF_CURRXYWH (5)] (!nl)
setzt die Fenstergrîûe aus (!I)wi_sw1(!i), (!I)wi_sw2(!i), (!I)wi_sw3(!i)
und (!I)wi_sw4(!i) fest.

XaAES is compatible with all other AES's, except from the following points:
!begin_enumerate
!item If x, y, w and h all have a value of -1, XaAES ignores the call,
      but fills in any return values when needed.
!item x and y values of -1 are 'legal', i.e, one cannot use -1 to use
      any old x value. Ofcourse, x and y coordinates are checked to be
      inside the rootwindow (not X when noleft = false).
!item When h have a value of 0, the window is infact shaded. This is a thing
      N.AES does with MiNTSetter, altho I'm not sure this is correct.
      The application is sent a WM_SHADED. On the next
      wind_set(handle, WF_CURRXYWH,...) where the h coordinate is not equal
      to the window's shaded height, the window is unshaded. While the
      window is shaded via this method, shift-clicks on the window title to 
      shade a window is ignored.
!end_enumerate
XaAES since 2004-09-22, there is an short (!link [version][WF_CURRXYWH, wind_set]).


!label WF_FULLXYWH, wind_xset
!item [WF_FULLXYWH (7)] (!nl)
If either (!I)wi_sw1(!i), (!I)wi_sw2(!i), (!I)wi_sw3(!i)
or (!I)wi_sw4(!i) have a value of -1, that coordinate is not changed.
If ALL coordinates have a value of -1, the window is actually moved to the
current FULLXYWH coordinates, making the current window position the new
PREVXYWH position.

!begin_enumerate !short
!item  XaAES returns the resulting FULLXYWH, which the window will be moved to
   on the next use of the FULLED gadget or...
!item When all coordinates passed have a value of -1, XaAES return the
   CURRXYWH of the new position the window was moved to, removing the
   need for a wind_get(handle, WF_CURRXYWH,...) call.
!end_enumerate
XaAES since 2004-09-22, there is an short (!link [version][WF_FULLXYWH, wind_set]).


!label WF_PREVXYWH, wind_xset
!item [WF_PREVXYWH (6)] (!nl)
If either(!I)wi_sw1(!i), (!I)wi_sw2(!i), (!I)wi_sw3(!i)
or (!I)wi_sw4(!i)  have a value of -1, that coordinate is not changed.
If ALL coordinates have a value of -1, the window is actually moved to the
current PREVXYWH coordinates, making the current window position the new
PREVXYWH position.
!begin_enumerate !short
!item  XaAES returns the resulting PREVXYWH, which the window will be moved to
       on the next use of the FULLED gadget or...
!item  When all coordinates passed have a value of -1, XaAES return the
       CURRXYWH of the new position the window was moved to, removing the
       need for a wind_get(handle, WF_CURRXYWH,...) call.
!end_enumerate
XaAES since 2004-09-22, there is an short (!link [version][WF_PREVXYWH, wind_set]).

!end_xlist

(!B)Hinweis:(!b) Die Parameter wi_sw1, wi_sw2, wi_sw3 und wi_sw4 sind dabei
von der Åber den Parameter (!I)wi_sfield(!i) Åbergebenen Funktionsnummer
abhÑngig.

!item [(!nolink [Return]) Value:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Availability:]
XaAES since 2004-09-22

!item [Group:]
Window Library

!item [See Also:]
(!link [Binding] [Bindings for wind_xset]) ~  wind_get ~  wind_create ~  OBJECT ~
(!link [UnterfunktionsÅbersicht] [öbersicht der wind_get/set Unterfunktionen])


(!ende_liste)

!begin_node Bindings for wind_xset
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wind_xset ( int16_t wi_shandle, int16_t wi_sfield,
                    int16_t wi_sw1, int16_t wi_sw2,
                    int16_t wi_sw3, int16_t wi_sw4,
                    int16_t *wo_sw1, int16_t *wo_sw2,
                    int16_t *wo_sw3, int16_t *wo_sw4 );

!item [Binding:]
!begin_verbatim
int16_t wind_xset ( int16_t wi_shandle, int16_t wi_sfield,
                    int16_t wi_sw1, int16_t wi_sw2,
                    int16_t wi_sw3, int16_t wi_sw4,
                    int16_t *wo_sw1, int16_t *wo_sw2,
                    int16_t *wo_sw3, int16_t *wo_sw4 );
{
   int_in[0]  = wi_shandle;
   int_in[1]  = wi_sfield;
   int_in[2]  = wi_sw1;
   int_in[3]  = wi_sw2;
   int_in[4]  = wi_sw3;
   int_in[5]  = wi_sw4;

   crys_if(105);

   *wo_sw1 = int_out[1];
   *wo_sw1 = int_out[2];
   *wo_sw1 = int_out[3];
   *wo_sw1 = int_out[4];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 105   # Function Opcode
control+2 !! control[1] !! 6     # entry in int_in
control+4 !! control[2] !! 5     # entry in int_out
control+6 !! control[3] !! 0     # entry in addr_in
control+8 !! control[4] !! 0     # entry in addr_out
int_in    !! int_in[0]  !! wi_shandle
int_in+2  !! int_in[1]  !! wi_sfield
int_in+4  !! int_in[2]  !! wi_sw1
int_in+6  !! int_in[3]  !! wi_sw2
int_in+8  !! int_in[4]  !! wi_sw3
int_in+10 !! int_in[5]  !! wi_sw4
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! wo_sw1
int_out+4 !! int_out[2] !! wo_sw2
int_out+6 !! int_out[3] !! wo_sw3
int_out+8 !! int_out[4] !! wo_sw4
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node wind_xset

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet WindowÆ - verÑndert einzelne Parameter eines Fensters.

!item [AES-Nummer:]
105

!item [Deklaration:]
int16_t wind_xset ( int16_t wi_shandle, int16_t wi_sfield,
                    int16_t wi_sw1, int16_t wi_sw2,
                    int16_t wi_sw3, int16_t wi_sw4,
                    int16_t *wo_sw1, int16_t *wo_sw2,
                    int16_t *wo_sw3, int16_t *wo_sw4 );

!item [Beschreibung:]
Die Funktion verÑndert, abhÑngig von den Åbergebenen Parametern,
verschiedene Eigenschaften des Fensters mit der Kennung (!I)wi_shandle(!i).
Es gilt fÅr (!I)wi_sfield(!i).

Zusammenfassung aller (!link [Unterfunktionen] [öbersicht der wind_get/set Unterfunktionen])

!begin_xlist [WF_TOP]

!label WF_CURRXYWH, wind_xset
!item [WF_CURRXYWH (5)] (!nl)
setzt die Fenstergrîûe aus (!I)wi_sw1(!i), (!I)wi_sw2(!i), (!I)wi_sw3(!i)
und (!I)wi_sw4(!i) fest.

XaAES is compatible with all other AES's, except from the following points:
!begin_enumerate
!item If x, y, w and h all have a value of -1, XaAES ignores the call,
      but fills in any return values when needed.
!item x and y values of -1 are 'legal', i.e, one cannot use -1 to use
      any old x value. Ofcourse, x and y coordinates are checked to be
      inside the rootwindow (not X when noleft = false).
!item When h have a value of 0, the window is infact shaded. This is a thing
      N.AES does with MiNTSetter, altho I'm not sure this is correct.
      The application is sent a WM_SHADED. On the next
      wind_set(handle, WF_CURRXYWH,...) where the h coordinate is not equal
      to the window's shaded height, the window is unshaded. While the
      window is shaded via this method, shift-clicks on the window title to 
      shade a window is ignored.
!end_enumerate
XaAES since 2004-09-22, there is an short (!link [version][WF_CURRXYWH, wind_set]).


!label WF_FULLXYWH, wind_xset
!item [WF_FULLXYWH (7)] (!nl)
If either (!I)wi_sw1(!i), (!I)wi_sw2(!i), (!I)wi_sw3(!i)
or (!I)wi_sw4(!i) have a value of -1, that coordinate is not changed.
If ALL coordinates have a value of -1, the window is actually moved to the
current FULLXYWH coordinates, making the current window position the new
PREVXYWH position.

!begin_enumerate !short
!item  XaAES returns the resulting FULLXYWH, which the window will be moved to
   on the next use of the FULLED gadget or...
!item When all coordinates passed have a value of -1, XaAES return the
   CURRXYWH of the new position the window was moved to, removing the
   need for a wind_get(handle, WF_CURRXYWH,...) call.
!end_enumerate
XaAES since 2004-09-22, there is an short (!link [version][WF_FULLXYWH, wind_set]).


!label WF_PREVXYWH, wind_xset
!item [WF_PREVXYWH (6)] (!nl)
If either(!I)wi_sw1(!i), (!I)wi_sw2(!i), (!I)wi_sw3(!i)
or (!I)wi_sw4(!i)  have a value of -1, that coordinate is not changed.
If ALL coordinates have a value of -1, the window is actually moved to the
current PREVXYWH coordinates, making the current window position the new
PREVXYWH position.
!begin_enumerate !short
!item  XaAES returns the resulting PREVXYWH, which the window will be moved to
       on the next use of the FULLED gadget or...
!item  When all coordinates passed have a value of -1, XaAES return the
       CURRXYWH of the new position the window was moved to, removing the
       need for a wind_get(handle, WF_CURRXYWH,...) call.
!end_enumerate
XaAES since 2004-09-22, there is an short (!link [version][WF_PREVXYWH, wind_set]).

!end_xlist

(!B)Hinweis:(!b) Die Parameter wi_sw1, wi_sw2, wi_sw3 und wi_sw4 sind dabei
von der Åber den Parameter (!I)wi_sfield(!i) Åbergebenen Funktionsnummer
abhÑngig.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
Fensterverwaltung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr wind_xset]) ~  wind_get ~  wind_create ~  OBJECT ~
(!link [UnterfunktionsÅbersicht] [öbersicht der wind_get/set Unterfunktionen])

(!ende_liste)



!begin_node Bindings fÅr wind_xset
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wind_xset ( int16_t wi_shandle, int16_t wi_sfield,
                    int16_t wi_sw1, int16_t wi_sw2,
                    int16_t wi_sw3, int16_t wi_sw4,
                    int16_t *wo_sw1, int16_t *wo_sw2,
                    int16_t *wo_sw3, int16_t *wo_sw4 );

!item [Binding:]
!begin_verbatim
int16_t wind_xset ( int16_t wi_shandle, int16_t wi_sfield,
                    int16_t wi_sw1, int16_t wi_sw2,
                    int16_t wi_sw3, int16_t wi_sw4,
                    int16_t *wo_sw1, int16_t *wo_sw2,
                    int16_t *wo_sw3, int16_t *wo_sw4 );
{
   int_in[0]  = wi_shandle;
   int_in[1]  = wi_sfield;
   int_in[2]  = wi_sw1;
   int_in[3]  = wi_sw2;
   int_in[4]  = wi_sw3;
   int_in[5]  = wi_sw4;

   crys_if(105);

   *wo_sw1 = int_out[1];
   *wo_sw1 = int_out[2];
   *wo_sw1 = int_out[3];
   *wo_sw1 = int_out[4];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 105   # Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 5     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! wi_shandle
int_in+2  !! int_in[1]  !! wi_sfield
int_in+4  !! int_in[2]  !! wi_sw1
int_in+6  !! int_in[3]  !! wi_sw2
int_in+8  !! int_in[4]  !! wi_sw3
int_in+10 !! int_in[5]  !! wi_sw4
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! wo_sw1
int_out+4 !! int_out[2] !! wo_sw2
int_out+6 !! int_out[3] !! wo_sw3
int_out+8 !! int_out[4] !! wo_sw4
!end_table

(!ende_liste)

!end_node
!end_node

!endif
