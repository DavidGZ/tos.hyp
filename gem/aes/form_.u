## Hypertext zum TOS-Betriebssystem
## entwickelt fÅr den ST-Guide
##
## Last Edit: 08.11.1997
##
## Kapitel 4: AES-Formularverwaltung



!begin_node form_alert

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm alert boxÆ - zeichnet eine Alarmbox.

!item [AES-Nummer:]
52

!item [Binding:]
(!link [Bindings fÅr form_alert] [Bindings fÅr form_alert])

!item [Beschreibung:]
Die Funktion stellt eine Alarmbox auf dem Bildschirm dar und gibt die Nummer
des Buttons zurÅck, mit dem die Alarmbox verlassen wurde. Der
Bildschirmhintergrund wird dabei vom AES gesichert.

Der Parameter (!I)fo_adefbttn(!i) bestimmt die Nummer des Defaultbuttons der
darzustellenden Alarmbox. Es gilt:

!begin_table [c c]
Wert !! Bedeutung
!hline
0 !! kein Defaultbutton
1 !! erster Button
2 !! zweiter Button
3 !! dritter Button
4 !! Info-Icon, nur N.AES
5 !! Diskettensymbol, nur (!nolink [N.AES])
!end_table

Der Parameter (!I)fo_astring(!i) ist ein Zeiger auf den String, der das
Aussehen der Alarmbox bestimmt. Das verwendete Format ist
"[n][lines][buttons]" wobei (!I)n(!i) die Nummer des einzublendenden
Icons ist:

!begin_xlist !short [n Bedeutung]
!item [n Bedeutung]
Symbole
!item [~]
~
!item [0 kein Icon]
~
!item [1 Ausrufezeichen]

!ifdest [html]
!ifset [No_Bilder_Pfad]
!image rufen
!else
!image (!picture_path)\rufen
!endif
!else
!image (!picture_path)\rufen
!endif

!item [2 Fragezeichen]

!ifdest [html]
!ifset [No_Bilder_Pfad]
!image frage
!else
!image (!picture_path)\frage
!endif
!else
!image (!picture_path)\frage
!endif

!item [3 Stopschild]

!ifdest [html]
!ifset [No_Bilder_Pfad]
!image stop
!else
!image (!picture_path)\stop
!endif
!else
!image (!picture_path)\stop
!endif

!end_xlist

(!B)Hinweis:(!b) Die zur VerfÅgung stehenden Icons sollten nicht willkÅrlich
eingesetzt werden, sondern zur jeweiligen Situation passen, d.h:

!begin_itemize
!item das (!B)Ausrufezeichen(!b) sollte fÅr alle Arten von Mitteilungen
      benutzt werden, die der Benutzer nur kurz bestÑtigen soll.
!item das (!B)Fragezeichen(!b) dient fÅr alle Abfragen, die vor einer
      Aktion ausgefÅhrt werden sollten (z.B. das Lîschen einer Datei).
!item das (!B)Stopschild(!b) sollte bei wichtigen Problemen eingesetzt
      werden, die der Benutzer unbedingt zur Kenntnis nehmen muss.
!end_itemize

Die Komponente (!I)lines(!i) beschreibt die einzelnen Textzeilen. Es sind
hîchstens fÅnf Textzeilen mit maximal 30 Zeichen, die durch das Zeichen '|'
getrennt werden, erlaubt.

Die Komponente (!I)buttons(!i) beschreibt die Texte fÅr hîchstens drei
Buttons, die durch das Zeichen '|' getrennt werden.

(!B)Hinweis zu MagiC:(!b) Aufgrund der KompatibilitÑt zu GEM/3 kînnen
Alertboxen hier bis zu 40 Zeichen pro Textzeile, und 20 Zeichen pro Button
enthalten. DarÅberhinaus sind alle (!nolink [Alertboxen]) komplett Åber die Tastatur
bedienbar.

!item [Ergebnis:]
Als Ergebnis wird die Nummer des Buttons geliefert, mit dem die Alertbox
verlassen wurde; dabei besitzt der ganz links stehende Button den Wert 1.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_alert])

(!ende_liste)



!begin_node Bindings fÅr form_alert
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_alert ( WORD fo_adefbttn, CONST BYTE *fo_astring );

!item [Implementierung:]
!begin_verbatim
WORD form_alert (WORD fo_adefbttn, CONST BYTE *fo_astring)
{
   int_in[0]  = fo_adefbttn;
   addr_in[0] = fo_astring;

   return ( crys_if(52) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 52    Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_adefbttn
addr_in   !! addr_in[0] !! fo_astring
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node


!begin_node form_button

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm ButtonÆ - simuliert das Anklicken eines Objektes

!item [AES-Nummer:]
56

!item [Binding:]
(!link [Bindings fÅr form_button] [Bindings fÅr form_button])

!item [Beschreibung:]
Die Funktion simuliert das Anklicken eines Objektes. Es gilt:

!begin_xlist !short [fo_bnxtobj]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_btree]
Adresse des Objektbaumes
!item [fo_bobject]
zu bearbeitendes Objekt
!item [fo_bclicks]
Anzahl der Mausklicks
!item [fo_bnxtobj]
neues aktuelles Objekt, oder 0, falls das nÑchste Objekt den Status HIDDEN
oder DISABLED besitzt bzw. nicht editierbar ist.
!end_xlist

(!B)Hinweis:(!b) Bei einem (!nolink [Doppelklick]) auf ein Objekt mit TOUCHEXIT, wird
im Parameter (!I)fo_bnxtobj(!i) Bit-15 gesetzt. Die Rechteckliste wird von
dieser Funktion (!I)nicht(!i) beachtet.

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist Null, falls ein Exitobjekt selektiert
wurde, sonst ist er positiv.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_button]) ~  OBJECT  ~ evnt_multi ~  form_keybd

(!ende_liste)



!begin_node Bindings fÅr form_button
!ignore_index
(!begin_liste) [Implementierung:]

!item [C:]
WORD form_button ( OBJECT *fo_btree, WORD fo_bobject,
WORD fo_bclicks, WORD *fo_bnxtobj );

!item [Implementierung:]
!begin_verbatim
WORD form_button (OBJECT *fo_btree, WORD fo_bobject,
                  WORD fo_bclicks, WORD *fo_bnxtobj)
{
   int_in[0]  = fo_bobject;
   int_in[1]  = fo_bclicks;
   addr_in[0] = fo_btree;

   crys_if (56);

   *fo_bnxtobj = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 56    Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_bobject
int_in+2  !! int_in[1]  !! fo_bclicks
addr_in   !! addr_in[0] !! fo_btree
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! fo_bnxtobj
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_center

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm centered ObjectÆ - zentriert ein Objekt auf dem Bildschirm.

!item [AES-Nummer:]
54

!item [Binding:]
(!link [Bindings fÅr form_center] [Bindings fÅr form_center])

!item [Beschreibung:]
Die Funktion zentriert ein Objekt in der Bildschirmmitte, und liefert die
tatsÑchliche Position des Objektes zurÅck. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_ctree]
Adresse des Objektbaumes
!item [fo_cx]
x-Koordinate
!item [fo_cy]
y-Koordinate
!item [fo_cw]
Breite
!item [fo_ch]
Hîhe (jeweils zentriert)
!end_xlist

(!B)Hinweis:(!b) Die Funktion berÅcksichtigt auch spezielle Attribute des
Objektes, wie z.B. OUTLINED (nicht jedoch SHADOWED).

Ab PC-(!nolink [GEM])/3 wird der Objektbaum in y-Richtung (!I)nicht(!i) mehr auf dem
ganzen Bildschirm zentriert. BegrÅndet wurde dies damit, dass ein Benutzer
auf Groûbildschirmen ansonsten einen zu weiten Weg von der MenÅzeile bis
zum Objekt (etwa einer Dialogbox) zurÅcklegen muss.

!item [Ergebnis:]
Als Ergebnis wird immer eine 1 zurÅckgegeben.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_center]) ~  OBJECT ~ objc_offset

(!ende_liste)



!begin_node Bindings fÅr form_center
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_center ( OBJECT *fo_ctree, WORD *fo_cx,
WORD *fo_cy, WORD *fo_cw, WORD *fo_ch );

!item [Implementierung:]
!begin_verbatim
WORD form_center (OBJECT *fo_ctree, WORD *fo_cx,
                  WORD *fo_cy, WORD *fo_cw, WORD *fo_ch)
{
   addr_in[0] = fo_ctree;

   crys_if (54);

   *fo_cx = int_out[1];
   *fo_cy = int_out[2];
   *fo_cw = int_out[3];
   *fo_ch = int_out[4];

   return (int_out[0]);
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 54    Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 5     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! fo_ctree
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! fo_cx
int_out+4 !! int_out[2] !! fo_cy
int_out+6 !! int_out[3] !! fo_cw
int_out+8 !! int_out[4] !! fo_ch
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_dial

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm Dialog SpaceÆ - reserviert oder gibt Speicherplatz frei fÅr ein
Dialogobjekt.

!item [AES-Nummer:]
51

!item [Binding:]
(!link [Bindings fÅr form_dial] [Bindings fÅr form_dial])

!item [Beschreibung:]
Die Funktion Åbernimmt abhÑngig von den Åbergebenen Parametern verschiedene
Aufgaben. Es gilt:

!begin_xlist !short [fo_dilittlx]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_diflag]
AuszufÅhrende Aktion:
(!nl)
(!B)0 = FMD_START(!b)
Bildschirmausschnitt reservieren.
(!nl)
(!B)1 = FMD_GROW(!b)
zeichnet mehrere sich ausdehnende Rechtecke
(!nl)
(!B)2 = FMD_SHRINK(!b)
zeichnet mehrere schrumpfende Rechtecke
(!nl)
(!B)3 = FMD_FINISH(!b)
gibt den reservierten Bildschirmausschnitt wieder frei
!item [fo_dilittlx]
x-Koordinate
!item [fo_dilittly]
y-Koordinate
!item [fo_dilittlw]
Breite
!item [fo_dilittlh]
Hîhe des kleinsten Rechteckes
!item [fo_dibigx]
x-Koordinate
!item [fo_dibigy]
y-Koordinate
!item [fo_dibigw]
Breite
!item [fo_dibigh]
Hîhe des grîûten Rechteckes
!end_xlist

(!B)Hinweis:(!b) Durch den Opcode FMD_FINISH erhalten alle betroffenen
Fenster vom AES eine WM_REDRAW Nachricht. Die MenÅzeile kann auf diese Art
jedoch (!I)nicht(!i) restauriert werden, da sie auûerhalb des
Arbeitsbereichs des Desktop-Fensters liegt.

Die Opcodes FMD_GROW und FMD_SHRINK sind in PC-GEM Version 2.0 den
Rechtsstreitigkeiten zwischen (!I)Apple(!i) und (!I)Digital Research(!i)
zum Opfer gefallen.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_dial])    ~    evnt_mesag  ~     form_xdial ~
graf_growbox  ~ graf_shrinkbox

(!ende_liste)



!begin_node Bindings fÅr form_dial
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_dial ( WORD fo_diflag, WORD fo_dilittlx, WORD fo_dilittly,
WORD fo_dilittlw, WORD fo_dilittlh, WORD fo_dibigx, WORD fo_dibigy,
WORD fo_dibigw, WORD fo_dibigh );

!item [Implementierung:]
!begin_verbatim
WORD form_dial (WORD fo_diflag, WORD fo_dilittlx, WORD fo_dilittly,
                WORD fo_dilittlw, WORD fo_dilittlh, WORD fo_dibigx,
                WORD fo_dibigy, WORD fo_dibigw, WORD fo_dibigh)
{
   int_in[0]  = fo_diflag;
   int_in[1]  = fo_dilittlx;
   int_in[2]  = fo_dilittly;
   int_in[3]  = fo_dilittlw;
   int_in[4]  = fo_dilittlh;
   int_in[5]  = fo_dibigx;
   int_in[6]  = fo_dibigy;
   int_in[7]  = fo_dibigw;
   int_in[8]  = fo_dibigh;

   return ( crys_if(51) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 51    Opcode der Funktion
control+2 !! control[1] !! 9     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_diflag
int_in+2  !! int_in[1]  !! fo_dilittlx
int_in+4  !! int_in[2]  !! fo_dilittly
int_in+6  !! int_in[3]  !! fo_dilittlw
int_in+8  !! int_in[4]  !! fo_dilittlh
int_in+10 !! int_in[5]  !! fo_dibigx
int_in+12 !! int_in[6]  !! fo_dibigy
int_in+14 !! int_in[7]  !! fo_dibigw
int_in+16 !! int_in[8]  !! fo_dibigh
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_do

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm do DialogÆ - fÅhrt den Dialog mit dem Anwender durch.

!item [AES-Nummer:]
50

!item [Binding:]
(!link [Bindings fÅr form_do] [Bindings fÅr form_do])

!item [Beschreibung:]
Die Funktion Åbernimmt die Behandlung von Benutzeraktionen in einem
Formular. Es gilt:

!begin_xlist !short [fo_dostartob]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_dotree]
Zeiger auf den Objektbaum der Dialogbox
!item [fo_dostartob]
Nummer des Editobjekts, wo sich zu Dialogbeginn der Textcursor befinden
soll (0 falls der Objektbaum kein Editobjekt enthÑlt)
!end_xlist

(!B)Hinweis:(!b) Die Funktion kehrt erst dann zurÅck, wenn der Benutzer ein
Objekt mit EXIT- bzw. TOUCHEXIT Status aktiviert.

!item [Ergebnis:]
Als Ergebnis wird der Index des Objekts zurÅckgegeben, mit dessen Hilfe der
Dialog beendet wurde. Bei einem (!nolink [Doppelklick]) wird zusÑtzlich das 15. Bit
gesetzt.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_do])  ~ form_xdo  ~ OBJECT

(!ende_liste)



!begin_node Bindings fÅr form_do
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_do ( OBJECT *fo_dotree, WORD fo_dostartob );

!item [Implementierung:]
!begin_verbatim
WORD form_do (OBJECT *fo_dotree, WORD fo_dostartob)
{
   int_in[0]  = fo_dostartob;
   addr_in[0] = fo_dotree;

   return ( crys_if(50) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 50    Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_dostartob
addr_in   !! addr_in[0] !! fo_dotree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_error

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm ErrorÆ - stellt eine Fehlerbox fÅr TOS-Fehler dar.

!item [AES-Nummer:]
53

!item [Binding:]
(!link [Bindings fÅr form_error] [Bindings fÅr form_error])

!item [Beschreibung:]
Die Funktion gibt eine MS-DOS Fehlernummer im Klartext (d.h. in einer
Alertbox) aus.

Der Parameter (!I)fo_enum(!i) ist dabei die entsprechende Fehlernummer.

(!B)Hinweis:(!b) Diese Funktion ist aus KompatibilitÑtsgrÅnden zum PC-(!nolink [GEM])
vorhanden. Auf TOS-Systemen muû daher zunÑchst die GEMDOS-Fehlernummer auf
die MS-DOS Codierung umgerechnet werden. FÅr die Umrechnung ((!nolink [GEMDOS]) ->
MS-DOS) kann z.B. die folgende Formel benutzt werden:
(~(!I)fo_enum(!i)) - 30.

In N.AES gibt es einer erweiterte Form von (!nolink [form_error]) mit allen
(!nolink [GEMDOS])-Fehlercodes. Deren vorhandensein
kann mit (!link [appl_getinfo][%apgi_64]) (Opcode 64).
!item [Ergebnis:]
Als Ergebnis wird die Nummer (1-3) der ausgewÑhlten Option zurÅckgegeben.
Bei jetzigen (!nolink [GEM])-Versionen steht jedoch nur eine Option zur VerfÅgung.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_error]) ~ form_xerr ~ form_err in N.AES

(!ende_liste)



!begin_node Bindings fÅr form_error
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_error ( WORD fo_enum );

!item [Implementierung:]
!begin_verbatim
WORD form_error (WORD fo_enum)
{
   int_in[0] = fo_enum;
   return ( crys_if(53) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 53    Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_enum
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_keybd

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm KeyboardÆ - Nimmt Tastatureingaben in ein Formular vor.

!item [AES-Nummer:]
55

!item [Binding:]
(!link [Bindings fÅr form_keybd] [Bindings fÅr form_keybd])

!item [Beschreibung:]
Die Funktion Åbernimmt Tastatureingaben in ein Formular. Es gilt:

!begin_xlist !short [fo_knxtobject]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_ktree]
Adresse des Objektbaumes
!item [fo_kobject]
Nummer des Edit-Objektes
!item [fo_kobnext]
unbenutzt, sollte 0 sein
!item [fo_kchar]
eingegebenes Zeichen
!item [fo_knxtobject]
Edit-Objekt fÅr nÑchsten Aufruf
!item [fo_knxtchar]
0  = Zeichen war Cursortaste, Tabulator oder (!nolink [Return])
(!nl)
>0 = Åbergebenes Zeichen
!end_xlist

Bei der Eingabe wird ggfs. das Edit-Objekt geÑndert (Cursortasten oder
Tabulator), oder das Default-Objekt selektiert ((!nolink [Return])).

(!B)Hinweis zu MagiC, N.AES:(!b) Wird als Objektnummer der Wert 0x8765 angegeben,
so werden Tasten verarbeitet, die zusammen mit der Alternate-Taste betÑtigt
wurden. Falls ein passendes Objekt gefunden wurde, wird der Wert 1
zurÅckgegeben, das Zeichen gelîscht, und in (!I)fo_knxtobject(!i) die
zugehîrige Objektnummer Åbergeben.

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist Null, falls ein Exitobjekt gewÑhlt wurde,
sonst ist er positiv.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_keybd])  ~ OBJECT ~  objc_edit ~ form_button ~
form_wkeybd

(!ende_liste)

!begin_node Bindings fÅr form_keybd
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_keybd ( OBJECT *fo_ktree, WORD fo_kobject, WORD fo_kobnext,
WORD fo_kchar, WORD *fo_knxtobject, WORD *fo_knxtchar );

!item [Implementierung:]
!begin_verbatim
WORD form_keybd (OBJECT *fo_ktree, WORD fo_kobject,
                 WORD fo_kobnext, WORD fo_kchar,
                 WORD *fo_knxtobject, WORD *fo_knxtchar)
{
   int_in[0]  = fo_kobject;
   int_in[1]  = fo_kchar;
   int_in[2]  = fo_kobnext;
   addr_in[0] = fo_ktree;

   crys_if (55);

   *fo_knxtobject = int_out[1];
   *fo_knxtchar   = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 55    Opcode der Funktion
control+2 !! control[1] !! 3     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_kobject
int_in+2  !! int_in[1]  !! fo_kchar
int_in+4  !! int_in[2]  !! fo_kobnext
addr_in   !! addr_in[0] !! fo_ktree
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! fo_knxtobject
int_out+4 !! int_out[2] !! fo_knxtchar
!end_table

(!ende_liste)
!end_node
!end_node


!begin_node form_popup

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm (!nolink [Popup])Æ - verwaltet ein Popup-MenÅ

!item [AES-Nummer:]
135

!item [Binding:]
(!link [Bindings fÅr form_popup] [Bindings fÅr form_popup])

!item [Beschreibung:]
Die Funktion stellt ein (!nolink [Popup])-MenÅ auf dem Bildschirm dar, und Åbernimmt
dessen Verwaltung. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
Adresse des Objektbaumes
!item [x]
x-Koordinate
!item [y]
y-Koordinate, um die die Box zentriert werden soll.
!end_xlist

(!B)Hinweis:(!b) Falls die Parameter (!I)x(!i) und (!I)y(!i) den Wert 0
besitzen, werden die entsprechenden Werte aus der Objektstruktur beachtet,
und das zentrieren entfÑllt. Es wird immer dafÅr gesorgt, daû das (!nolink [Popup])
vollstÑndig auf dem Bildschirm liegt.

WÑhlbare Objekte mÅssen den Status SELECTABLE, (!I)nicht(!i) wÑhlbare
Objekte den Status DISABLED erhalten. Das Objekt mit der Nummer 0 im
Objektbaum, sollte den Typ G_BOX oder G_IBOX besitzen.

Das Vorhandensein dieser Funktion kann per appl_getinfo (Opcode 9)
festgestellt werden.

!item [Ergebnis:]
Die Funktion liefert die Nummer des gewÑhlten Objektes aus dem (!nolink [Popup])-MenÅ
oder den Wert -1.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_popup])  ~ OBJECT ~  appl_getinfo

(!ende_liste)



!begin_node Bindings fÅr form_popup
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_popup ( OBJECT *tree, WORD x, WORD y );

!item [Implementierung:]
!begin_verbatim
WORD form_popup (OBJECT *tree, WORD x, WORD y)
{
   int_in[0]  = x;
   int_in[1]  = y;
   addr_in[0] = tree;

   return ( crys_if(135) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 135   Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! x
int_in+2  !! int_in[1]  !! y
addr_in   !! addr_in[0] !! tree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_wbutton

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm Window ButtonÆ - simuliert das Anklicken eines Objektes in einem
Fenster.

!item [AES-Nummer:]
63

!item [Binding:]
(!link [Bindings fÅr form_wbutton] [Bindings fÅr form_wbutton])

!item [Beschreibung:]
Die Funktion simuliert das Anklicken eines Objektes in einem Fenster. Es
gilt:

!begin_xlist
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_btree]
Adresse des Objektbaumes
!item [fo_bobject]
zu bearbeitendes Objekt
!item [fo_bclicks]
Anzahl der Mausklicks
!item [fo_bnxtobj]
neues aktuelles Objekt, oder 0, falls das nÑchste Objekt den Status HIDDEN
oder DISABLED besitzt bzw. nicht editierbar ist.
!item [whandle]
Kennung des Fensters.
!end_xlist

(!B)Hinweis:(!b) Bei einem (!nolink [Doppelklick]) auf ein Objekt mit TOUCHEXIT, wird
im Parameter (!I)fo_bnxtobj(!i) Bit-15 gesetzt.

Die Funktion entspricht im wesentlichen form_button mit dem Unterschied,
dass hier die Rechteckliste eines Fensters beachtet wird. Die Funktion
steht in MagiC ab Version 5.10 zur VerfÅgung.

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist Null, falls ein Exitobjekt selektiert
wurde, sonst ist er positiv.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_wbutton])  ~ OBJECT ~  evnt_multi ~  form_keybd

(!ende_liste)



!begin_node Bindings fÅr form_wbutton
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_wbutton ( OBJECT *fo_btree, WORD fo_bobject, WORD fo_bclicks,
WORD *fo_bnxtobj, WORD whandle );

!item [Implementierung:]
!begin_verbatim
WORD form_wbutton (OBJECT *fo_btree, WORD fo_bobject,
                   WORD fo_bclicks, WORD *fo_bnxtobj,
                   WORD whandle)
{
   int_in[0]  = fo_bobject;
   int_in[1]  = fo_bclicks;
   int_in[2]  = whandle;

   addr_in[0] = fo_btree;

   crys_if (63);

   *fo_bnxtobj = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 63    Opcode der Funktion
control+2 !! control[1] !! 3     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_bobject
int_in+2  !! int_in[1]  !! fo_bclicks
int_in+4  !! int_in[2]  !! whandle
addr_in   !! addr_in[0] !! fo_btree
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! fo_bnxtobj
!end_table

(!ende_liste)
!end_node
!end_node


!begin_node form_wkeybd

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm Window KeyboardÆ - Nimmt Tastatureingaben in ein Formular in einem
Fenster vor.

!item [AES-Nummer:]
64

!item [Binding:]
(!link [Bindings fÅr form_wkeybd] [Bindings fÅr form_wkeybd])

!item [Beschreibung:]
Die Funktion Åbernimmt Tastatureingaben in ein Formular in einem Fenster.
Es gilt:

!begin_xlist !short [fo_knxtobject]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_ktree]
Adresse des Objektbaumes
!item [fo_kobject]
Nummer des Edit-Objektes
!item [fo_kobnext]
unbenutzt, sollte 0 sein
!item [fo_kchar]
eingegebenes Zeichen
!item [fo_knxtobject]
Edit-Objekt fÅr nÑchsten Aufruf
!item [fo_knxtchar]
0  = Zeichen war Cursortaste, Tabulator oder (!nolink [Return])
(!nl)
>0 = Åbergebenes Zeichen
!item [whandle]
Kennung des Fensters.
!end_xlist

Bei der Eingabe wird ggfs. das Edit-Objekt geÑndert (Cursortasten oder
Tabulator), oder das Default-Objekt selektiert ((!nolink [Return])).

(!B)Hinweis zu (!nolink [MagiC]):(!b) Wird als Objektnummer der Wert 0x8765 angegeben,
so werden Tasten verarbeitet, die zusammen mit der Alternate-Taste betÑtigt
wurden. Falls ein passendes Objekt gefunden wurde, wird der Wert 1
zurÅckgegeben, das Zeichen gelîscht, und in (!I)fo_knxtobject(!i) die
zugehîrige Objektnummer Åbergeben.

Diese Funktion entspricht im wesentlichen form_keybd mit dem Unterschied,
dass hier die Rechteckliste eines Fensters beachtet wird. Die Funktion
steht in MagiC ab Version 5.10 zur VerfÅgung.

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist Null, falls ein Exitobjekt gewÑhlt wurde,
sonst ist er positiv.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_wkeybd])  ~ OBJECT ~  objc_edit ~  form_button

(!ende_liste)



!begin_node Bindings fÅr form_wkeybd
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_wkeybd ( OBJECT *fo_ktree, WORD fo_kobject, WORD fo_kobnext,
WORD fo_kchar, WORD *fo_knxtobject, WORD *fo_knxtchar, WORD whandle );

!item [Implementierung:]
!begin_verbatim
WORD form_wkeybd (OBJECT *fo_ktree, WORD fo_kobject,
                  WORD fo_kobnext, WORD fo_kchar,
                  WORD *fo_knxtobject, WORD *fo_knxtchar,
                  WORD whandle)
{
   int_in[0]  = fo_kobject;
   int_in[1]  = fo_kchar;
   int_in[2]  = fo_kobnext;
   int_in[3]  = whandle;

   addr_in[0] = fo_ktree;

   crys_if (64);

   *fo_knxtobject = int_out[1];
   *fo_knxtchar   = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 64    Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_kobject
int_in+2  !! int_in[1]  !! fo_kchar
int_in+4  !! int_in[2]  !! fo_kobnext
int_in+6  !! int_in[3]  !! whandle
addr_in   !! addr_in[0] !! fo_ktree
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! fo_knxtobject
int_out+4 !! int_out[2] !! fo_knxtchar
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_xdial

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm XDialog SpaceÆ - reserviert oder gibt Speicherplatz frei fÅr ein
Dialogobjekt.

!item [AES-Nummer:]
51

!item [Binding:]
(!link [Bindings fÅr form_xdial] [Bindings fÅr form_xdial])

!item [Beschreibung:]
Die Funktion Åbernimmt abhÑngig von den Åbergebenen Parametern verschiedene
Aufgaben. Es gilt:

!begin_xlist !short [fo_dilittlx]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_diflag]
(!B)0 = FMD_START(!b)
reserviert Bildschirmspeicher fÅr den Dialog.
(!nl)
(!B)3 = FMD_FINISH(!b)
restauriert den Bildschirm und gibt den Puffer mit dem geretteten
Hintergrund wieder frei.
!item [fo_dilittlx]
x und y Koordinate,
!item [fo_dilittly]
Breite und Hîhe,
!item [fo_dilittlw]
des kleinsten sich ausdehnenden bzw.
!item [fo_dilittlh]
schlieûenden Rechtecks.
!item [fo_dibigx]
x und y Koordinate,
!item [fo_dibigy]
Breite und Hîhe,
!item [fo_dibigw]
des grîûten sich ausdehnenden bzw.
!item [fo_dibigh]
schlieûenden Rechtecks.
!item [flydial]
siehe unten
!end_xlist

(!B)Hinweis:(!b) Wenn (!I)flydial(!i) ungleich 0 ist, wird getestet, ob
genÅgend Speicher zur VerfÅgung steht, um den Hintergrund der Dialogbox zu
retten. Ein Zeiger auf die geretteten Daten wird dann in dieser Variablen
vermerkt. Falls nicht genÅgend Speicher zur VerfÅgung steht, um den
Hintergrund zu retten, ist die per form_xdo zu bearbeitende Dialogbox nicht
verschiebbar; in diesem Fall wird auch keine 'Flugecke' im Dialog angezeigt.

Das Vorhandensein der Flydials kann per (!link [appl_getinfo][%apgi_14]) (Opcode 14)
abgefragt werden.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_xdial])   ~ evnt_mesag    ~ form_dial ~
graf_growbox ~  graf_shrinkbox

(!ende_liste)



!begin_node Bindings fÅr form_xdial
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_xdial ( WORD fo_diflag, WORD fo_dilittlx, WORD fo_dilittly,
WORD fo_dilittlw, WORD fo_dilittlh, WORD fo_dibigx, WORD fo_dibigy,
WORD fo_dibigw, WORD fo_dibigh, VOID **flydial );

!item [Implementierung:]
!begin_verbatim
WORD form_xdial (WORD fo_diflag, WORD fo_dilittlx, WORD fo_dilittly,
                 WORD fo_dilittlw, WORD fo_dilittlh, WORD fo_dibigx,
                 WORD fo_dibigy, WORD fo_dibigw, WORD fo_dibigh,
                 VOID **flydial)
{
   int_in[0]  = fo_diflag;
   int_in[1]  = fo_dilittlx;
   int_in[2]  = fo_dilittly;
   int_in[3]  = fo_dilittlw;
   int_in[4]  = fo_dilittlh;
   int_in[5]  = fo_dibigx;
   int_in[6]  = fo_dibigy;
   int_in[7]  = fo_dibigw;
   int_in[8]  = fo_dibigh;
   addr_in[0] = flydial;

   return ( crys_if(51) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 51    Opcode der Funktion
control+2 !! control[1] !! 9     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_diflag
int_in+2  !! int_in[1]  !! fo_dilittlx
int_in+4  !! int_in[2]  !! fo_dilittly
int_in+6  !! int_in[3]  !! fo_dilittlw
int_in+8  !! int_in[4]  !! fo_dilittlh
int_in+10 !! int_in[5]  !! fo_dibigx
int_in+12 !! int_in[6]  !! fo_dibigy
int_in+14 !! int_in[7]  !! fo_dibigw
int_in+16 !! int_in[8]  !! fo_dibigh
addr_in   !! addr_in[0] !! flydial
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_xdo

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm do XDialogÆ - fÅhrt einen erweiterten Dialog mit dem Anwender durch.

!item [AES-Nummer:]
50

!item [Binding:]
(!link [Bindings fÅr form_xdo] [Bindings fÅr form_xdo])

!item [Beschreibung:]
Die Funktion Åbernimmt die Behandlung von Benutzeraktionen in einem
Formular.

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
Zeiger auf den Objektbaum der Dialogbox
!item [startob]
Nummer des Editobjekts, wo sich zu Dialogbeginn der Textcursor befinden soll
(0 falls der Objektbaum kein Editobjekt enthÑlt).
!item [lastcrsr]
enthÑlt die Nummer des Objekts, in dem sich der Cursor beim Beenden des
Dialogs befand.
!item [tabs]
Zeiger auf Tastatur-Tabellen oder NULL
!item [flydial]
der entsprechende von form_xdial gelieferte Parameter, oder NULL, wenn auf
Flydials verzichtet wird.
!end_xlist

(!B)Hinweis:(!b) Die Funktion steht nur unter MagiC (ab Version 2.0) zur
VerfÅgung. Das Vorhandensein der Flydials, der Tastaturtabellen sowie der
Mîglichkeit, die letzte Cursorposition zu erfragen, kann per
(!link [appl_getinfo][%apgi_14]) (Opcode 14) abgefragt werden.

!item [Ergebnis:]
Als Ergebnis wird der Index des Objekts zurÅckgegeben, mit dessen Hilfe der
Dialog beendet wurde.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_xdo])  ~ form_do

(!ende_liste)



!begin_node Bindings fÅr form_xdo
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_xdo ( OBJECT *tree, WORD startob, WORD *lastcrsr,
XDO_INF *tabs, VOID *flydial );

!item [Implementierung:]
!begin_verbatim
WORD form_xdo ((!nolink [OBJECT]) *tree, WORD startob, WORD *lastcrsr,
               XDO_INF *tabs, VOID *flydial)
{
   int_in[0]  = startob;
   addr_in[0] = tree;
   addr_in[1] = tabs;
   addr_in[2] = flydial;

   crys_if (50);

   *lastcrsr = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 50    Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 3     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! startob
addr_in   !! addr_in[0] !! tree
addr_in+4 !! addr_in[1] !! tabs
addr_in+8 !! addr_in[2] !! flydial
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! lastcrsr
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node form_xerr

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm XErrorÆ - stellt eine Fehlerbox fÅr TOS-Fehler dar.

!item [AES-Nummer:]
136

!item [Binding:]
(!link [Bindings fÅr form_xerr] [Bindings fÅr form_xerr])

!item [Beschreibung:]
Gibt eine Fehlerbox auf dem Bildschirm aus, die die Åbergebene Fehlernummer
im Klartext beinhaltet. Im Gegensatz zu form_error entfÑllt jedoch eine
Umrechnung vom TOS in das MSDOS Format.

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [errcode]
normaler, negativer GEMDOS oder BIOS Fehlercode. Falls dieser EBREAK
(Programmabbruch per Control-C) oder E_OK (kein Fehler) ist, wird keine
Alertbox angezeigt.
!item [errfile]
Pfad einer Datei, in der der Fehler aufgetreten ist. Bei einem Nullpointer
wird der Parameter ignoriert; -1 bedeutet daû die Zeile "Programm gab
zurÅck:" der Meldung vorangestellt wird.
!end_xlist

(!B)Hinweis:(!b) Die Funktion steht nur unter MagiC (ab Version 2.0) zur
VerfÅgung.

!item [Ergebnis:]
Als Ergebnis wird die Nummer (1-3) der ausgewÑhlten Option zurÅckgegeben.
Bei der jetzigen GEM-Version steht jedoch nur eine Option zur VerfÅgung.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_xerr]) ~  form_error

(!ende_liste)



!begin_node Bindings fÅr form_xerr
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD form_xerr ( LONG errcode, BYTE *errfile );

!item [Implementierung:]
!begin_verbatim
WORD form_xerr (LONG errcode, BYTE *errfile)
{
   int_in[0]  = errcode (High);
   int_in[1]  = errcode (Low);
   addr_in[0] = errfile;

   return ( crys_if(136) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 136   Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! errcode (High)
int_in+2  !! int_in[1]  !! errcode (Low)
addr_in   !! addr_in[0] !! errfile
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node


!begin_node xfrm_popup

(!begin_liste) [Beschreibung:]

!item [Name:]
ØForm (!nolink [Popup])Æ - verwaltet ein (!nolink [Popup])-MenÅ

!item [AES-Nummer:]
135

!item [Binding:]
(!link [Bindings fÅr xfrm_popup] [Bindings fÅr xfrm_popup])

!item [Beschreibung:]
Die Funktion stellt ein Popup-MenÅ auf dem Bildschirm dar, und Åbernimmt
dessen Verwaltung. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
Adresse des Objektbaumes
!item [x]
x-Koordinate
!item [y]
y-Koordinate, um die die Box zentriert werden soll.

!item [firstscrlob]   ?????
!item [lastscrlob]   ?????
!item [nlines]   ?????
!item [init]   ?????
!item [param]   ?????
!item [lastscrlpos]   ?????

!end_xlist

(!B)Hinweis:(!b) Falls die Parameter (!I)x(!i) und (!I)y(!i) den Wert 0
besitzen, werden die entsprechenden Werte aus der Objektstruktur beachtet,
und das zentrieren entfÑllt. Es wird immer dafÅr gesorgt, daû das (!nolink [Popup])
vollstÑndig auf dem Bildschirm liegt.

WÑhlbare Objekte mÅssen den Status SELECTABLE, (!I)nicht(!i) wÑhlbare
Objekte den Status DISABLED erhalten. Das Objekt mit der Nummer 0 im
Objektbaum, sollte den Typ G_BOX oder G_IBOX besitzen.


(!B)Achtung:(!b) Die Funktion steht ab MagiC 5.03 zur VerfÅgung.

!item [Ergebnis:]
Die Funktion liefert die Nummer des gewÑhlten Objektes aus dem (!nolink [Popup])-MenÅ
oder den Wert -1.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr xfrm_popup]) ~  OBJECT ~ form_popup

(!ende_liste)



!begin_node Bindings fÅr xfrm_popup
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
xfrm_popup( OBJECT *tree, WORD x, WORD y, WORD firstscrlob,
        WORD lastscrlob, WORD nlines,
        void  cdecl (*init)(OBJECT *tree, WORD scrollpos,
             WORD nlines, void *param),
        void *param, WORD *lastscrlpos )

!item [Implementierung:]
!begin_verbatim
xfrm_popup( OBJECT *tree, WORD x, WORD y, WORD firstscrlob,
            WORD lastscrlob, WORD nlines,
            void  cdecl (*init)(OBJECT *tree, WORD scrollpos,
            WORD nlines, void *param),
            void *param, WORD *lastscrlpos )
{
   int_in[0]  = x;
   int_in[1]  = y;
   int_in[2]  = firstscrlob;
   int_in[3]  = lastscrlob;
   int_in[4]  = nlines;
   int_in[5]  = *lastscrlpos;
   addr_in[0] = tree;
   addr_in[1] = init;
   addr_in[2] = param;

   int_out[1] = *lastscrlpos;   /* vorbesetzen */

   crys_if(135)
	 
	 *lastscrlpos = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 135   Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 3     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! x
int_in+2  !! int_in[1]  !! y
int_in+4  !! int_in[2]  !! firstscrlob
int_in+6  !! int_in[3]  !! lastscrlob
int_in+8  !! int_in[4]  !! nlines
int_in+10 !! int_in[5]  !! lastscrlpos
addr_in   !! addr_in[0] !! tree
addr_in+4 !! addr_in[1] !! init
addr_in+8 !! addr_in[2] !! param
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! lastscrlpos
!end_table

(!ende_liste)
!end_node
!end_node
