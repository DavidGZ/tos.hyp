## Hypertext zum TOS-Betriebssystem
## entwickelt fÅr den ST-Guide
##
## Last Edit: 08.11.1997
##
## Kapitel 4: AES-Grafikfunktionen



!begin_node graf_dragbox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics drag BoxÆ - verschiebt ein Rechteck mit der Maus.

!item [AES-Nummer:]
71

!item [Binding:]
(!link [Bindings fÅr graf_dragbox] [Bindings fÅr graf_dragbox])

!item [Beschreibung:]
Die Funktion ermîglicht das Verschieben eines kleineren Rechtecks innerhalb
eines grîûeren Begrenzungsrechtecks.

!begin_xlist !short [gr_dfinishy]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_dwidth]
Breite
!item [gr_dheight]
Hîhe
!item [gr_dstartx]
x-Koordinate
!item [gr_dstarty]
y-Koordinate des zu verschiebenden Rechtecks
!item [gr_dboundx]
x-Koordinate
!item [gr_dboundy]
y-Koordinate
!item [gr_dboundw]
Breite
!item [gr_dboundh]
Hîhe des Begrenzungsrechteckes
!item [gr_dfinishx]
x-Koordinate 
!item [gr_dfinishy]
y-Koordinate des zu verschiebenden Rechtecks beim Loslassen des Mausknopfs
!end_xlist

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_dragbox])

(!ende_liste)



!begin_node Bindings fÅr graf_dragbox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_dragbox ( WORD gr_dwidth, WORD gr_dheight, WORD gr_dstartx,
                    WORD gr_dstarty, WORD gr_dboundx, WORD gr_dboundy,
                    WORD gr_dboundw, WORD gr_dboundh, WORD *gr_dfinishx,
                    WORD *gr_dfinishy );

!item [Implementierung:]
!begin_verbatim
WORD graf_dragbox (WORD gr_dwidth, WORD gr_dheight, WORD gr_dstartx, 
                   WORD gr_dstarty, WORD gr_dboundx, WORD gr_dboundy,
                   WORD gr_dboundw, WORD gr_dboundh, WORD *gr_dfinishx, 
                   WORD *gr_dfinishy)
{
   int_in[0] = gr_dwidth;
   int_in[1] = gr_dheight;
   int_in[2] = gr_dstartx;
   int_in[3] = gr_dstarty;	
   int_in[4] = gr_dboundx;
   int_in[5] = gr_dboundy;	
   int_in[6] = gr_dboundw;
   int_in[7] = gr_dboundh;	

   crys_if (71);

   *gr_dfinishx = int_out[1];
   *gr_dfinishy = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 71    Opcode der Funktion
control+2 !! control[1] !! 8     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_dwidth
int_in+2  !! int_in[1]  !! gr_dheight
int_in+4  !! int_in[2]  !! gr_dstartx
int_in+6  !! int_in[3]  !! gr_dstarty
int_in+8  !! int_in[4]  !! gr_dboundx
int_in+10 !! int_in[5]  !! gr_dboundy
int_in+12 !! int_in[6]  !! gr_dboundw
int_in+14 !! int_in[7]  !! gr_dboundh
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! gr_dfinishx
int_out+4 !! int_out[2] !! gr_dfinishy
!end_table

(!ende_liste)
!end_node
!end_node


!begin_node graf_growbox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics grow BoxÆ - zeichnet ein sich vergrîûerndes Rechteck.

!item [AES-Nummer:]
73

!item [Binding:]
(!link [Bindings fÅr graf_growbox] [Bindings fÅr graf_growbox])

!item [Beschreibung:]
Die Funktion zeichnet ein sich ausdehnendes Rechteck. Es gilt:

!begin_xlist !short [gr_gfinheight]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_gstx]
x-Koordinate
!item [gr_gsty]
y-Koordinate
!item [gr_gstwidth]
Breite
!item [gr_gstheight]
Hîhe des Rechtecks (zu Beginn)
!item [gr_gfinx]
x-Koordinate
!item [gr_gfiny]
y-Koordinate
!item [gr_gfinwidth]
Breite
!item [gr_gfinheight]
Hîhe des Rechtecks (am Ende)
!end_xlist

(!B)Hinweis:(!b) Ab PC-(!nolink [GEM]) Version 2.0 wird dieser Befehl ignoriert. Dies
liegt in den Rechtsstreitigkeiten zwischen (!I)Apple(!i) und (!I)Digital
Research(!i) begrÅndet.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_growbox]) ~  form_dial ~  graf_shrinkbox

(!ende_liste)



!begin_node Bindings fÅr graf_growbox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_growbox ( WORD gr_gstx, WORD gr_gsty, WORD gr_gstwidth,
                    WORD gr_gstheight, WORD gr_gfinx, WORD gr_gfiny,
                    WORD gr_gfinwidth, WORD gr_gfinheight );

!item [Implementierung:]
!begin_verbatim
WORD graf_growbox (WORD gr_gstx, WORD gr_gsty, WORD gr_gstwidth, 
                   WORD gr_gstheight, WORD gr_gfinx, WORD gr_gfiny,
                   WORD gr_gfinwidth, WORD gr_gfinheight)
{
   int_in[0] = gr_gstx;
   int_in[1] = gr_gsty;
   int_in[2] = gr_gstwidth;
   int_in[3] = gr_gstheight;	
   int_in[4] = gr_gfinx;
   int_in[5] = gr_gfiny;	
   int_in[6] = gr_gfinwidth;
   int_in[7] = gr_gfinheight;	

   return ( crys_if(73) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 73    Opcode der Funktion
control+2 !! control[1] !! 8     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_gstx
int_in+2  !! int_in[1]  !! gr_gsty
int_in+4  !! int_in[2]  !! gr_gstwidth
int_in+6  !! int_in[3]  !! gr_gstheight
int_in+8  !! int_in[4]  !! gr_gfinx
int_in+10 !! int_in[5]  !! gr_gfiny
int_in+12 !! int_in[6]  !! gr_gfinwidth
int_in+14 !! int_in[7]  !! gr_gfinheight
int_out   !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node



!begin_node graf_handle

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics handleÆ - ermittelt den (!nolink [VDI])-Handle der Arbeitsstation.

!item [AES-Nummer:]
77

!item [Binding:]
(!link [Bindings fÅr graf_handle] [Bindings fÅr graf_handle])

!item [Beschreibung:]
Die Funktion ermittelt die Kennung der Bildschirm-Workstation, auf der das
(!nolink [AES]) ausgibt. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_hwchar]
Breite
!item [gr_hhchar]
Hîhe eines Zeichens aus dem Systemzeichensatz in Punkten
!item [gr_hwbox]
Breite
!item [gr_hhbox]
Hîhe einer Zelle, in die ein beliebiges Zeichen aus dem Systemzeichensatz
komplett hinein paût.
!end_xlist

(!B)Hinweis:(!b) Die Information aus den Parametern (!I)gr_hwbox(!i) bzw.
(!I)gr_hhbox(!i) wird vom (!nolink [AES]) fÅr die Breite der einzelnen
Fensterelemente verwendet.

!item [Ergebnis:]
Die Funktion liefert die Kennung (handle) der geîffneten (!nolink [AES])-Workstation.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_handle]) ~  v_opnvwk

(!ende_liste)



!begin_node Bindings fÅr graf_handle
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_handle ( WORD *gr_hwchar, WORD *gr_hhchar, WORD *gr_hwbox,
                   WORD *gr_hhbox );

!item [Implementierung:]
!begin_verbatim
WORD graf_handle (WORD *gr_hwchar, WORD *gr_hhchar, WORD *gr_hwbox, 
                  WORD *gr_hhbox)
{
   crys_if (77);

   *gr_hwchar = int_out[1];
   *gr_hhchar = int_out[2];
   *gr_hwbox  = int_out[3];
   *gr_hhbox  = int_out[4];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 77    Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 5     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! gr_hwchar
int_out+4 !! int_out[2] !! gr_hhchar
int_out+6 !! int_out[3] !! gr_hwbox
int_out+8 !! int_out[4] !! gr_hhbox
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_mbox
!label graf_movebox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics move BoxÆ - verschiebt ein Rechteck mit der Maus.

!item [AES-Nummer:]
72

!item [Binding:]
(!link [Bindings fÅr graf_mbox] [Bindings fÅr graf_mbox])

!item [Beschreibung:]
Die Funktion zeichnet ein sich bewegendes Rechteck mit konstanter Grîûe. Es
gilt:

!begin_xlist !short [gr_msourcex]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_mwidth]
Breite
!item [gr_mheight]
Hîhe des Rechteckes
!item [gr_msourcex]
x-Koordinate
!item [gr_msourcey]
y-Koordinate (zu Beginn)
!item [gr_mdestx]
x-Koordinate
!item [gr_mdesty]
y-Koordinate (am Ende)
!end_xlist

(!B)Hinweis:(!b) Die Funktion kann beispielsweise dann angewendet werden,
wenn das Verschieben eines Piktogramms nicht erlaubt ist, (Drucker-Symbol
auf das Papierkorb-Icon legen) und es an seine ursprÅnglich Stelle
zurÅckpositioniert werden soll.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_mbox])

(!ende_liste)



!begin_node Bindings fÅr graf_mbox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_mbox ( WORD gr_mwidth, WORD gr_mheight, WORD gr_msourcex,
                 WORD gr_msourcey, WORD gr_mdestx, WORD gr_mdesty );

oder

WORD graf_movebox ( ... )

!item [Implementierung:]
!begin_verbatim
WORD graf_mbox (WORD gr_mwidth, WORD gr_mheight, WORD gr_msourcex, 
                WORD gr_msourcey, WORD gr_mdestx, WORD gr_mdesty)
{
   int_in[0] = gr_mwidth;
   int_in[1] = gr_mheight;
   int_in[2] = gr_msourcex;
   int_in[3] = gr_msourcey;
   int_in[4] = gr_mdestx;
   int_in[5] = gr_medsty;

   return ( crys_if(72) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 72    Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_mwidth
int_in+2  !! int_in[1]  !! gr_mheight
int_in+4  !! int_in[2]  !! gr_msourcex
int_in+6  !! int_in[3]  !! gr_msourcey
int_in+8  !! int_in[4]  !! gr_mdestx
int_in+10 !! int_in[5]  !! gr_mdesty
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_mkstate

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics Mouse and Keyboard StatusÆ - ermittelt den Status von Maus und
Tastatur.

!item [AES-Nummer:]
79

!item [Binding:]
(!link [Bindings fÅr graf_mkstate] [Bindings fÅr graf_mkstate])

!item [Beschreibung:]
Die Funktion ermittelt die aktuelle Mausposition sowie den Zustand der
Maustasten und Sondertasten der Tastatur. Es gilt:

!begin_xlist !short [gr_mkkstate]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_mkmx]
x-Position
!item [gr_mkmy]
y-Position des Mauszeigers
!item [gr_mkmstate]
Zustand der Mausknîpfe (Bit-0 = linke Taste, usw.)
!item [gr_mkkstate]
Sondertasten der Tastatur als Bitvektor:
!begin_table [l l l]
0x0001 !! = !! rechte Shift-Taste
0x0002 !! = !! linke Shift-Taste
0x0004 !! = !! Control-Taste
0x0008 !! = !! Alternate-Taste
!end_table
!end_xlist

(!B)Hinweis:(!b) Ein Bit ist dabei genau dann gesetzt, wenn die
entsprechende Taste gedrÅckt ist.

!item [Ergebnis:]
Als Ergebnis wird immer eine 1 zurÅckgegeben.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_mkstate]) ~  evnt_button

(!ende_liste)



!begin_node Bindings fÅr graf_mkstate
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_mkstate ( WORD *gr_mkmx, WORD *gr_mkmy, WORD *gr_mkmstate,
                    WORD *gr_mkkstate );

!item [Implementierung:]
!begin_verbatim
WORD graf_mkstate (WORD *gr_mkmx, WORD *gr_mkmy, WORD *gr_mkmstate, 
                   WORD *gr_mkkstate)
{
   crys_if (79);

   *gr_mkmx     = int_out[1];
   *gr_mkmy     = int_out[2];
   *gr_mkmstate = int_out[3];
   *gr_mkkstate = int_out[4];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 79    Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 5     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! gr_mkmx
int_out+4 !! int_out[2] !! gr_mkmy
int_out+6 !! int_out[3] !! gr_mkmstate
int_out+8 !! int_out[4] !! gr_mkkstate
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_mouse

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics MouseÆ - verÑndert die Darstellung des Mauszeigers.

!item [AES-Nummer:]
78

!item [Binding:]
(!link [Bindings fÅr graf_mouse] [Bindings fÅr graf_mouse])

!item [Beschreibung:]
Die Funktion erlaubt es, das Aussehen des Mauszeigers zu verÑndern. FÅr den
Parameter (!I)gr_monumber(!i) gilt:

!begin_table [c l]
gr_monumber !! Bedeutung
!hline
  0 !! Pfeil  
  1 !! Textcursor
  2 !! Sanduhr, Biene
  3 !! zeigende Hand
  4 !! flache Hand
  5 !! feines Fadenkreuz
  6 !! breites Fadenkreuz
  7 !! umrissenes Fadenkreuz
255 !! eigene Mausform
256 !! Mauszeiger ausschalten
257 !! Mauszeiger einschalten
258 !! aktuelle Mausform sichern
259 !! letzte Mausform herstellen
260 !! vorherige Mausform herstellen
!end_table

Im Fall (!I)gr_monumber(!i) = USER_DEF, ist (!I)gr_mofaddr(!i) ein Zeiger
auf die Struktur MFORM, die das Aussehen des Mauszeigers festlegt.

(!B)Hinweis:(!b) Man sollte darauf achten, daû auûerhalb des Arbeitsbereichs
des eigenen Fensters, der Mauszeiger nur die Form eines Pfeils oder einer
Sanduhr besitzt.

In the event that the application must change the mouse form, set the highest 
bit ( Bit 15 ) of gr_monumber to 1 and OR in with the desired mouse form number.
After finishing the work, call the graf_mouse with value 0 to set the mouse
back to arrow.
	
Ob die Modi 258-260 zur VerfÅgung stehen, bzw. ob die Mausform fÅr jede
Applikation lokal verwaltet wird, kann per (!link [appl_getinfo][%apgi_8]) (Opcode 8) abgefragt
werden.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_mouse])  ~ Mausklicks und Formen

(!ende_liste)



!begin_node Bindings fÅr graf_mouse
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_mouse ( WORD gr_monumber, MFORM *gr_mofaddr );

!item [Implementierung:]
!begin_verbatim
WORD graf_mouse (WORD gr_monumber, MFORM *gr_mofaddr)
{
   int_in[0]  = gr_monumber;
   addr_in[0] = gr_mofaddr;

   return ( crys_if(78) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 78    Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_monumber
addr_in   !! addr_in[0] !! gr_mofaddr
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_multirubber

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics RubberboxÆ - zeichnet eine 'Rubberbox' (Gummirechteck) auf den
Bildschirm.

!item [AES-Nummer:]
69

!item [Binding:]
(!link [Bindings fÅr graf_multirubber] [Bindings fÅr graf_multirubber])

!item [Beschreibung:]
Die Funktion stellt ein Gummiband in Form eines Rechtecks auf dem Bildschirm
dar, dessen obere linke Ecke festbleibt und dessen untere rechte Ecke
solange bewegt werden kann, wie die linke Maustaste gedrÅckt wird.
éhnelt graf_rubberbox, nur mit zwei Rechtecken.

!begin_xlist !short [gr_rlastheight]
!item [Parameter]
Bedeutung
!item [~]
~

!item [x]
x-Koordinate

!item [y]
y-Koordinate der linken, oberen Ecke

!item [minw]
kleinste Breite des Gummibandes

!item [min]
kleinste Hîhe des Gummibandes

!item [rec]
~

!item [gr_rlastwidth]
Breite  des Gummibandes bei Loslassen des Mausknopfs

!item [gr_rlastheight]
Hîhe des Gummibandes bei Loslassen des Mausknopfs
!end_xlist

(!B)Hinweis:(!b) Die Funktion sollte aus den o.g. GrÅnden nur bei bereits
gedrÅckter Maustaste aufgerufen werden. Interessant ist, daû bei der Angabe
der minimalen Breite und Hîhe auch (!I)negative(!i) Werte zugelassen sind;
das Gummiband lÑût sich dann von rechts unten nach links oben ziehen.


!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
Die Funktion steht nur unter N.AES zur VerfÅgung.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_multirubber])

(!ende_liste)



!begin_node Bindings fÅr graf_multirubber
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_multirubber(WORD x, WORD y, WORD minw, WORD minh, GRECT *rec,
                      WORD *outw, WORD *outh)

!item [Implementierung:]
!begin_verbatim
WORD graf_multirubber(WORD x, WORD y, WORD minw, WORD minh, GRECT *rec,
                      WORD *outw, WORD *outh)
{
   int_in[0] = x;
   int_in[1] = y;
   int_in[2] = minw;
   int_in[3] = minh;	

   addr_in[0] = rec;

   crys_if (69);

   *outw = int_out[1];
   *outh = int_out[2]; 	

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 69    Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! x
int_in+2  !! int_in[1]  !! y
int_in+4  !! int_in[2]  !! minw
int_in+6  !! int_in[3]  !! minh
addr_in   !! addr_in[0] !! rec
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! outw
int_out+4 !! int_out[2] !! outh
!end_table

(!ende_liste)
!end_node
!end_node


!begin_node graf_rubberbox
!label graf_rubbox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics RubberboxÆ - zeichnet eine 'Rubberbox' (Gummirechteck) auf den
Bildschirm.

!item [AES-Nummer:]
70

!item [Binding:]
(!link [Bindings fÅr graf_rubberbox] [Bindings fÅr graf_rubberbox])

!item [Beschreibung:]
Die Funktion stellt ein Gummiband in Form eines Rechtecks auf dem Bildschirm
dar, dessen obere linke Ecke festbleibt und dessen untere rechte Ecke
solange bewegt werden kann, wie die linke Maustaste gedrÅckt wird.

!begin_xlist !short [gr_rlastheight]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_rx]
x-Koordinate
!item [gr_ry]
y-Koordinate der linken, oberen Ecke
!item [gr_minwidth]
kleinste Breite des Gummibandes
!item [gr_minheight]
kleinste Hîhe des Gummibandes
!item [gr_rlastwidth]
Breite 
!item [gr_rlastheight]
Hîhe des Gummibandes bei Loslassen des Mausknopfs
!end_xlist

(!B)Hinweis:(!b) Die Funktion sollte aus den o.g. GrÅnden nur bei bereits
gedrÅckter Maustaste aufgerufen werden. Interessant ist, daû bei der Angabe
der minimalen Breite und Hîhe auch (!I)negative(!i) Werte zugelassen sind;
das Gummiband lÑût sich dann von rechts unten nach links oben ziehen.

In Ñlteren (!nolink [GEM])-Dokumentationen auch hÑufig als "graf_rubbox" bezeichnet!

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_rubberbox])

(!ende_liste)



!begin_node Bindings fÅr graf_rubberbox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_rubbox ( WORD gr_rx, WORD gr_ry, WORD gr_minwidth,
                   WORD gr_minheight, WORD *gr_rlastwidth,
                   WORD *gr_rlastheight );

oder

WORD graf_rubberbox ( ... )

!item [Implementierung:]
!begin_verbatim
WORD graf_rubbox (WORD gr_rx, WORD gr_ry, WORD gr_minwidth, 
                  WORD gr_minheight, WORD *gr_rlastwidth,
                  WORD *gr_rlastheight)
{
   int_in[0] = gr_rx;
   int_in[1] = gr_ry;
   int_in[2] = gr_minwidth;
   int_in[3] = gr_minheight;	

   crys_if (70);

   *gr_rlastwidth = int_out[1];
   *gr_lastheight = int_out[2]; 	

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 70    Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_rx
int_in+2  !! int_in[1]  !! gr_ry
int_in+4  !! int_in[2]  !! gr_minwidth
int_in+6  !! int_in[3]  !! gr_minheight
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! gr_rlastwidth
int_out+4 !! int_out[2] !! gr_rlastheight
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_shrinkbox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics shrink BoxÆ - zeichnet ein sich verkleinerndes Rechteck.

!item [AES-Nummer:]
74

!item [Binding:]
(!link [Bindings fÅr graf_shrinkbox] [Bindings fÅr graf_shrinkbox])

!item [Beschreibung:]
Die Funktion zeichnet ein schrumpfendes Rechteck. Es gilt:

!begin_xlist !short [gr_sfinheight]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_sfinx]
x-Koordinate
!item [gr_sfiny]
y-Koordinate
!item [gr_sfinwidth]
Breite
!item [gr_sfinheight]
Hîhe des Rechteckes (am Ende)
!item [gr_sstx]
x-Koordinate
!item [gr_ssty]
y-Koordinate
!item [gr_sstwidth]
Breite
!item [gr_sstheight]
Hîhe des Rechteckes (zu Beginn)
!end_xlist

(!B)Hinweis:(!b) Ab PC-(!nolink [GEM]) Version 2.0 wird dieser Befehl ignoriert. Dies
liegt in den Rechtsstreitigkeiten zwischen (!I)Apple(!i) und (!I)Digital
Research(!i) begrÅndet.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_shrinkbox]) ~  form_dial ~  graf_growbox

(!ende_liste)



!begin_node Bindings fÅr graf_shrinkbox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_shrinkbox ( WORD gr_sfinx, WORD gr_sfiny, WORD gr_sfinwidth,
                      WORD gr_sfinheight, WORD gr_sstx, WORD gr_ssty,
                      WORD gr_sstwidth, WORD gr_sstheight );

!item [Implementierung:]
!begin_verbatim
WORD graf_shrinkbox (WORD gr_sfinx, WORD gr_sfiny, WORD gr_sfinwidth,
                     WORD gr_sfinheight, WORD gr_sstx, WORD gr_ssty,
                     WORD gr_sstwidth, WORD gr_sstheight)
{
   int_in[0] = gr_sfinx;
   int_in[1] = gr_sfiny;
   int_in[2] = gr_sfinwidth;
   int_in[3] = gr_sfinheight;
   int_in[4] = gr_sstx;
   int_in[5] = gr_ssty;
   int_in[6] = gr_sstwidth;
   int_in[7] = gr_sstheight;

   return ( crys_if(74) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 74    Opcode der Funktion
control+2 !! control[1] !! 8     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_sfinx
int_in+2  !! int_in[1]  !! gr_sfiny
int_in+4  !! int_in[2]  !! gr_sfinwidth
int_in+6  !! int_in[3]  !! gr_sfinheight
int_in+8  !! int_in[4]  !! gr_sstx
int_in+10 !! int_in[5]  !! gr_ssty
int_in+12 !! int_in[6]  !! gr_sstwidth
int_in+14 !! int_in[7]  !! gr_sstheight
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_slidebox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics slide BoxÆ - ermittelt die Position der Schieberegler.

!item [AES-Nummer:]
76

!item [Binding:]
(!link [Bindings fÅr graf_slidebox] [Bindings fÅr graf_slidebox])

!item [Beschreibung:]
Die Funktion dient zur Abfrage von Schiebereglern (Slidern). Es gilt:

!begin_xlist !short [gr_slparent]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_slptree]
Adresse des Objektbaumes
!item [gr_slparent]
Nummer des Parent-Rechteckes
!item [gr_slobject]
Nummer des zu verschiebenden Rechteckes (Slider)
!item [gr_slvh]
!begin_table [l l l]
0 !! = !! horizontal verschieben
1 !! = !! vertikal verschieben
!end_table
!end_xlist

(!B)Hinweis:(!b) Die Funktion darf nur bei gedrÅckter Maustaste aufgerufen
werden, da sie beim Loslassen des Mausknopfes sofort abbricht.

!item [Ergebnis:]
Die Funktion liefert die relative Position zwischen 0 (ganz links bzw. ganz
oben) und 1000 (ganz rechts bzw. ganz unten) des Sliders.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_slidebox]) ~  OBJECT

(!ende_liste)



!begin_node Bindings fÅr graf_slidebox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_slidebox ( OBJECT *gr_slptree, WORD gr_slparent,
                     WORD gr_slobject, WORD gr_slvh );

!item [Implementierung:]
!begin_verbatim
WORD graf_slidebox (OBJECT *gr_slptree, WORD gr_slparent,
                    WORD gr_slobject, WORD gr_slvh)
{
   int_in[0]  = gr_slparent;
   int_in[1]  = gr_slobject;
   int_in[2]  = gr_slvh;
   addr_in[0] = gr_slptree;

   return ( crys_if(76) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 76    Opcode der Funktion
control+2 !! control[1] !! 3     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_slparent
int_in+2  !! int_in[1]  !! gr_slobject
int_in+4  !! int_in[2]  !! gr_slvh
addr_in   !! addr_in[0] !! gr_slptree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_watchbox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics watch BoxÆ - selektiert ein Objekt und Åberwacht die
Mausbewegungen bezÅglich dieses Objekts.

!item [AES-Nummer:]
75

!item [Binding:]
(!link [Bindings fÅr graf_watchbox] [Bindings fÅr graf_watchbox])

!item [Beschreibung:]
Die Funktion setzt den Objektstatus eines Objektes in AbhÑngigkeit von der
Position des Mauszeigers. Es gilt:

!begin_xlist !short [gr_wpobject]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_wptree]
Adresse des Objektbaumes
!item [gr_wpobject]
Nummer des Objektes
!item [gr_winstate]
Objektstatus, wenn sich der Mauszeiger innerhalb der Begrenzung befindet:
!begin_table [l l]
NORMAL   !! (0x0000)
SELECTED !! (0x0001)
CROSSED  !! (0x0002)
CHECKED  !! (0x0004)
DISABLED !! (0x0008)
OUTLINED !! (0x0010)
SHADOWED !! (0x0020)
!end_table
!item [gr_woutstate]
Objektstatus, wenn sich der Mauszeiger auûerhalb der Begrenzung befindet.
!end_xlist

(!B)Hinweis:(!b) Die Funktion bricht ab, wenn der Mausknopf losgelassen
wird.

!item [Ergebnis:]
Die Funktion liefert die Position des Mauszeigers beim Loslassen des Buttons
(0 = auûerhalb des Objektes, 1 = innerhalb des Objektes).

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_watchbox])  ~ graf_wwatchbox ~  OBJECT

(!ende_liste)



!begin_node Bindings fÅr graf_watchbox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_watchbox ( OBJECT *gr_wptree, WORD gr_wobject,
                     WORD gr_winstate, WORD gr_woutstate );

!item [Implementierung:]
!begin_verbatim
WORD graf_watchbox ((!nolink [OBJECT])} *gr_wptree, WORD gr_wobject,
                    WORD gr_winstate, WORD gr_woutstate)
{
   int_in[0]  = 0;
   int_in[1]  = gr_wobject;
   int_in[2]  = gr_winstate;
   int_in[3]  = gr_woutstate;

   addr_in[0] = gr_wptree;

   return ( crys_if(75) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 75    Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! 0
int_in+2  !! int_in[1]  !! gr_wobject
int_in+4  !! int_in[2]  !! gr_winstate
int_in+6  !! int_in[3]  !! gr_woutstate
addr_in   !! addr_in[0] !! gr_wptree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



!begin_node graf_wwatchbox

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics window watch BoxÆ - selektiert ein Objekt in einem Fenster und
Åberwacht die Mausbewegungen bezÅglich dieses Objekts.

!item [AES-Nummer:]
62

!item [Binding:]
(!link [Bindings fÅr graf_wwatchbox] [Bindings fÅr graf_wwatchbox])

!item [Beschreibung:]
Die Funktion setzt den Objektstatus eines Objektes in einem Fenster in
AbhÑngigkeit von der Position des Mauszeigers. Es gilt:

!begin_xlist !short [gr_winstate]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_wptree]
Adresse des Objektbaumes
!item [gr_wpobject]
Nummer des Objektes
!item [gr_winstate]
Objektstatus, wenn sich der Mauszeiger innerhalb der Begrenzung befindet:
!begin_table [l l]
NORMAL   !! (0x0000)
SELECTED !! (0x0001)
CROSSED  !! (0x0002)
CHECKED  !! (0x0004)
DISABLED !! (0x0008)
OUTLINED !! (0x0010)
SHADOWED !! (0x0020)
!end_table
!item [gr_woutstate]
Objektstatus, wenn sich der Mauszeiger auûerhalb der Begrenzung befindet.
!item [whandle]
Kennung des Fensters
!end_xlist

(!B)Hinweis:(!b) Die Funktion bricht ab, wenn der Mausknopf losgelassen
wird. Die Funktion entspricht im wesentlichen graf_watchbox mit dem
Unterschied, dass hier die Rechteckliste eines Fensters beachtet wird. Die
Funktion steht in MagiC ab Version 5.10 zur VerfÅgung.

!item [Ergebnis:]
Die Funktion liefert die Position des Mauszeigers beim Loslassen des Buttons
(0 = auûerhalb des Objektes, 1 = innerhalb des Objektes).

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_wwatchbox]) ~  graf_watchbox ~  OBJECT

(!ende_liste)



!begin_node Bindings fÅr graf_wwatchbox
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_wwatchbox ( OBJECT *gr_wptree, WORD gr_wobject, WORD gr_winstate,
                      WORD gr_woutstate, WORD whandle );

!item [Implementierung:]
!begin_verbatim
WORD graf_wwatchbox (OBJECT *gr_wptree, WORD gr_wobject,
                     WORD gr_winstate, WORD gr_woutstate,
                     WORD whandle)
{
   int_in[0]  = gr_wobject;
   int_in[1]  = gr_winstate;
   int_in[2]  = gr_woutstate;
   int_in[3]  = whandle;

   addr_in[0] = gr_wptree;

   return ( crys_if(62) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 62    Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_wobject
int_in+2  !! int_in[1]  !! gr_winstate
int_in+4  !! int_in[2]  !! gr_woutstate
int_in+6  !! int_in[3]  !! whandle
addr_in   !! addr_in[0] !! gr_wptree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node



# Quelle: Ist laut der Datei magx.h (Doku zu MagiC 5) im KAOS 1.4 vorhanden.

!begin_node graf_xhandle

(!begin_liste) [Beschreibung:]

!item [Name:]
ØGraphics handleÆ - ermittelt den VDI-Handle der Arbeitsstation.

!item [AES-Nummer:]
77

!item [Binding:]
(!link [Bindings fÅr graf_xhandle] [Bindings fÅr graf_xhandle])

!item [Beschreibung:]
Die Funktion ermittelt die Kennung der Bildschirm-Workstation, auf der das
(!nolink [AES]) ausgibt. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_hwchar]
Breite
!item [gr_hhchar]
Hîhe eines Zeichens aus dem Systemzeichensatz in Punkten
!item [gr_hwbox]
Breite
!item [gr_hhbox]
Hîhe einer Zelle, in die ein beliebiges Zeichen aus dem Systemzeichensatz
komplett hinein paût.

!item [device] ?????????????
!end_xlist

(!B)Hinweis:(!b) Die Information aus den Parametern (!I)gr_hwbox(!i) bzw.
(!I)gr_hhbox(!i) wird vom (!nolink [AES]) fÅr die Breite der einzelnen
Fensterelemente verwendet.

!item [Ergebnis:]
Die Funktion liefert die Kennung (handle) der geîffneten (!nolink [AES])-Workstation.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_xhandle]) ~  v_opnvwk

(!ende_liste)



!begin_node Bindings fÅr graf_xhandle
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD graf_xhandle ( WORD *gr_hwchar, WORD *gr_hhchar, WORD *gr_hwbox,
                   WORD *gr_hhbox,  WORD *device );

!item [Implementierung:]
!begin_verbatim
WORD graf_xhandle (WORD *gr_hwchar, WORD *gr_hhchar, WORD *gr_hwbox, 
                  WORD *gr_hhbox,  WORD *device )
{
   crys_if (77);

   *gr_hwchar = int_out[1];
   *gr_hhchar = int_out[2];
   *gr_hwbox  = int_out[3];
   *gr_hhbox  = int_out[4];
   *device    = int_out[5];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 77    Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 6     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! gr_hwchar
int_out+4 !! int_out[2] !! gr_hhchar
int_out+6 !! int_out[3] !! gr_hwbox
int_out+8 !! int_out[4] !! gr_hhbox
int_out+10 !! int_out[5] !! device
!end_table

(!ende_liste)
!end_node
!end_node
