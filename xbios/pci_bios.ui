!begin_node Find PCI device
(!begin_liste) [Beschreibung:]
!item [Name:]
Returns a device handle for a device that matches the given Device and Vendor ID.
!item [Xbiosnummer:]
300
!item [Binding:]
(!link [Bindings fÅr Find PCI device] [Bindings fÅr Find PCI device])
!item [Beschreibung:]
This functions returns a device handle for a device that matches the given
Device and Vendor ID.
A driver can query multiple devices with the same Device and Vendor ID by
starting with index = 0,1,2,... and calling this function until PCI_DEVICE_NOT_FOUND
is returned.

As a special case, Vendor ID $FFFF can be used to query all cards found in the
system, the specified Device ID is ignored in that case.

!begin_xlist [Parameters]
!item [~] ~

!item [id] Device ID in bits 31..16 (0 - $FFFF) (!nl)
Vendor ID in bits 15..0 (0 - $FFFE)

!item [index] index of card (0 - number of cards with these IDs)
!end_xlist

!item [Ergebnis:]
Device handle for a device or PCI_DEVICE_NOT_FOUND.

!item [VerfÅgbar:]
PCI-(!nolink [BIOS]) V2.00

!item [Gruppe:]
PCI-Bios

!item [Querverweis:] (!link [Binding] [Bindings fÅr Find PCI device])
(!ende_liste)
!end_node


!begin_node Bindings fÅr Find PCI device
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

LONG find_pci_device ( LONG id, WORD index);
!item [Assembler:]
!begin_verbatim
move.w    index,-(sp)  ; Offset 6
move.l    id,-(sp)     ; Offset 2
move.w    #300,-(sp)   ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node



!begin_node Find PCI class code
(!begin_liste) [Beschreibung:]
!item [Name:]
Returns a device handle for a device that matches the given class code.
!item [Xbiosnummer:]
301
!item [Binding:]
(!link [Bindings fÅr Find PCI class code] [Bindings fÅr Find PCI class code])
!item [Beschreibung:]
This functions returns a device handle for a device that matches the given
class code.

A driver can query multiple devices with the same class code by starting with
index = 0,1,2,... and calling this function until PCI_DEVICE_NOT_FOUND
is returned.

!begin_xlist [Parameters]
!item [~] ~

!item [classcode]
class code in bits 23..0 (!nl)
Base class in bits 23..16 (0 - $FF)  (!nl)
Sub class in bits 15..8 (0 - $FF) (!nl)
Prog.If. in bits 7..0 (0 - $FF)

mask in bits 26..24 (!nl)
bit 26: (0: compare base class, 1: ignore it) (!nl)
bit 25: (0: compare sub class, 1: ignore it) (!nl)
bit 24: (0: compare prog.if., 1: ignore it)

!item [index] index of card (0 - number of cards with these IDs)
!end_xlist
          
!item [Ergebnis:]
Device handle for a device or PCI_DEVICE_NOT_FOUND.

!item [VerfÅgbar:]
PCI-(!nolink [BIOS]) V2.00

!item [Gruppe:]
PCI-Bios

!item [Querverweis:] (!link [Binding] [Bindings fÅr Find PCI class code])
(!ende_liste)
!end_node


!begin_node Bindings fÅr Find PCI class code
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

LONG find_pci_classcode(LONG classcode, WORD index);
!item [Assembler:]
!begin_verbatim
move.w    index,-(sp)       ; Offset 6
move.l    classcode,-(sp)   ; Offset 2
move.w    #301,-(sp)        ; Offset 0
trap      #14               ; XBIOS aufrufen
addq.l    #8,sp             ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
