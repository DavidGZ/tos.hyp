!iflang [english]


!begin_node Flopfmt
(!begin_liste) [Availability]

!item [Name:]
ØFloppy formatÆ - formatiert einzelne Spuren auf einer Diskette.

!item [Opcode:]
10

!item [Syntax:]
int16_t Flopfmt( void *buf, int32_t filler, int16_t devno, int16_t spt,
                 int16_t trackno, int16_t sideno, int16_t interlv,
                 int32_t magic, int16_t virgin );

!item [Description:]
Die XBIOS-Routine Flopfmt formatiert eine oder mehrere Spuren auf einer
Diskette. Es gilt:
!begin_xlist [Parameter]
!item [Parameter]
Bedeutung
!item [buf]
Zeiger auf einen Bereich, in dem die Daten fÅr die Spur gespeichert werden
kînnen.
!item [filler]
bei allen TOS-Versionen < 1.02 unbenutzt, und auf 0 zu setzen. Ab dem
Blitter-TOS gilt: wenn (!I)interlv(!i) = -1 ist, so ist (!I)filler(!i) als
Zeiger auf eine Tabelle von Sektornummern anzusehen (16Bit-Worte). Dadurch
ergibt sich die Mîglichkeit, die Reihenfolge der Sektoren auf der Spur frei
zu wÑhlen.
!item [devno]
0 = Laufwerk-A, 1 = Laufwerk-B
!item [spt]
Sektoren pro Spur (normal: 9). Falls der Cookie (!link [_FDC][Cookie, _FDC])
gesetzt ist, sind auch
Werte von 18 (High-Density) bzw. 36 (Extra-High-Density) Sektoren erlaubt.
Die Umschaltung der verschiedenen Schreibverfahren findet bei 13 (HD) bzw.
26 (ED) statt.
!item [trackno]
Nummer der Spur (0..79)
!item [sideno]
0: Seite-1
(!nl)
1: Seite-2 (bei doppelseitigen Disketten)
!item [interlv]
bestimmt, wie viele physikalische Sektoren jeweils zwischen zwei logischen
Sektoren liegen (normal: 1)
!item [magic]
0x87654321, sonst wird nicht formatiert.
!item [virgi]
Bitmuster, welches beim Formatieren in jeden Sektor geschrieben wird
(normal: 0xe5e5). Die oberen vier Bits dÅrfen nicht gesetzt werden, da dies
sonst vom Controller als Kommando interpretiert wÅrde.
!end_xlist
(!B)Hinweis:(!b) Ab dem Blitter-TOS erlaubt es das Desktop, eine Liste von
Sektornummern zu Åbergeben, um Spuren derart zu spiralisieren, daû beim
Spurwechsel mîglichst wenig Zeit mit dem Warten auf den nÑchsten Sektor
verloren wird.

Bei einem normalen Format (9 Sektoren pro Spur) muss der Åber den Parameter
(!I)buf(!i) angegebene Speicherbereich eine Grîûe von mindestens 8 Kbyte
besitzen; in anderen FÑllen muss der Puffer evtl. noch vergrîûert werden.

!item [(!nolink [Return]) Value:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist.
Im Fehlerfall wird eine durch 0 abgeschlossene Liste der fehlerhaften
Sektoren in den Puffer geschrieben.

!item [Group:]
Laufwerksfunktionen

!item [Availability:]
All TOS versions.

!item [See Also:]
(!link [Binding] [Bindings fÅr Flopfmt]) ~ Flopwr

(!ende_liste)


!begin_node Bindings fÅr Flopfmt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Flopfmt( void *buf, int32_t filler, int16_t devno, int16_t spt,
                 int16_t trackno, int16_t sideno, int16_t interlv,
                 int32_t magic, int16_t virgin );
!item [Assembler:]
!begin_verbatim
move.w    virgin,-(sp)  ; Offset 24
move.l    magic,-(sp)   ; Offset 20
move.w    interlv,-(sp) ; Offset 18
move.w    sideno,-(sp)  ; Offset 16
move.w    trackno,-(sp) ; Offset 14
move.w    spt,-(sp)     ; Offset 12
move.w    devno,-(sp)   ; Offset 10
move.l    filler,-(sp)  ; Offset  6
pea       buf           ; Offset  2
move.w    #10,-(sp)     ; Offset  0
trap      #14           ; XBIOS aufrufen
lea       $1A(sp),sp    ; Stack korrigieren
!end_verbatim

!item [GFA-Basic]
Fehler%=Xbios(10,L:buf%,L:filler%,W:devno%,W:spt%,W:trackno%,W:sideno%,W:interlv%,L:magic%,W:virgin%)

(!ende_liste)
!end_node
!end_node


!else


!begin_node Flopfmt
(!begin_liste) [Beschreibung]

!item [Name:]
ØFloppy formatÆ - formatiert einzelne Spuren auf einer Diskette.

!item [Xbiosnummer:]
10

!item [Deklaration:]
int16_t Flopfmt( void *buf, int32_t filler, int16_t devno, int16_t spt,
                 int16_t trackno, int16_t sideno, int16_t interlv,
                 int32_t magic, int16_t virgin );

!item [Beschreibung:]
Die XBIOS-Routine Flopfmt formatiert eine oder mehrere Spuren auf einer
Diskette. Es gilt:
!begin_xlist [Parameter]
!item [Parameter]
Bedeutung
!item [buf]
Zeiger auf einen Bereich, in dem die Daten fÅr die Spur gespeichert werden
kînnen.
!item [filler]
bei allen TOS-Versionen < 1.02 unbenutzt, und auf 0 zu setzen. Ab dem
Blitter-TOS gilt: wenn (!I)interlv(!i) = -1 ist, so ist (!I)filler(!i) als
Zeiger auf eine Tabelle von Sektornummern anzusehen (16Bit-Worte). Dadurch
ergibt sich die Mîglichkeit, die Reihenfolge der Sektoren auf der Spur frei
zu wÑhlen.
!item [devno]
0 = Laufwerk-A, 1 = Laufwerk-B
!item [spt]
Sektoren pro Spur (normal: 9). Falls der Cookie (!link [_FDC][Cookie, _FDC])
 gesetzt ist, sind auch
Werte von 18 (High-Density) bzw. 36 (Extra-High-Density) Sektoren erlaubt.
Die Umschaltung der verschiedenen Schreibverfahren findet bei 13 (HD) bzw.
26 (ED) statt.
!item [trackno]
Nummer der Spur (0..79)
!item [sideno]
0: Seite-1
(!nl)
1: Seite-2 (bei doppelseitigen Disketten)
!item [interlv]
bestimmt, wie viele physikalische Sektoren jeweils zwischen zwei logischen
Sektoren liegen (normal: 1)
!item [magic]
0x87654321, sonst wird nicht formatiert.
!item [virgi]
Bitmuster, welches beim Formatieren in jeden Sektor geschrieben wird
(normal: 0xe5e5). Die oberen vier Bits dÅrfen nicht gesetzt werden, da dies
sonst vom Controller als Kommando interpretiert wÅrde.
!end_xlist
(!B)Hinweis:(!b) Ab dem Blitter-TOS erlaubt es das Desktop, eine Liste von
Sektornummern zu Åbergeben, um Spuren derart zu spiralisieren, daû beim
Spurwechsel mîglichst wenig Zeit mit dem Warten auf den nÑchsten Sektor
verloren wird.

Bei einem normalen Format (9 Sektoren pro Spur) muss der Åber den Parameter
(!I)buf(!i) angegebene Speicherbereich eine Grîûe von mindestens 8 Kbyte
besitzen; in anderen FÑllen muss der Puffer evtl. noch vergrîûert werden.

!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist.
Im Fehlerfall wird eine durch 0 abgeschlossene Liste der fehlerhaften
Sektoren in den Puffer geschrieben.

!item [Gruppe:]
Laufwerksfunktionen

!item [VerfÅgbar:]
Alle TOS Versionen.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Flopfmt]) ~ Flopwr

(!ende_liste)


!begin_node Bindings fÅr Flopfmt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Flopfmt( void *buf, int32_t filler, int16_t devno, int16_t spt,
                 int16_t trackno, int16_t sideno, int16_t interlv,
                 int32_t magic, int16_t virgin );
!item [Assembler:]
!begin_verbatim
move.w    virgin,-(sp)  ; Offset 24
move.l    magic,-(sp)   ; Offset 20
move.w    interlv,-(sp) ; Offset 18
move.w    sideno,-(sp)  ; Offset 16
move.w    trackno,-(sp) ; Offset 14
move.w    spt,-(sp)     ; Offset 12
move.w    devno,-(sp)   ; Offset 10
move.l    filler,-(sp)  ; Offset  6
pea       buf           ; Offset  2
move.w    #10,-(sp)     ; Offset  0
trap      #14           ; XBIOS aufrufen
lea       $1A(sp),sp    ; Stack korrigieren
!end_verbatim

!item [GFA-Basic]
Fehler%=Xbios(10,L:buf%,L:filler%,W:devno%,W:spt%,W:trackno%,W:sideno%,W:interlv%,L:magic%,W:virgin%)

(!ende_liste)
!end_node
!end_node


!endif