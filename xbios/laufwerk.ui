!begin_node DMAread
(!begin_liste) [Beschreibung:]
!item [Name:]
ØDMA readÆ - liest einzelne Sektoren von einer DMA-Einheit.
!item [Xbiosnummer:]
42
!item [Binding:]
(!link [Bindings fÅr DMAread] [Bindings fÅr DMAread])
!item [Beschreibung:]
Die XBIOS-Routine DMAread liest einzelne oder mehrere Sektoren von einem
ACSI- oder SCSI GerÑt. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [sector]
erste Sektornummer
!item [count]
Anzahl der Sektoren
!item [buffer]
Anfangsadresse im Speicher
!item [devno]
GerÑtenummer. Es gilt:
!begin_table [l l]
0..7: !! ACSI-GerÑte
8..15: !! SCSI-GerÑte
!end_table
Alle anderen Werte sind fÅr zukÅnftige Erweiterungen reserviert.
!end_xlist
(!B)Hinweis:(!b) In vielen FÑllen ist es sinnvoller, statt dieser Funktion
Rwabs zu verwenden. Der angegebene Speicherbereich muû fÅr die jeweilige
Hardware beschreibbar sein (Stichwort: Fast-RAM-Buffer). SCSI-GerÑte werden
von dieser Funktion nicht per DMA, sondern per Handshake betrieben.

Die Funktion ist (!I)nicht(!i) auf allen TOS-Versionen verfÅgbar!
!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist,
ansonsten einen Fehlercode.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]  (!link [Binding] [Bindings fÅr DMAread]) ~  
                      DMAwrite  ~ Floprd ~  Flopwr ~  Rwabs
(!ende_liste)
!end_node


!begin_node Bindings fÅr DMAread
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

WORD DMAread ( LONG sector, WORD count, VOID *buffer, WORD devno );
!item [Assembler:]
!begin_verbatim
move.w    devno,-(sp)  ; Offset 12
pea       buffer       ; Offset  8
move.w    count,-(sp)  ; Offset  6
move.l    sector,-(sp) ; Offset  2
move.w    #42,-(sp)    ; Offset  0
trap      #14          ; XBIOS aufrufen
lea       $E(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node DMAwrite
(!begin_liste) [Beschreibung:]
!item [Name:]
ØDMA writeÆ - schreibt einzelne Sektoren auf eine DMA-Einheit.
!item [Xbiosnummer:]
43
!item [Binding:]
(!link [Bindings fÅr DMAwrite] [Bindings fÅr DMAwrite])
!item [Beschreibung:]
Die XBIOS-Routine DMAwrite schreibt einzelne oder mehrere Sektoren auf ein
ACSI- oder SCSI-GerÑt. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [sector]
erste Sektornummer
!item [count]
Anzahl der Sektoren
!item [buffer]
Anfangsadresse im Speicher
!item [devno]
GerÑtenummer. Es gilt:
!begin_table [l l]
0..7: !! ACSI-GerÑte
8..15: !! SCSI-GerÑte
!end_table
Alle anderen Werte sind fÅr zukÅnftige Erweiterungen reserviert.
!end_xlist
(!B)Hinweis:(!b) In vielen FÑllen ist es sinnvoller, statt dieser Funktion
Rwabs zu verwenden. Der angegebene Speicherbereich muû fÅr die jeweilige
Hardware lesbar sein (Stichwort: Fast-RAM-Buffer). SCSI-GerÑte werden von
dieser Funktion nicht per DMA, sondern per Handshake betrieben.

Die Funktion ist (!I)nicht(!i) auf allen TOS-Versionen verfÅgbar! 
!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist,
ansonsten einen Fehlercode.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]   (!link [Binding] [Bindings fÅr DMAwrite]) ~
                      DMAread  ~ Floprd ~  Flopwr ~  Rwabs
(!ende_liste)
!end_node



!begin_node Bindings fÅr DMAwrite
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

WORD DMAwrite ( LONG sector, WORD count, VOID *buffer, WORD devno );
!item [Assembler:]
!begin_verbatim
move.w    devno,-(sp)  ; Offset 12
pea       buffer       ; Offset  8
move.w    count,-(sp)  ; Offset  6
move.l    sector,-(sp) ; Offset  2
move.w    #43,-(sp)    ; Offset  0
trap      #14          ; XBIOS aufrufen
lea       $E(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Flopfmt
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFloppy formatÆ - formatiert einzelne Spuren auf einer Diskette.
!item [Xbiosnummer:]
10
!item [Binding:]
(!link [Bindings fÅr Flopfmt] [Bindings fÅr Flopfmt])
!item [Beschreibung:]
Die XBIOS-Routine Flopfmt formatiert eine oder mehrere Spuren auf einer
Diskette. Es gilt:
!begin_xlist [Parameter]
!item [Parameter]
Bedeutung
!item [buf]
Zeiger auf einen Bereich, in dem die Daten fÅr die Spur gespeichert werden
kînnen.
!item [filler]
bei allen TOS-Versionen < 1.02 unbenutzt, und auf 0 zu setzen. Ab dem
Blitter-TOS gilt: wenn (!I)interlv(!i) = -1 ist, so ist (!I)filler(!i) als
Zeiger auf eine Tabelle von Sektornummern anzusehen (16Bit-Worte). Dadurch
ergibt sich die Mîglichkeit, die Reihenfolge der Sektoren auf der Spur frei
zu wÑhlen.
!item [devno]
0 = Laufwerk-A, 1 = Laufwerk-B
!item [spt]
Sektoren pro Spur (normal: 9). Falls der Cookie _FDC gesetzt ist, sind auch
Werte von 18 (High-Density) bzw. 36 (Extra-High-Density) Sektoren erlaubt.
Die Umschaltung der verschiedenen Schreibverfahren findet bei 13 (HD) bzw.
26 (ED) statt.
!item [trackno]
Nummer der Spur (0..79)
!item [sideno]
0: Seite-1
(!nl)
1: Seite-2 (bei doppelseitigen Disketten)
!item [interlv]
bestimmt, wie viele physikalische Sektoren jeweils zwischen zwei logischen
Sektoren liegen (normal: 1)
!item [magic]
0x87654321, sonst wird nicht formatiert.
!item [virgi]
Bitmuster, welches beim Formatieren in jeden Sektor geschrieben wird
(normal: 0xe5e5). Die oberen vier Bits dÅrfen nicht gesetzt werden, da dies
sonst vom Controller als Kommando interpretiert wÅrde.
!end_xlist
(!B)Hinweis:(!b) Ab dem Blitter-TOS erlaubt es das Desktop, eine Liste von
Sektornummern zu Åbergeben, um Spuren derart zu spiralisieren, daû beim
Spurwechsel mîglichst wenig Zeit mit dem Warten auf den nÑchsten Sektor
verloren wird.

Bei einem normalen Format (9 Sektoren pro Spur) muss der Åber den Parameter
(!I)buf(!i) angegebene Speicherbereich eine Grîûe von mindestens 8 Kbyte
besitzen; in anderen FÑllen muss der Puffer evtl. noch vergrîûert werden.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist.
Im Fehlerfall wird eine durch 0 abgeschlossene Liste der fehlerhaften
Sektoren in den Puffer geschrieben.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Flopfmt]) ~  Flopwr
(!ende_liste)
!end_node


!begin_node Bindings fÅr Flopfmt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

WORD Flopfmt ( VOID *buf, LONG filler, WORD devno, WORD spt, WORD trackno,
               WORD sideno, WORD interlv, LONG magic, WORD virgin );
!item [Assembler:]
!begin_verbatim
move.w    virgin,-(sp)  ; Offset 24
move.l    magic,-(sp)   ; Offset 20
move.w    interlv,-(sp) ; Offset 18
move.w    sideno,-(sp)  ; Offset 16
move.w    trackno,-(sp) ; Offset 14
move.w    spt,-(sp)     ; Offset 12
move.w    devno,-(sp)   ; Offset 10
move.l    filler,-(sp)  ; Offset  6
pea       buf           ; Offset  2
move.w    #10,-(sp)     ; Offset  0
trap      #14           ; XBIOS aufrufen
lea       $1A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Floprate
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFloppy rateÆ - liest oder setzt die seek rate eines Floppylaufwerks.
!item [Xbiosnummer:]
41
!item [Binding:]
(!link [Bindings fÅr Floprate] [Bindings fÅr Floprate])
!item [Beschreibung:]
Die XBIOS-Routine Floprate liefert bzw. setzt die aktuelle Seekrate. Es
gilt:
!begin_xlist [Parameter]
!item [Parameter]
Bedeutung
!item [devno]
Laufwerksnummer
!begin_table [l l l]
0 !! = !! Laufwerk-A
1 !! = !! Laufwerk-B usw.
!end_table
!item [newrate]
!begin_table [r l l]
-1 !! = !! Seekrate nicht verÑndern
0 !! = !! Rate von  6ms
1 !! = !! Rate von 12ms
2 !! = !! Rate von  2ms
3 !! = !! Rate von  3ms
!end_table
!end_xlist
!label Floppy, Timeout der
!label Timeout der Floppy

(!B)Hinweis:(!b) Die Funktion steht erst ab TOS 1.04 zur VerfÅgung. Ab
MagiC-3 kann darÅberhinaus per Floprate (-1, newrate) der (!B)Timeout(!b)
fÅr die Floppy eingestellt werden; ein Wert von 300 bedeutet 1,5 Sekunden
(dies ist der Wert, der beim Booten per Default eingestellt ist).

!item [Ergebnis:]
Die Funktion liefert die vorherige Seekrate als Ergebnis.

!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Floprate]) ~
                      Flopwr ~  Floprd ~  Flopver ~  Flopfmt
(!ende_liste)
!end_node



!begin_node Bindings fÅr Floprate
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

WORD Floprate ( WORD devno, WORD newrate );
!item [Assembler:]
!begin_verbatim
move.w    newrate,-(sp) ; Offset 4
move.w    devno,-(sp)   ; Offset 2
move.w    #41,-(sp)     ; Offset 0
trap      #14           ; XBIOS aufrufen
addq.l    #6,sp         ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Floprd
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFloppy readÆ - liest einzelne Sektoren von einer Platteneinheit.
!item [Xbiosnummer:]
8
!item [Binding:]
(!link [Bindings fÅr Floprd] [Bindings fÅr Floprd])
!item [Beschreibung:]
Die XBIOS-Routine Floprd liest einen oder mehrere physikalische Sektoren
von einer Diskette. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [buf]
Zeiger auf Speicherbereich fÅr die eingelesenen Sektoren
!item [filler]
unbenutzt
!item [devno]
Laufwerk (0 = Laufwerk-A usw.)
!item [sectno]
Startsektor (normal zwischen 1 und 9)
!item [trackno]
Tracknummer (normal zwischen 0 und 79)
!item [sideno]
Seite der Diskette (0 oder 1)
!item [count]
Anzahl der zu lesenden Sektoren
!end_xlist
!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist,
ansonsten einen Fehlercode.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Floprd]) ~
                        DMAread ~  DMAwrite ~  Flopwr ~  Rwabs
(!ende_liste)
!end_node


!begin_node Bindings fÅr Floprd
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

WORD Floprd ( VOID *buf, LONG filler, WORD devno, WORD sectno,
              WORD trackno, WORD sideno, WORD count );
!item [Assembler:]
!begin_verbatim
move.w    count,-(sp)   ; Offset 18
move.w    sideno,-(sp)  ; Offset 16
move.w    trackno,-(sp) ; Offset 14
move.w    sectno,-(sp)  ; Offset 12
move.w    devno,-(sp)   ; Offset 10
move.l    filler,-(sp)  ; Offset  6
pea       buf           ; Offset  2
move.w    #8,-(sp)      ; Offset  0
trap      #14           ; XBIOS aufrufen
lea       $14(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Flopver
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFloppy verifyÆ - ÅberprÅft Disketten.
!item [Xbiosnummer:]
19
!item [Binding:]
(!link [Bindings fÅr Flopver] [Bindings fÅr Flopver])
!item [Beschreibung:]
Die XBIOS-Routine Flopver ÅberprÅft, ob eine Reihe von Sektoren fehlerfrei
von einem Disketten-Laufwerk gelesen werden kann. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [buf]
Zeiger auf einen 1024 Byte groûen Speicherbereich, in den die zu
verifizierenden Sektoren eingelesen werden kînnen.
!item [filler]
unbenutzt (sollte auf 0 gesetzt werden)
!item [devno]
Laufwerk
!begin_table [l l l]
0 !! = !! Laufwerk-A 
1 !! = !! Laufwerk-B
!end_table
!item [sectno]
Startsektor (normal zwischen 1 und 9)
!item [trackno]
Tracknummer (normal zwischen 0 und 79)
!item [sideno]
Seite der Diskette (0 oder 1)
!item [count]
Anzahl der zu ÅberprÅfenden Sektoren
!end_xlist
(!B)Hinweis:(!b) Nach dem Aufruf findet man im Parameter (!I)buf(!i) eine
durch Null abgeschlossene Liste von 16-Bit Worten mit den Nummern der
defekten Sektoren. Die Funktion vergleicht also (!I)keine(!i) Sektoren mit
einem Speicherbereich; stattdessen liest sie die Sektoren in den immer
selben Puffer ein. Dabei wird nur ÅberprÅft, ob die Sektoren korrekt
gelesen werden kînnen, oder ob beim Lesen Lesefehler auftreten.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis den Wert 0, wenn die im Parameter
(!I)buf(!i) abgelegte Liste gÅltig ist und anderenfalls einen Wert
ungleich Null.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Flopver])
(!ende_liste)
!end_node


!begin_node Bindings fÅr Flopver
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

WORD Flopver ( VOID *buf, LONG filler, WORD devno, WORD sectno,
               WORD trackno, WORD sideno, WORD count );
!item [Assembler:]
!begin_verbatim
move.w    count,-(sp)    ; Offset 18
move.w    sideno,-(sp)   ; Offset 16
move.w    trackno,-(sp)  ; Offset 14
move.w    sectno,-(sp)   ; Offset 12
move.w    devno,-(sp)    ; Offset 10
move.l    filler,-(sp)   ; Offset  6
pea       buf            ; Offset  2
move.w    #19,-(sp)      ; Offset  0
trap      #14            ; XBIOS aufrufen
lea       $14(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node



!begin_node Flopwr
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFloppy writeÆ - schreibt einzelne Sektoren auf eine Platteneinheit.
!item [Xbiosnummer:]
9
!item [Binding:]
(!link [Bindings fÅr Flopwr] [Bindings fÅr Flopwr])
!item [Beschreibung:]
Die XBIOS-Routine Flopwr schreibt einen oder mehrere physikalische Sektoren
auf eine Diskette. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [buf]
Zeiger auf Speicherbereich mit den zu schreibenden Sektoren
!item [filler]
unbenutzt
!item [devno]
Laufwerk (0=Laufwerk-A, 1=Laufwerk-B)
!item [sectno]
Startsektor (normal zwischen 1 und 9)
!item [trackno]
Tracknummer (normal zwischen 0 und 79)
!item [sideno]
Seite der Diskette (0 oder 1)
!item [count]
Anzahl der zu schreibenden Sektoren
!end_xlist
!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist,
ansonsten einen Fehlercode.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Flopwr]) ~
                        DMAread ~  DMAwrite ~  Floprd
(!ende_liste)
!end_node


!begin_node Bindings fÅr Flopwr
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

WORD Flopwr ( VOID *buf, LONG filler, WORD devno, WORD sectno,
              WORD trackno, WORD sideno, WORD count );
!item [Assembler:]
!begin_verbatim
move.w    count,-(sp)    ; Offset 18
move.w    sideno,-(sp)   ; Offset 16
move.w    trackno,-(sp)  ; Offset 14
move.w    sectno,-(sp)   ; Offset 12
move.w    devno,-(sp)    ; Offset 10
move.l    filler,-(sp)   ; Offset  6
pea       buf            ; Offset  2
move.w    #9,-(sp)       ; Offset  0
trap      #14            ; XBIOS aufrufen
lea       $14(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metaclose
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetacloseÆ - gibt ein (!nolink [MetaDOS])-GerÑt wieder frei.
!item [Xbiosnummer:]
50
!item [Binding:]
(!link [Bindings fÅr Metaclose] [Bindings fÅr Metaclose])
!item [Beschreibung:]
 Die Funktion gibt das Laufwerk (!I)drive(!i) wieder frei.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metaclose]) ~  Metaopen
(!ende_liste)
!end_node



!begin_node Bindings fÅr Metaclose
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metaclose ( SHORT drive );
!item [Assembler:]
!begin_verbatim
move.w    drive,-(sp)  ; Offset 2
move.w    #50,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metadiscinfo
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetadiscinfoÆ - ermittelt aktuelle Status-Informationen.
!item [Xbiosnummer:]
63
!item [Binding:]
(!link [Bindings fÅr Metadiscinfo] [Bindings fÅr Metadiscinfo])
!item [Beschreibung:]
Die Funktion ermittelt Informationen Åber den Status eines
MetaDOS-GerÑtes. Es gilt:
!begin_table [l|l]
Parameter !! Bedeutung
!hline
drive !! gewÅnschtes Laufwerk
p !! Adresse des aufnehmenden Puffers
!end_table
(!B)Hinweis:(!b) Die Positionsangaben innerhalb der Struktur sind im
BCD-MSF-Format codiert. Die Komponente (!I)index(!i) wird von alten
BOS-Treibern nicht gesetzt, und die Komponente (!I)disctype(!i) ist bei
SCSI-CD-ROMs nicht gesetzt.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem (!nolink [MetaDOS]) zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metadiscinfo]) ~  Metastatus
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metadiscinfo
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metadiscinfo ( SHORT drive, CD_DISC_INFO *p );
!item [Assembler:]
!begin_verbatim
pea       p            ; Offset 4
move.w    drive,-(sp)  ; Offset 2
move.w    #63,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metagettoc
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetagettocÆ - liefert das (!nolink [Inhaltsverzeichnis]) eines GerÑtes.
!item [Xbiosnummer:]
62
!item [Binding:]
(!link [Bindings fÅr Metagettoc] [Bindings fÅr Metagettoc])
!item [Beschreibung:]
Die Funktion liefert das (!nolink [Inhaltsverzeichnis]) eines Laufwerks zurÅck.
Es gilt:
!begin_table [l|l]
Parameter !! Bedeutung
!hline
drive !! gewÅnschtes Laufwerk
flag !! reserviert fÅr CDAR504
buffer !! Puffer zur Aufnahme des Verzeichnisses
!end_table
(!B)Hinweis:(!b) Der aufnehmende Puffer sollte Platz fÅr 128 EintrÑge
bieten. Jeder Eintrag besteht aus einer Tracknummer und MSF-Adresse
(jeweils im BCD-Format). FÅr die Tracknummer gilt dabei: 0 = Record hat
keine Bedeutung,  0x01...0x99 = Tracknummer in BCD-Codierung, 0xa0 = erster
Track bei programmierter Reihenfolge, 0xa2 = Ende der CD.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metagettoc]) ~
                        Metaread ~  Metawrite
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metagettoc
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metagettoc ( SHORT drive, SHORT flag, CD_TOC_ENTRY *buffer );
!item [Assembler:]
!begin_verbatim
pea       buffer       ; Offset 6
move.w    flag,-(sp)   ; Offset 4
move.w    drive,-(sp)  ; Offset 2
move.w    #62,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metainit
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetainitÆ - Informationen Åber die installierte Version von MetaDOS
ermitteln.
!item [Xbiosnummer:]
48
!item [Binding:]
(!link [Bindings fÅr Metainit] [Bindings fÅr Metainit])
!item [Beschreibung:]
Die XBIOS-Routine Metainit ermittelt Informationen Åber die aktuell
installierte Version von MetaDOS, und der ihr bekannten GerÑte.

Es bietet sich folgendes Verfahren an:
!begin_itemize !short
!item Inhalt der META_INFO_1 Struktur komplett lîschen
!item Funktion Metainit aufrufen
!item Testen, ob die Komponente (!I)version(!i) noch einen Nullzeiger
      enthÑlt (dann ist (!I)kein(!i) (!nolink [MetaDOS]) installiert).
!end_itemize
!item [Ergebnis:]
Die Funktion liefert kein direktes Ergebnis.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metainit])
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metainit
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
VOID Metainit ( META_INFO_1 *buffer );
!item [Assembler:]
!begin_verbatim
pea       buffer       ; Offset 2
move.w    #48,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metaioctl
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetaioctlÆ - schickt (!nolink [GEMDOS])-Opcodes an ein (!nolink [MetaDOS]) GerÑt.
!item [Xbiosnummer:]
55
!item [Binding:]
(!link [Bindings fÅr Metaioctl] [Bindings fÅr Metaioctl])
!item [Beschreibung:]
Die Funktion erlaubt es, Opcodes der (!nolink [GEMDOS])-Routinen (!nolink [Dcntl]) bzw.
(!nolink [Fcntl]) an ein MetaDOS GerÑt abzusetzen. Es gilt:
!begin_table [l|l]
Parameter !! Bedeutung
!hline
drive !! gewÅnschtes Laufwerk
magic !! muss Wert 'FCTL' besitzen
opcode !! abzusetzender Opcode
buffer !! abhÑngig vom Opcode
!end_table
(!B)Hinweis:(!b) Die (!link [Liste der CD-ROM Kommandos][CD-ROM-Funktionen]) ist eine
Aufstellung aller bekannten Opcodes, die bei der Arbeit mit CD-ROMs anfallen kînnen.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem (!nolink [MetaDOS]) zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert im Fehlerfall einen der folgenden Werte zurÅck:
!begin_xlist [EINVFN:]
!item [EINVFN:]
der angegebene Opcode wird nicht unterstÅtzt.
!item [EUNCMD:]
die Funktion selbst (!) wird nicht unterstÅtzt.
!end_xlist
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]  (!link [Binding] [Bindings fÅr Metaioctl]) ~  Dcntl ~  Fcntl
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metaioctl
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metaioctl ( SHORT drive, LONG magic, SHORT opcode, VOID *buffer );
!item [Assembler:]
!begin_verbatim
pea       buffer       ; Offset 10
move.w    opcode,-(sp) ; Offset  8
move.l    magic,-(sp)  ; Offset  4
move.w    drive,-(sp)  ; Offset  2
move.w    #55,-(sp)    ; Offset  0
trap      #14          ; XBIOS aufrufen
lea       $E(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metaopen
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetaopenÆ - initialisiert ein (!nolink [MetaDOS])-GerÑt.
!item [Xbiosnummer:]
49
!item [Binding:]
(!link [Bindings fÅr Metaopen] [Bindings fÅr Metaopen])
!item [Beschreibung:]
Die Funktion initialisiert ein (!nolink [MetaDOS])-GerÑt. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [drive]
gewÅnschtes Laufwerk
!item [buffer]
Puffer zur Aufnahme des Namens des Treibers
!end_xlist
(!B)Hinweis:(!b) Falls der Treibername mit 'CD' beginnt, darf man davon
ausgehen, daû es sich um einen CD-ROM-Treiber handelt.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metaopen]) ~  Metaclose
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metaopen
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metaopen ( SHORT drive, META_DRVINFO *buffer );
!item [Assembler:]
!begin_verbatim
pea       buffer       ; Offset 4
move.w    drive,-(sp)  ; Offset 2
move.w    #49,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metaread
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetareadÆ - liest Daten von einem (!nolink [MetaDOS])-GerÑt.
!item [Xbiosnummer:]
51
!item [Binding:]
(!link [Bindings fÅr Metaread] [Bindings fÅr Metaread])
!item [Beschreibung:]
Die Funktion liest Daten von einem (!nolink [MetaDOS])-GerÑt. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [drive]
gewÅnschtes Laufwerk
!item [buffer]
Puffer zur Aufnahme der Daten
!item [blockno]
Nummer des Startblocks
!item [count]
Anzahl der zu lesenden Blîcke
!end_xlist
(!B)Hinweis:(!b) Die Blockgrîûe betrÑgt bei CD-ROMs 2048 Bytes; dies kann
jedoch leider nicht gezielt abgefragt werden. Aufgrund einer Begrenzung in
Atari's BOS-Treibern kînnen maximal 63 Blîcke an einem StÅck gelesen werden.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metaread]) ~  Metawrite
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metaread
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metaread ( SHORT drive, VOID *buffer, LONG blockno, SHORT count );
!item [Assembler:]
!begin_verbatim
move.w    count,-(sp)   ; Offset 10
move.l    blockno,-(sp) ; Offset  8
pea       buffer        ; Offset  4
move.w    drive,-(sp)   ; Offset  2
move.w    #51,-(sp)     ; Offset  0
trap      #14           ; XBIOS aufrufen
lea       $E(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metasetsongtime
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetasetsongtimeÆ - startet eine Audio-Wiedergabe.
!item [Xbiosnummer:]
61
!item [Binding:]
(!link [Bindings fÅr Metasetsongtime] [Bindings fÅr Metasetsongtime])
!item [Beschreibung:]
Die Funktion startet eine Audio-Wiedergabe. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [drive]
gewÅnschtes Laufwerk
!item [repeat]
Repeat
!begin_table [l l l]
0 !! = !! ohne Wiederholung
1 !! = !! mit Wiederholung
!end_table
!item [starttime]
BCD-Anfangszeit in MSF-Codierung
!item [endtime]
BCD-Endzeit in MSF-Codierung
!end_xlist
(!B)Hinweis:(!b) Der Repeat-Modus wird anscheinend nur von CDARGEN.BOS und
auch nur fÅr das Atari-CDAR504 unterstÅtzt.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metasetsongtime]) ~
                        Metastartaudio ~  Metastopaudio
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metasetsongtime
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metasetsongtime ( SHORT drive, SHORT repeat, LONG starttime,
                       LONG endtime );
!item [Assembler:]
!begin_verbatim
move.l    endtime,-(sp)    ; Offset 10
move.l    starttime,-(sp)  ; Offset  6
move.w    repeat           ; Offset  4
move.w    drive            ; Offset  2
move.w    #61,-(sp)        ; Offset  0
trap      #14              ; XBIOS aufrufen
lea       $E(sp),sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metastartaudio
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetastartaudioÆ - startet eine Audio-Wiedergabe.
!item [Xbiosnummer:]
59
!item [Binding:]
(!link [Bindings fÅr Metastartaudio] [Bindings fÅr Metastartaudio])
!item [Beschreibung:]
Die Funktion startet eine Audio-Wiedergabe. Es gilt:
!begin_xlist !short [bytearray]
!item [Parameter]
Bedeutung
!item [~]
~
!item [drive]
gewÅnschtes Laufwerk
!item [flag]
Modus
!item [bytearray]
abhÑngig vom Parameter flag
!end_xlist
(!B)Hinweis:(!b) Auf SCSI-GerÑten existiert nur ein Modus (flag = 0). In
diesem Fall Åbergibt man in (!I)bytearray[0](!i) die Anzahl der Lieder, und
in (!I)bytearray[1](!i) die Nummer des ersten Liedes.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metastartaudio]) ~
                        Metasetsongtime  ~ Metastopaudio
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metastartaudio
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metastartaudio ( SHORT drive, SHORT flag, UBYTE *bytearray);
!item [Assembler:]
!begin_verbatim
pea       bytearray    ; Offset 6
move.w    flag,-(sp)   ; Offset 4
move.w    drive,-(sp)  ; Offset 2
move.w    #59,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metastatus
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetastatusÆ - ermittelt den Status eines (!nolink [MetaDOS]) GerÑtes.
!item [Xbiosnummer:]
54
!item [Binding:]
(!link [Bindings fÅr Metastatus] [Bindings fÅr Metastatus])
!item [Beschreibung:]
Die Funktion ermittelt den Status eines (!nolink [MetaDOS]) GerÑtes. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [drive]
gewÅnschtes Laufwerk
!item [buffer]
abhÑngig von der Implementierung des BOS-Treibers
!end_xlist
(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen 32-Bit Wert zurÅck, der wie folgt
codiert ist:
(!begin_liste) [High-Word:]
!item [High-Word:]
!begin_table [l l l]
0x0000 !! = !! alles ok
0xffff !! = !! Fehler aufgetreten
!end_table
!item [Low-Word :]
!begin_table [l l]
Bit-15 !! (Fehler)
Bit-07 !! (Timeout)
Bit-02 !! (Medienwechsel)
Bit-01 !! (Busy)
!end_table
(!ende_liste)
Alle anderen Bits des Low-Words sind z.Zt. reserviert.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metastatus]) ~  Metadiscinfo
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metastatus
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metastatus ( SHORT drive, VOID *buffer );
!item [Assembler:]
!begin_verbatim
pea       buffer       ; Offset 4
move.w    drive,-(sp)  ; Offset 2
move.w    #54,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metastopaudio
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetastopaudioÆ - beendet eine Audio-Wiedergabe.
!item [Xbiosnummer:]
60
!item [Binding:]
(!link [Bindings fÅr Metastopaudio] [Bindings fÅr Metastopaudio])
!item [Beschreibung:]
Die Funktion beendet die Audio-Wiedergabe fÅr das Laufwerk (!I)drive(!i).

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metastopaudio]) ~
                        Metastartaudio ~  Metasetsongtime
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metastopaudio
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metastopaudio ( SHORT drive );
!item [Assembler:]
!begin_verbatim
move.w    drive,-(sp)  ; Offset 2
move.w    #60,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Metawrite
(!begin_liste) [Beschreibung:]
!item [Name:]
ØMetawriteÆ - schreibt Daten auf ein (!nolink [MetaDOS])-GerÑt.
!item [Xbiosnummer:]
52
!item [Binding:]
(!link [Bindings fÅr Metawrite] [Bindings fÅr Metawrite])
!item [Beschreibung:]
Die Funktion schreibt Daten auf ein (!nolink [MetaDOS])-GerÑt. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [drive]
gewÅnschtes Laufwerk
!item [buffer]
Adresse des Datenpuffers
!item [blockno]
Nummer des Startblocks
!item [count]
Anzahl der zu schreibenden Blîcke
!end_xlist
(!B)Hinweis:(!b) Bei einem CD-ROM hat diese Funktion natÅrlich keine
Wirkung.

(!B)Achtung:(!b) Diese Funktion ist optional. Sie steht nur bei
installiertem MetaDOS zur VerfÅgung.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Wert vom Typ LONG zurÅck.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Metawrite]) ~  Metaread
(!ende_liste)
!end_node


!begin_node Bindings fÅr Metawrite
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Metawrite ( SHORT drive, VOID *buffer, LONG blockno, SHORT count );
!item [Assembler:]
!begin_verbatim
move.w    count,-(sp)   ; Offset 10
move.l    blockno,-(sp) ; Offset  8
pea       buffer        ; Offset  4
move.w    drive,-(sp)   ; Offset  2
move.w    #52,-(sp)     ; Offset  0
trap      #14           ; XBIOS aufrufen
lea       $E(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node


!begin_node Protobt
(!begin_liste) [Beschreibung:]
!item [Name:]
Øprototype boot sectorÆ - Standard-Boot-Sektor.
!item [Xbiosnummer:]
18
!item [Binding:]
(!link [Bindings fÅr Protobt] [Bindings fÅr Protobt])
!item [Beschreibung:]
Die XBIOS-Routine Protobt legt einen Boot-Sektor auf einer Diskette an. Das
Argument (!I)buf(!i) verweist auf einen 512 Byte groûen Puffer mit dem
Inhalt des Boot-Sektors. Der Parameter (!I)serialno(!i) dient dazu, eine
Seriennummer im Bootsektor abzuspeichern. Wenn die Variable (!I)serialno(!i)
grîûer als 0x01000000 ist, dann wird eine Zufallszahl abgelegt. Mit
(!I)disktype(!i) wird eine der folgenden Diskettenarten ausgewÑhlt:
!begin_xlist !short [disktype]
!item [disktype]
Bedeutung
!item [~]
~
!item [~~-1]
nicht verÑndern
!item [~~~0]
40 Spuren, einseitig~~~ (180 Kbyte)
!item [~~~1]
40 Spuren, doppelseitig (360 Kbyte)
!item [~~~2]
80 Spuren, einseitig~~~ (360 Kbyte)
!item [~~~3]
80 Spuren, doppelseitig (720 Kbyte)
!item [~~~4]
(!B)High-Density(!b) (1,44 Mbyte)
(!nl)
Wird nur unterstÅtzt, wenn im Cookie (!nolink [_FDC]) der Wert fÅr HD-UnterstÅtzung
eingetragen ist.
!item [~~~5]
(!B)Extra-High-Density(!b) (2,88 Mbyte)
(!nl)
Wird nur unterstÅtzt, wenn im Cookie (!nolink [_FDC]) der Wert fÅr ED-UnterstÅtzung
eingetragen ist.
!end_xlist
Der Parameter (!I)execflag(!i) legt schlieûlich fest, ob die Informationen
im Boot-Sektor als Programm ausgefÅhrt werden kînnen. Es gilt:
!begin_xlist !short [execflag]
!item [execflag]
Bedeutung
!item [~]
~
!item [-1]
Bootsektor nicht verÑndern
!item [~0]
Bootsektor nicht ausfÅhren
!item [~1]
Bootsektor ausfÅhrbar
!end_xlist
(!B)Hinweis:(!b) Damit Disketten auch auf MSDOS-Systemen gelesen werden
kînnen, mÅssen in die ersten 3 Bytes des Bootsektors die Werte 0xe9, 0x00
und 0x4e eingetragen werden; auf diese Art und Weise behandelte Disketten
sind unter TOS dann allerdings (!I)nicht(!i) mehr bootbar.
!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.
!item [Gruppe:]
Laufwerksfunktionen
!item [Querverweis:]    (!link [Binding] [Bindings fÅr Protobt]) ~  Flopfmt
(!ende_liste)
!end_node


!begin_node Bindings fÅr Protobt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <portab.h> (!nl)
 #include <tos.h>

VOID Protobt ( VOID *buf, LONG serialno, WORD disktype, WORD execflag );
!item [Assembler:]
!begin_verbatim
move.w    execflag,-(sp)  ; Offset 12
move.w    disktype,-(sp)  ; Offset 10
move.l    serialno,-(sp)  ; Offset  6
pea       buf             ; Offset  2
move.w    #18,-(sp)       ; Offset  0
trap      #14             ; XBIOS aufrufen
lea       $E(sp),sp       ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7xbi.htm">GFA-H-Util XBios</A>
!end_raw
!endif
(!ende_liste)
!end_node
