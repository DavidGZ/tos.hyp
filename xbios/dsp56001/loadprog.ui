!iflang [english]


!begin_node Dsp_LoadProg
(!begin_liste) [Availability]

!item [Name:]
ØDsp_LoadProgÆ - DSP Programm laden und starten

!item [Opcode:]
108

!item [Syntax:]
int16_t Dsp_LoadProg( int8_t *file, int16_t ability, int8_t *buffer );

!item [Description:]
Die Funktion Dsp_LoadProg lÑdt das DSP-Programm mit dem Namen
(!I)filename(!i). Das Programm muû im .LOD-Format vorliegen und darf den
durch Dsp_Reserve reservierten Speicher nicht Åberschreiten. Der Parameter
(!I)ability(!i) identifiziert das Programm. (!I)buffer(!i) zeigt auf einen
Speicherbereich, in dem das generierte Programm zwischengespeichert werden
kann. Die Grîûe des Speicherbereichs berechnet sich nach der Formel
!begin_verbatim
  DSP-Wortgrîûe * ( Anzahl der
  Programm- und Datenworte in der
  .LOD-Datei + ( DSP-Wortgrîûe *
  Anzahl der Blîcke in der .LOD-
  Datei ))
!end_verbatim
Danach wird das Programm ausgefÅhrt.

!item [(!nolink [Return]) Value:]
Die Funktion liefert im positiven Fall den Wert 0, und im Fehlerfall den
Wert -1 zurÅck.

!item [Group:]
DSP-Programmierung

!item [Availability:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [See Also:]
(!link [Binding] [Bindings fÅr Dsp_LoadProg]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_Reserve ~ Dsp_ExecProg ~ Dsp_ExecBoot ~ Dsp_LodToBinary

(!ende_liste)


!begin_node Bindings fÅr Dsp_LoadProg
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Dsp_LoadProg( int8_t *file, int16_t ability, int8_t *buffer );
!item [Assembler:]
!begin_verbatim
pea       buffer         ; Offset 8
move.w    ability,-(sp)  ; Offset 6
pea       file           ; Offset 2
move.w    #108,-(sp)     ; Offset 0
trap      #14            ; XBIOS aufrufen
lea       $C(sp),sp      ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dsp_LoadProg
(!begin_liste) [Beschreibung]

!item [Name:]
ØDsp_LoadProgÆ - DSP Programm laden und starten

!item [Xbiosnummer:]
108

!item [Deklaration:]
int16_t Dsp_LoadProg( int8_t *file, int16_t ability, int8_t *buffer );

!item [Beschreibung:]
Die Funktion Dsp_LoadProg lÑdt das DSP-Programm mit dem Namen
(!I)filename(!i). Das Programm muû im .LOD-Format vorliegen und darf den
durch Dsp_Reserve reservierten Speicher nicht Åberschreiten. Der Parameter
(!I)ability(!i) identifiziert das Programm. (!I)buffer(!i) zeigt auf einen
Speicherbereich, in dem das generierte Programm zwischengespeichert werden
kann. Die Grîûe des Speicherbereichs berechnet sich nach der Formel
!begin_verbatim
  DSP-Wortgrîûe * ( Anzahl der
  Programm- und Datenworte in der
  .LOD-Datei + ( DSP-Wortgrîûe *
  Anzahl der Blîcke in der .LOD-
  Datei ))
!end_verbatim
Danach wird das Programm ausgefÅhrt.

!item [Ergebnis:]
Die Funktion liefert im positiven Fall den Wert 0, und im Fehlerfall den
Wert -1 zurÅck.

!item [Gruppe:]
DSP-Programmierung

!item [VerfÅgbar:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dsp_LoadProg]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_Reserve ~ Dsp_ExecProg ~ Dsp_ExecBoot ~ Dsp_LodToBinary

(!ende_liste)


!begin_node Bindings fÅr Dsp_LoadProg
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Dsp_LoadProg( int8_t *file, int16_t ability, int8_t *buffer );
!item [Assembler:]
!begin_verbatim
pea       buffer         ; Offset 8
move.w    ability,-(sp)  ; Offset 6
pea       file           ; Offset 2
move.w    #108,-(sp)     ; Offset 0
trap      #14            ; XBIOS aufrufen
lea       $C(sp),sp      ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif