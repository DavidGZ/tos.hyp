!iflang [english]


!begin_node Dsp_LodToBinary
(!begin_liste) [Availability]

!item [Name:]
ØDsp_LodToBinaryÆ - Konvertierung einer Datei vom LOD in das BinÑrformat

!item [Opcode:]
111

!item [Syntax:]
(!link [Bindings fÅr Dsp_LodToBinary] [Bindings fÅr Dsp_LodToBinary])

!item [Description:]
Die Funktion Dsp_LodToBinary konvertiert den Inhalt der .LOD-Datei mit dem
Namen (!I)filename(!i) ins BinÑrformat. Das so erzeugte DSP-Programm wird
an der Adresse codeptr abgelegt. Dieser Speicherbereich muû ausreichend
groû dimensioniert sein. Danach kann das Programm mit (!nolink [Dsp_ExecProg]) oder
Dsp_ExecBoot ausgefÅhrt werden.

(!B)Hinweis:(!b) Die Funktion ist nur auf Computern mit dem Signalprozessor
DSP56001 verfÅgbar.

!item [(!nolink [Return]) Value:]
Die Funktion liefert im positiven Fall die LÑnge des Programms in
DSP-Worten, oder im Fehlerfall einen negativen Wert zurÅck.

!item [Group:]
DSP-Programmierung

!item [Availability:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [See Also:]
(!link [Binding] [Bindings fÅr Dsp_LodToBinary]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_Reserve ~ Dsp_LoadProg ~ Dsp_ExecBoot ~ Dsp_ExecProg

(!ende_liste)


!begin_node Bindings fÅr Dsp_LodToBinary
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
#include <tos.h>

int32_t Dsp_LodToBinary( int8_t *file, int8_t *codeptr );
!item [Assembler:]
!begin_verbatim
pea       codeptr      ; Offset 6
pea       file         ; Offset 2
move.w    #111,-(sp)   ; Offset 0
trap      #14          ; XBIOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dsp_LodToBinary
(!begin_liste) [Beschreibung]

!item [Name:]
ØDsp_LodToBinaryÆ - Konvertierung einer Datei vom LOD in das BinÑrformat

!item [Xbiosnummer:]
111

!item [Binding:]
(!link [Bindings fÅr Dsp_LodToBinary] [Bindings fÅr Dsp_LodToBinary])

!item [Beschreibung:]
Die Funktion Dsp_LodToBinary konvertiert den Inhalt der .LOD-Datei mit dem
Namen (!I)filename(!i) ins BinÑrformat. Das so erzeugte DSP-Programm wird
an der Adresse codeptr abgelegt. Dieser Speicherbereich muû ausreichend
groû dimensioniert sein. Danach kann das Programm mit (!nolink [Dsp_ExecProg]) oder
Dsp_ExecBoot ausgefÅhrt werden.

(!B)Hinweis:(!b) Die Funktion ist nur auf Computern mit dem Signalprozessor
DSP56001 verfÅgbar.

!item [Ergebnis:]
Die Funktion liefert im positiven Fall die LÑnge des Programms in
DSP-Worten, oder im Fehlerfall einen negativen Wert zurÅck.

!item [Gruppe:]
DSP-Programmierung

!item [VerfÅgbar:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dsp_LodToBinary]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_Reserve ~ Dsp_LoadProg ~ Dsp_ExecBoot ~ Dsp_ExecProg

(!ende_liste)


!begin_node Bindings fÅr Dsp_LodToBinary
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
#include <tos.h>

int32_t Dsp_LodToBinary( int8_t *file, int8_t *codeptr );
!item [Assembler:]
!begin_verbatim
pea       codeptr      ; Offset 6
pea       file         ; Offset 2
move.w    #111,-(sp)   ; Offset 0
trap      #14          ; XBIOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif