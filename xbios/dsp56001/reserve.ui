!iflang [english]


!begin_node Dsp_Reserve
(!begin_liste) [Availability]

!item [Name:]
ØDsp_ReserveÆ - Speicher reservieren

!item [Opcode:]
107

!item [Syntax:]
int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );

!item [Description:]
Die Funktion Dsp_Reserve reserviert (!I)xreserve(!i) Worte X-Speicher und
(!I)yreserve(!i) Worte Y-Speicher. Die Speicheranforderung darf den
verfÅgbaren Speicher auf keinen Fall Åbertreffen. Diese Funktion ist
notwendig, damit DSP-Prozesse nicht durch DSP-Unterprogramme Åberschrieben
werden. Die Reservierung bleibt bis zum nÑchsten Aufruf von Dsp_Reserve
bestehen.

!item [(!nolink [Return]) Value:]
Die Funktion liefert im positiven Fall den Wert 0, und im Fehlerfall den
Wert -1 zurÅck.

!item [Group:]
DSP-Programmierung

!item [Availability:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [See Also:]
(!link [Binding] [Bindings fÅr Dsp_Reserve]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_LoadProg ~ Dsp_ExecProg ~ Dsp_ExecBoot

(!ende_liste)


!begin_node Bindings fÅr Dsp_Reserve
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );
!item [Assembler:]
!begin_verbatim
move.l    yreserve,-(sp)  ; Offset 6
move.l    xreserve,-(sp)  ; Offset 2
move.w    #107,-(sp)      ; Offset 0
trap      #14             ; XBIOS aufrufen
lea       $A(sp),sp       ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dsp_Reserve
(!begin_liste) [Beschreibung]

!item [Name:]
ØDsp_ReserveÆ - Speicher reservieren

!item [Xbiosnummer:]
107

!item [Deklaration:]
int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );

!item [Beschreibung:]
Die Funktion Dsp_Reserve reserviert (!I)xreserve(!i) Worte X-Speicher und
(!I)yreserve(!i) Worte Y-Speicher. Die Speicheranforderung darf den
verfÅgbaren Speicher auf keinen Fall Åbertreffen. Diese Funktion ist
notwendig, damit DSP-Prozesse nicht durch DSP-Unterprogramme Åberschrieben
werden. Die Reservierung bleibt bis zum nÑchsten Aufruf von Dsp_Reserve
bestehen.

!item [Ergebnis:]
Die Funktion liefert im positiven Fall den Wert 0, und im Fehlerfall den
Wert -1 zurÅck.

!item [Gruppe:]
DSP-Programmierung

!item [VerfÅgbar:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dsp_Reserve]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_LoadProg ~ Dsp_ExecProg ~ Dsp_ExecBoot

(!ende_liste)


!begin_node Bindings fÅr Dsp_Reserve
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );
!item [Assembler:]
!begin_verbatim
move.l    yreserve,-(sp)  ; Offset 6
move.l    xreserve,-(sp)  ; Offset 2
move.w    #107,-(sp)      ; Offset 0
trap      #14             ; XBIOS aufrufen
lea       $A(sp),sp       ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif