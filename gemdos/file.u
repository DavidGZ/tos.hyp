!begin_node Fattrib
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile attributeÆ - Dateiattribut ermitteln oder setzen.
!item [Gemdosnummer:]
67
!item [Binding:]
(!link [Bindings fÅr Fattrib] [Bindings fÅr Fattrib])
!item [Beschreibung:]
Die GEMDOS-Routine Fattrib ermittelt oder setzt die Attribute einer Datei.
Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [filename]
Dateiname der entsprechenden Datei
!item [wflag]
!begin_xlist !short

!item [0 =]
Attribute auslesen

!item [1 =]
Attribute setzen
!end_xlist

!label Dateiattribute von TOS
!label Attribute einer Datei
!item [attrib]
(!B)Dateiattribute(!b)
!begin_xlist !short
!item [Bit-0:]
Datei ist schreibgeschÅtzt
!item [Bit-1:]
Datei ist versteckt
!item [Bit-2:]
Systemdatei
!item [Bit-3:]
Diskettenname
!item [Bit-4:]
Verzeichnis
!item [Bit-5:]
Archiv-Bit
!end_xlist
!end_xlist
(!B)Hinweis:(!b) Programme sollten nach Mîglichkeit auf die Routinen Fxattr
und Fchmod zurÅckgreifen, da diese leistungsfÑhiger als Fattrib sind.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EACCDN :]
!item [EACCDN :]
Zugriff verweigert
!item [EFILNF :]
Datei nicht gefunden
!item [EPTHNF :]
Verzeichnis nicht gefunden
!item [sonst :]
die aktuellen Dateiattribute
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fxattr
(!ende_liste)


!begin_node Bindings fÅr Fattrib
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fattrib ( CONST BYTE *filename, WORD wflag, WORD attrib );
!item [Assembler:]
!begin_verbatim
move.w    attrib,-(sp) ; Offset 8
move.w    wflag,-(sp)  ; Offset 6
pea       filename     ; Offset 2
move.w    #67,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fchmod
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFchmodÆ - Berechtigung fÅr Dateizugriffe setzen.
!item [Gemdosnummer:]
306
!item [Binding:]
(!link [Bindings fÅr Fchmod] [Bindings fÅr Fchmod])
!item [Beschreibung:]
Die Funktion Ñndert die Zugriffsrechte fÅr die Datei (!I)name(!i).
Der Parameter (!I)mode(!i) enthÑlt die neuen Zugriffsrechte:
!begin_table
Zugriff durch !! mode !! Bedeutung
!hline
Besitzer der !! 0400 !! Leseberechtigung
Datei !! 0200 !! Schreibberechtigung
~ !! 0100 !! AusfÅhrungsrecht
~ !! ~ !! ~
Gruppe der !! 0040 !! Leseberechtigung
Datei !! 0020 !! Schreibberechtigung
~ !! 0010 !! AusfÅhrungsrecht
~ !! ~ !! ~
Alle anderen !! 0004 !! Leseberechtigung
Benutzer !! 0002 !! Schreibberechtigung
~ !! 0001 !! AusfÅhrungsrecht
!end_table
(!B)FÅr ausfÅhrbare Dateien gilt:(!b)
!begin_xlist !short [00000]
!item [mode]
Bedeutung
!item [~]
~
!item [04000]
effektive UID des Prozesses auf die UID dessen setzen, der diesen Prozeû
ausfÅhrt.
!item [02000]
effektive GID des Prozesses auf die GID dessen setzen, der diesen Prozeû
ausfÅhrt.
!item [01000]
Die Datei ist ein Verzeichnis
(!nl)
Nur der Datei- bzw. Verzeichnis-EigentÅmer (oder root) kînnen Dateien in
diesem Verzeichnis lîschen.
!item [????]
Die Datei ist ein Shared-Text Programm
(!nl)
Nach der Abarbeitung wird das Programm nicht aus dem Speicher entfernt und
muû dem entsprechend fÅr eine erneute Bearbeitung nicht nachgeladen werden.
!end_xlist
(!B)Hinweis:(!b) Nicht alle Filesysteme mÅssen alle Mîglichkeiten
unterstÅtzen. Nicht unterstÅtzte Zugriffsrechte werden dann ignoriert.
AusfÅhrungsrecht fÅr ein Verzeichnis bedeutet, daû in diesem Verzeichnis
nach einem Namen bzw. einer Namenskomponente gesucht werden darf.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [E_ACCDN :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [E_FILNF :]
Datei nicht gefunden.
!item [E_PTHNF :]
Pfad zur Datei nicht gefunden.
!item [E_ACCDN :]
Die EUID des aufrufenden Prozesses unterscheidet sich von der UID des
Dateibesitzers und ist auch nicht die des Kernels (0).
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fattrib ~  Fxattr ~
                     (!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)

   


!begin_node Bindings fÅr Fchmod
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fchmod ( BYTE *name, WORD mode );
!item [Assembler:]
!begin_verbatim
move.w    mode,-(sp)   ; Offset 6
pea       name         ; Offset 2
move.w    #306,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fchown
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFchownÆ - Benutzer/Gruppenkennungen Ñndern.
!item [Gemdosnummer:]
305
!item [Binding:]
(!link [Bindings fÅr Fchown] [Bindings fÅr Fchown])
!item [Beschreibung:]
Die Funktion Ñndert die Benutzer-/Gruppenkennung der Datei (!I)name(!i), die
wiederum die Zugriffsrechte der Datei regeln.

Dieser Aufruf kann nur von einem Prozeû erfolgen der eine effektive
Benutzerkennung (EUID) hat, die 0 ist, oder die der UID der Datei
entspricht. Im letzteren Fall muû die neue UID der alten entsprechen, und
darÅber hinaus der aufrufende Prozeû Mitglied der Gruppe mit der
Gruppennummer GID sein.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EACCDN :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EINVFN :]
das Filesystem unterstÅtzt nicht das Konzept von
Benutzer-/Gruppenkennungen (Beispiel: TOS-FS).
!item [EACCDN :]
Die EUID des aufrufenden Prozesses differiert von der UID des
Dateibesitzers und ist auch nicht 0.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fchmod ~  Fxattr ~ 
           (!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Fchown
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fchown ( BYTE *name, WORD uid, WORD gid );
!item [Assembler:]
!begin_verbatim
move.w    gid,-(sp)    ; Offset 8
move.w    uid,-(sp)    ; Offset 6
pea       name         ; Offset 2
move.w    #305,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fclose
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile closeÆ - Datei schlieûen.
!item [Gemdosnummer:]
62
!item [Binding:]
(!link [Bindings fÅr Fclose] [Bindings fÅr Fclose])
!item [Beschreibung:]
Die GEMDOS-Routine Fclose schlieût eine Datei mit der Dateikennung
(!I)handle(!i).

(!B)Hinweis:(!b) Im Netzwerk wird das aktive Locking aufgehoben. Beim
Schlieûen von StandardkanÑlen wird ab GEMDOS-Version 0.15 wieder der
ursprÅngliche Kanal eingesetzt.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EIHNDL]
!item [Wert]
Bedeutung
!item [~]
~
!item [E_OK]
kein Fehler aufgetreten
!item [EIHNDL]
falsche Dateikennung
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fopen
(!ende_liste)


!begin_node Bindings fÅr Fclose
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fclose ( WORD handle );
!item [Assembler:]
!begin_verbatim
move.w    handle,-(sp)  ; Offset 2
move.w    #62,-(sp)     ; Offset 0
trap      #1            ; GEMDOS aufrufen
addq.l    #4,sp         ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fcntl
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFcntlÆ - Kontrolloperationen auf einem File ausfÅhren.
!item [Gemdosnummer:]
260
!item [Binding:]
(!link [Bindings fÅr Fcntl] [Bindings fÅr Fcntl])
!item [Beschreibung:]
Die Funktion fÅhrt verschiedene Kontrolloperationen auf der Datei mit der
Handle (!I)fh(!i) duch. Der Parameter (!I)cmd(!i) beschreibt die gewÅnschte
Operation, und kann folgende Werte annehmen ((!I)arg(!i) ist dabei vom
gewÑhlten Kommando abhÑngig):

!label Fcntl, File-Kommandos fÅr
!label F_DUPFD
(!B)F_DUPFD (0):(!b)
(!nl)
Dupliziert das angegebene Datei-Handle. FÅr das neue Intervall gilt:
(!I)arg(!i) <= Handle < 32. Falls in dem angegebenen Bereich keine freien
Handles existieren, wird die Fehlermeldung ENHNDL zurÅckgegeben. Ein Aufruf
von Fdup (handle) ist also Ñquivalent zu Fcntl (handle, 6L, F_DUPFD).

!label F_GETFD
(!B)F_GETFD (1):(!b)
(!nl)
Dieses Kommando gibt das nicht-vererbungs-Flag fÅr das Handle f zurÅck. Das
Flag ist 0, wenn per Pexec gestartete Tochterprozesse die angegebene Datei
erben sollen, anderenfalls hat es den Wert 1. Der Parameter (!I)arg(!i)
besitzt keine Bedeutung.

!label F_SETFD
(!B)F_SETFD (2):(!b)
(!nl)
Dieses Kommando setzt das nicht-vererbungs-Flag fÅr das Handle f. Der
Defaultwert des Flags ist 0 fÅr die Standard-Handles im Bereich von 0...5
und 1 fÅr alle anderen, also nicht-Standard-Handles.

!label F_GETFL
(!B)F_GETFL (3):(!b)
(!nl)
Dieses Kommando gibt die Dateihandle-Flags zurÅck, die durch den Benutzer
verÑndert werden kînnen. Dabei handelt es sich um den bei Fopen angegebenen
Parameter mode, sofern dieser nicht durch einen anderen Aufruf von Fcntl
verÑndert worden ist.

!label F_SETFL
(!B)F_SETFL (4):(!b)
(!nl)
Dieses Kommando setzt die Dateihandle-Flags neu, die durch den Benutzer
verÑndert werden kînnen (andere Bits werden ignoriert, und sollten auf den
Wert 0 gesetzt werden). Es ist nicht mîglich, den Schreib-Lese Modus bzw.
die Modi fÅr Filesharing zu verÑndern.

!label F_GETLK
(!B)F_GETLK (5):(!b)
(!nl)
Der Parameter (!I)arg(!i) ist ein Zeiger auf eine (!link [flock-Struktur][flock, Fcntl]), in der
Informationen Åber einen Datei-Lock gespeichert sind. Falls ein Lock
existiert, wird er in die Struktur kopiert. Dabei wird in der Komponenten
l_pid die PID des sperrenden Prozesses vermerkt. Falls kein Lock existiert,
wird die Komponente l_type auf den Wert F_UNLCK gesetzt. FÅr den Fall, daû
der Lock von einem anderen Rechner im Netzwerk gehalten wird, wird die
Komponente l_pid auf einen vom NFS (Netzwerk-Filesystem) definierten Wert
gesetzt. FÅr diesen Wert gilt: 0x1000 <= l_pid <= 0xffff. Man denke daran,
daû normale PID's einen Wert kleiner als 1000 besitzen.

!label F_SETLK
(!B)F_SETLK (6):(!b)
(!nl)
Dieses Kommando setzt (l_type = F_RDLCK oder F_WRLCK) bzw. lîscht
(l_type = F_UNLCK) einen beratenden Lock auf eine Datei. Falls diese eine
FIFO-Queue (First-in-First-Out) ist, muû die gesamte Datei auf einmal
behandelt werden. FÅr den Fall, daû der Lock mit von anderen Prozessen
gesetzten Locks kollidiert, wird der Wert ELOCKED zurÅckgegeben. Wenn
versucht wird, einen nicht-existierenden Lock zu lîschen, wird der Wert
ENSLOCK zurÅckgeliefert. Zu beachten ist, daû sich Read-Locks Åberlappen
dÅrfen, Write-Locks hingegen nicht. Falls eine gelockte Datei geschlossen
wird, oder der entsprechende Prozess terminiert, werden alle gesetzten Locks
automatisch aufgehoben (d.h. zurÅckgesetzt).

!label F_SETLKW
(!B)F_SETLKW (7):(!b)
(!nl)
Analog F_SETLK, mit dem Unterschied, daû wenn der Lock mit solchen von
anderen Prozessen kollidiert, nicht ELOCKED zurÅckgeliefert wird, sondern
der sperrende Prozess suspendiert wird, bis das Locking vom anderen Prozess
aufgehoben wird.

!label F_STAT
!label FSTAT
(!B)F_STAT (0x4600):(!b)
(!nl)
Im Parameter (!I)arg(!i) wird ein Zeiger auf eine XATTR-Struktur
zurÅckgeliefert, so als ob ein Aufruf von Fxattr gemacht worden wÑre. Das
Kommando wird in MagiC ab Version 3.0 unterstÅtzt.

!label FIONREAD
(!B)FIONREAD (0x4601):(!b)
(!nl)
Im Parameter (!I)arg(!i) wird ein Zeiger auf einen Long-Wert zurÅckgegeben,
in dem die Anzahl der Bytes angegeben ist, die z.Zt. vom angegebenen
Datei-Handle gelesen werden kînnen, ohne daû der Prozess blockiert wird. Die
Angabe ist nicht zwingend korrekt, da die genaue Anzahl in einigen FÑllen
nur geschÑtzt werden kann. Das Kommando wird in MagiC ab Version 3.0
unterstÅtzt.

!label FIONWRITE
(!B)FIONWRITE (0x4602):(!b)
(!nl)
Analog FIONREAD, nur wird hier die Anzahl der Bytes, die z.Zt. geschrieben
werden kînnen, ausgegeben. Das Kommando wird in MagiC ab Version 3.0
unterstÅtzt.

!label FUTIME
(!B)FUTIME (0x4603):(!b)
(!nl)
z.Zt. keine Informationen bekannt.

!label FTRUNCATE
(!B)FTRUNCATE (0x4604):(!b)
(!nl)
Der Parameter (!I)arg(!i) ist ein Zeiger auf einen Long-Wert, der die neue
LÑnge der zu verkÅrzenden Datei enthÑlt. Das Kommando wird in MagiC ab
Version 3.0 unterstÅtzt.

!label FIOEXECPT
(!B)FIOEXECPT (0x4605):(!b)
(!nl)
Im Parameter (!I)arg(!i) wird ein Zeiger auf einen Long-Wert zurÅckgegeben,
in dem steht, ob sich die Datei in einem Ausnahmezustand befindet (1) oder
nicht (0).

!label Fcntl, Terminal-Kommandos fÅr
Die folgenden Kommandos sind auf alle Terminal-Devices wie die Console oder
ein Pseudo-Terminal anzuwenden:

!label TIOCGETP
(!B)TIOCGETP (0x5400):(!b)
(!nl)
Dieses Kommando gibt Åber den Parameter (!I)arg(!i) einen Zeiger auf eine
sgttyb-Struktur zurÅck, in der die Parameter des Terminals definiert sind.

!label TIOCSETN
(!B)TIOCSETN (0x5401):(!b)
(!nl)
öber dieses Kommando kann ein neue sgttyb-Struktur gesetzt werden, welche
die Parameter des Terminals festlegt.

!label TIOCGETC
(!B)TIOCGETC (0x5402):(!b)
(!nl)
Dieses Kommando liefert Åber den Parameter (!I)arg(!i) einen Zeiger auf eine
tchars-Struktur zurÅck, in welcher die Terminal-Kontrollzeichen definiert
sind.

!label TIOCSETC
(!B)TIOCSETC (0x5403):(!b)
(!nl)
öber dieses Kommando kînnen neue Terminal-Kontrollzeichen gesetzt werden.
Dazu Åbergibt man in (!I)arg(!i) einen Zeiger auf eine tchars-Struktur, in
welcher die Kontrollzeichen definiert sind. Wird ein Zeichen auf 0C gesetzt,
so wird die entsprechende Funktion gesperrt.

!label TIOCGLTC
(!B)TIOCGLTC (0x5404):(!b)
(!nl)
Dieses Kommando liefert Åber den Parameter (!I)arg(!i) einen Zeiger auf eine
ltchars-Struktur zurÅck, in welcher die erweiterten Terminal-Kontrollzeichen
definiert sind.

!label TIOCSLTC
(!B)TIOCSLTC (0x5405):(!b)
(!nl)
öber dieses Kommando kînnen neue erweiterte Terminal-Kontrollzeichen gesetzt
werden. Dazu Åbergibt man in (!I)arg(!i) einen Zeiger auf eine
ltchars-Struktur, in welcher die Kontrollzeichen definiert sind. Wird ein
Zeichen auf 0C gesetzt, so wird die entsprechende Funktion gesperrt.

!label TIOCGPGRP
(!B)TIOCGPGRP (0x5406):(!b)
(!nl)
Dieses Kommando liefert Åber den Parameter (!I)arg(!i) einen Zeiger auf die
Prozess-Gruppe des Terminals zurÅck.

!label TIOCSPGRP
(!B)TIOCSPGRP (0x5407):(!b)
(!nl)
öber dieses Kommando kann die Prozess-Gruppe des Terminals eingestellt
werden. Dazu wird Åber den Parameter (!I)arg(!i) ein Zeiger auf die
entsprechende Prozess-Gruppe Åbergeben. Sollten Prozesse aus anderen Gruppen
versuchen, auf dieses Terminal (lesend oder schreibend) zuzugreifen, so
werden ihnen Job-Control-Signale (SIGTSTP etc.) gesendet.

!label TIOCFLUSH
(!B)TIOCFLUSH (0x5408):(!b)
(!nl)
öber dieses Kommando kann die Art des Flushings spezifiziert werden. Dazu
wird Åber den Parameter (!I)arg(!i) ein Zeiger auf einen Long-Wert
Åbergeben, der die gewÅnschte Art beschreibt. Dabei gilt:
!begin_xlist !short [Bit-1 gesetzt]
!item [Wert]
Bedeutung
!item [~]
~
!item [0]
Ein- und Ausgabe flushen
!item [Bit-0 gesetzt]
Eingabe flushen
!item [Bit-1 gesetzt]
Ausgabe flushen
!end_xlist

!label TIOCSTOP
(!B)TIOCSTOP (0x5409):(!b)
(!nl)
Dieses Kommando unterbricht die Ausgabe auf das Terminal (Ñhnlich der
Fluûkontrolle per Control-S). Der Parameter (!I)arg(!i) ist in diesem
Zusammenhang ohne Bedeutung.

!label TIOCSTART
(!B)TIOCSTART (0x540a):(!b)
(!nl)
Dieses Kommando sorgt dafÅr, daû die Ausgabe des Terminals wieder
aufgenommen wird (Ñhnlich der Fluûkontrolle per Control-Q). Der Parameter
(!I)arg(!i) ist in diesem Zusammenhang ohne Bedeutung.

!label TIOCGWINSZ
(!B)TIOCGWINSZ (0x540b):(!b)
(!nl)
öber dieses Kommando kann die Fenstergrîûe fÅr ein Textfenster erfragt
werden. Dazu wird Åber den Parameter (!I)arg(!i) ein Zeiger auf eine
winsize-Struktur zurÅckgeliefert. Falls eine Komponente dieser Struktur den
Wert 0 besitzt, so bedeutet dies, daû der entsprechende Wert unbekannt ist.

!label TIOCSWINSZ
(!B)TIOCSWINSZ (0x540c):(!b)
(!nl)
öber dieses Kommando kann die Fenstergrîûe gesetzt werden. Dazu wird Åber
den Parameter (!I)arg(!i) ein Zeiger auf eine winsize-Struktur Åbergeben,
die die notwendigen Informationen enthÑlt. Zu beachten ist in diesem
Zusammenhang, daû der Kernel den Aufruf zwar bearbeitet, die AusfÅhrung aber
Window-Managern ÅberlÑût. Diese senden auch das Signal SIGWINCH, falls
notwendig.

!label TIOCGXKEY
(!B)TIOCGXKEY (0x540d):(!b)
(!nl)
Dieses Kommando ermittelt die Definition einer Funktions- bzw. Cursortaste.
Dazu wird Åber den Parameter (!I)arg(!i) ein Zeiger auf eine xkey-Struktur
Åbergeben. Die Komponente xk_num der Struktur muû dabei mit der gewÅnschten
Taste gefÅllt werden:
!begin_table [r l]
xk_num !! Taste
!hline
0-9 !! F1-F10
10-19 !! F11-F20 (Åber shift erreichbar)
20 !! Cursor hoch
21 !! Cursor runter
22 !! Cursor nach rechts
23 !! Cursor nach links
24 !! Help
25 !! Undo
26 !! Insert
27 !! Clr/Home
28 !! Shift + Cursor hoch
29 !! Shift + Cursor runter
30 !! Shift + Cursor nach rechts
31 !! Shift + Cursor nach links
!end_table
Der zu der Taste gehîrende String (es gilt die Konvention der Sprache C)
wird Åber die Komponente xk_def zurÅckgeliefert.

!label TIOCSXKEY
(!B)TIOCSXKEY (0x540e):(!b)
(!nl)
öber dieses Kommando kann die Definition einer Funktions- bzw. Cursortaste
gesetzt werden. Dazu Åbergibt man Åber den Parameter (!I)arg(!i) einen
Zeiger auf eine xkey-Struktur, in der die Komponenten xk_num und xk_def
bereits gesetzt sein mÅssen. Nach AusfÅhrung des Kommandos wird dann per
Fread der in xk_def angegebene String (statt ASCII-0) zurÅckgeliefert. Diese
öbersetzung findet jedoch nur statt, wenn das Programm per Pdomain in die
MiNT-Domain gesetzt wurde. Da der in xk_def Åbergebene String nullterminiert
sein muû, kînnen auf diese Art und Weise maximal 7 Zeichen Åbergeben werden.

!label TIOCIBAUD
(!B)TIOCIBAUD (0x5412):(!b)
(!nl)
öber dieses Kommando kann die Baudrate fÅr die Eingabe des Terminals
eingestellt werden. Dazu wird Åber den Parameter (!I)arg(!i) ein Zeiger auf
einen Long-Wert Åbergeben, in dem die Baudrate angegeben ist.

!label TIOCOBAUD
(!B)TIOCOBAUD (0x5413):(!b)
(!nl)
öber dieses Kommando kann die Baudrate fÅr die Ausgabe des Terminals
eingestellt werden. Dazu wird Åber den Parameter (!I)arg(!i) ein Zeiger auf
einen Long-Wert Åbergeben, in dem die Baudrate angegeben ist.

!label TIOCCBRK
(!B)TIOCCBRK (0x5414):(!b)
(!nl)
Dieses Kommando lîscht Bit-3 des TSR-Registers des Peripherie-Bausteins
MFP68901.

!label TIOCSBRK
(!B)TIOCSBRK (0x5415):(!b)
(!nl)
Dieses Kommando setzt Bit-3 des TSR-Registers des Peripherie-Bausteins
MFP68901. Dadurch wird ein Break gesendet, sobald das Senderegister leer
ist. Der Parameter (!I)arg(!i) ist in diesem Zusammenhang ohne Bedeutung.

!label TIOCGFLAGS
(!B)TIOCGFLAGS (0x5416):(!b)
(!nl)
Dieses Kommando gibt Åber den Parameter (!I)arg(!i) einen Zeiger auf die
Terminal-Kontrollflags zurÅck.

!label TIOCSFLAGS
(!B)TIOCSFLAGS (0x5417):(!b)
(!nl)
Dieses Kommando setzt neue Terminal-Kontrollflags, die Åber den Parameter
(!I)arg(!i) Åbergeben werden.

!label TIOCOUTQ
(!B)TIOCOUTQ (0x5418):(!b)
(!nl)
Dieses Kommando gibt in (!I)arg(!i) einen Zeiger auf einen Long-Wert zurÅck,
in dem die Anzahl der Bytes im Ausgabepuffer gespeichert ist.

!label TIOCSETP
(!B)TIOCSETP (0x5419):(!b)
(!nl)
Funktioniert analog zu TIOCSETN, mit dem Unterschied, daû (wenn das Terminal
TIOCOUTQ unterstÅtzt) die Funktion erst dann zurÅckkehrt, wenn der
Ausgabepuffer leer ist.

!label TCURSOFF
(!B)TCURSOFF (0x6300):(!b)
(!nl)
Dieses Kommando schaltet den Cursor des Terminals aus.

!label TCURSON
(!B)TCURSON (0x6301):(!b)
(!nl)
Dieses Kommando schaltet den Cursor des Terminals ein.

!label TCURSBLINK
(!B)TCURSBLINK (0x6302):(!b)
(!nl)
Dieses Kommando schaltet den Cursor des Terminals auf Blinken. Die Blinkrate
lÑût sich per TCURSSRATE einstellen.

!label TCURSSTEADY
(!B)TCURSSTEADY (0x6303):(!b)
(!nl)
Dieses Kommando schaltet das Cursor-Blinken des Terminals wieder aus.

!label TCURSSRATE
(!B)TCURSSRATE (0x6304):(!b)
(!nl)
Dieses Kommando setzt die Cursor-Blinkrate des Terminals. Dazu wird in
(!I)arg(!i) ein Zeiger auf einen Long-Wert Åbergeben, der angibt, nach
wievielen Vertical-Blanks der Cursor einmal invertiert werden soll.

!label TCURSGRATE
(!B)TCURSGRATE (0x6305):(!b)
(!nl)
Dieses Kommando ermittelt die Cursor-Blinkrate des Terminals. Diese wird in
einem Long-Wert zurÅckgegeben, auf den (!I)arg(!i) zeigt.

!label Fcntl, Prozess-Kommandos fÅr
Die folgenden Kommandos sind nur auf (als Dateien geîffnete) Prozesse
anwendbar. Um den eigenen Prozess als Datei zu îffnen, muû als Pfad fÅr
Fopen 'U:PROC\prozessname.-1' angegeben werden. Dabei wÑhlt die Extension
-1 den eigenen, und -2 den Parent-Prozess.

!label PBASEADDR
(!B)PBASEADDR (0x5002):(!b)
(!nl)
Im Parameter (!I)arg(!i) wird ein Zeiger auf die Adresse der Basepage, des
als Datei geîffneten Prozesses zurÅckgegeben. Das Kommando wird in MagiC ab
Version 3.0 unterstÅtzt.

!label PPROCADDDR
(!B)PPROCADDDR (0x5001):(!b)
(!nl)
Im Parameter (!I)arg(!i) wird ein Zeiger auf die Adresse des PCB
(Prozess-Control-Blocks) zurÅckgegeben.

!label PCTXTSIZE
(!B)PCTXTSIZE (0x5003):(!b)
(!nl)
Im Parameter (!I)arg(!i) wird ein Zeiger auf einen Long-Wert geliefert, in
dem die LÑnge des Prozess-Control-Blocks angegeben ist. Zwei dieser
Strukturen befinden sich im Speicher vor dem PCB, dessen Adresse mit
PPROCADDR erfragt werden kann. Die erste Struktur ist dabei fÅr den
aktuellen Prozesskontext verantwortlich, wÑhrend die zweite den
gespeicherten Kontext des letzten Systemaufrufs enthÑlt.

!label PSETFLAGS
(!B)PSETFLAGS (0x5004):(!b)
(!nl)
Dieses Kommando setzt die Programmflags (entsprechend denen im
Programmheader. In (!I)arg(!i) wird dazu ein Zeiger auf einen Long-Wert
Åbergeben, dessen untere 16 Bits die Programmflags darstellen.

!label PGETFLAGS
(!B)PGETFLAGS (0x5005):(!b)
(!nl)
Dieses Kommando ermittelt die aktuellen (!link [Programmflags][Die Programmflags]). öber den Parameter
(!I)arg(!i) wird dabei ein Zeiger auf diese Flags zurÅckgegeben.

!label PTRACESFLAGS
(!B)PTRACESFLAGS (0x5006):(!b)
(!nl)
Dieses Kommando setzt die Prozess-Tracing-Flags. Im Parameter (!I)arg(!i)
wird ein Zeiger auf einen Long-Wert Åbergeben, der die Flags reprÑsentiert:
!begin_xlist !short [P_ENABLE]
!item [P_ENABLE]
= 1 (Tracen einschalten)
!item [P_DOS]
= 2 (GEMDOS-Aufrufe tracen)
!item [P_BIOS]
= 4 (BIOS-Aufrufe tracen)
!item [P_XBIOS]
= 8 (XBIOS-Aufrufe tracen)
!end_xlist

!label PTRACEGFLAGS
(!B)PTRACEGFLAGS (0x5007):(!b)
(!nl)
Dieses Kommando ermittelt die aktuellen Prozess-Tracing Flags. öber den
Parameter (!I)arg(!i) wird ein Zeiger auf diese Flags zurÅckgegeben.
!begin_xlist !short [PTRACEFLOW]
!item [(!B)PTRACEGO(!b)]
(!B)(0x5008):(!b) (ab MC-68020 Prozessor)
!item [(!B)PTRACEFLOW(!b)]
(!B)(0x5009):(!b)
!item [(!B)PTRACESTEP(!b)]
(!B)(0x500a):(!b)
!item [(!B)PTRACE11(!b)]
(!B)(0x500b):(!b)
!end_xlist
Diese Funktionen sollen einmal das Tracen von Prozessen ermîglichen. Der zu
tracende Prozess muû sich dafÅr im Zustand 'suspendiert' befinden. Er wird
durch die Trace Funktion wieder aufgeweckt. Diese Funktionen sind z.Zt.
jedoch noch nicht implementiert.

!label PLOADINFO
(!B)PLOADINFO (0x500c):(!b)
(!nl)
Dieses Kommando gibt in (!I)arg(!i) einen Zeiger auf die ploadinfo Struktur
zurÅck, in der Programmname und Kommandozeile gespeichert sind.

!label PFSTAT
(!B)PFSTAT (0x500d):(!b)
(!nl)
Dieses Kommando entspricht FSTAT. Es ermittelt die erweiterten Attribute der
zum Prozess gehîrenden Programmdatei.

!label Fcntl, SharedMem-Kommandos fÅr
Die folgenden Kommandos sind nur auf Dateien anwendbar, die Shared Memory
reprÑsentieren:

!label SHMGETBLK
(!B)SHMGETBLK (0x4d00):(!b)
(!nl)
Dieses Kommando liefert die Adresse eines per SHMSETBLK allozierten
Speicherblocks zurÅck (bzw. einen Nullzeiger bei Fehlern). Aus
KompatibilitÑtsgrÅnden muû der Parameter (!I)arg(!i) auf den Wert 0 gesetzt
werden. (!B)Hinweis:(!b) Verschiedene Prozesse kînnen den Speicherblock an
unterschiedlichen Stellen in ihrem Adressraum sehen. Aus diesem Grund darf
ein Shared-Memory-Bereich keine absoluten Zeiger auf Daten enthalten! Das
Kommando wird in MagiC ab Version 3.0 unterstÅtzt.

!label SHMSETBLK
(!B)SHMSETBLK (0x4d01):(!b)
(!nl)
Im Parameter (!I)arg(!i) wird ein Zeiger auf einen Speicherblock Åbergeben,
welcher vorher per Malloc/Mxalloc alloziert wurde. Der Speicher wird nun
unter dem Dateinamen der Datei mit Handle (!I)fh(!i) zum Sharing angeboten.
Die Datei muû dazu im Unterverzeichnis U:\SHM angelegt werden. Der Block
wird derart markiert, daû er nicht beim Beenden des Prozesses freigegeben
wird. Die LÑnge wird ermittelt und sowohl fÅr die geîffnete Datei verwendet,
als auch in das Verzeichnis eingetragen. UngÅltige Blockadressen fÅhren zum
Fehlercode EIMBA oder zu einem Bus- oder Adreûfehler. Das Kommando wird in
MagiC ab Version 3.0 unterstÅtzt.

!label Fcntl, CD-ROM-Kommandos fÅr
!label CD-ROM-Funktionen
Die folgenden Kommandos sind im Zusammenhang mit CD-ROM's interessant:

!label CDROMREADOFFSET
(!B)CDROMREADOFFSET (0x4300):(!b)
(!nl)
Dieses Kommando ermittelt die Blocknummer des ersten Sektors der letzten
Session einer Multi-Session-CD. Der Parameter (!I)arg(!i) enthÑlt nach dem
Aufruf diese Blocknummer.

!label CDROMPAUSE
(!B)CDROMPAUSE (0x4301):(!b)
(!nl)
Dieses Kommando veranlaût ein CD-ROM beim Abspielen einer Audio-CD in den
Status Pause zu treten.

!label CDROMRESUME
(!B)CDROMRESUME (0x4302):(!b)
(!nl)
Dieses Kommando veranlaût ein CD-ROM das Abspielen einer Audio-CD
fortzusetzen (Pause wird aufgehoben).

!label CDROMPLAYMSF
(!B)CDROMPLAYMSF (0x4303):(!b)
(!nl)
Dieses Kommando startet eine Audio-Wiedergabe. Der Parameter (!I)arg(!i) ist
ein Zeiger auf eine cdrom_msf-Struktur, in die Anfangs- und Endzeit in
MSF-Notation einzutragen sind.

!label CDROMPLAYTRKIND
(!B)CDROMPLAYTRKIND (0x4304):(!b)
(!nl)
Dieses Kommando startet eine Audio-Wiedergabe. Der Parameter (!I)arg(!i) ist
ein Zeiger auf eine cdrom_ti-Struktur, in die Start- und Endposition in
Track/Index-Schreibweise einzutragen sind. Bei den meisten Audio-CD's aus
dem POP Bereich sind die Tracks nicht weiter eingeteilt. Viele Klassik-CD's
haben aber auch innerhalb der Tracks noch eine feinere Einstellung in
Indices. (!B)Achtung:(!b) Nicht jedes CD-ROM kann gezielt Indizes ungleich
Eins ansteuern!

!label CDROMREADTOCHDR
(!B)CDROMREADTOCHDR (0x4305):(!b)
(!nl)
Dieses Kommando erlaubt es, Informationen Åber den Aufbau einer CD zu
ermitteln. Der Parameter (!I)arg(!i) ist ein Zeiger auf eine
cdrom_tochdr-Struktur, in welche der erste und letzte Track der CD
eingetragen werden.

!label CDROMREADTOCENTRY
(!B)CDROMREADTOCENTRY (0x4306):(!b)
(!nl)
Dieses Kommando erlaubt es, Informationen Åber den Aufbau einer CD zu
ermitteln. Der Parameter (!I)arg(!i) ist ein Zeiger auf eine
cdrom_tocentry-Struktur, in welche die gewÅnschten Informationen eingetragen
werden.

!label CDROMSTOP
(!B)CDROMSTOP (0x4307):(!b)
(!nl)
Dieses Kommando stoppt das entsprechende Laufwerk.

!label CDROMSTART
(!B)CDROMSTART (0x4308):(!b)
(!nl)
Dieses Kommando startet das entsprechende Laufwerk, und zieht ggfs. die
Schublade wieder ein.

!label CDROMEJECT
(!B)CDROMEJECT (0x4309):(!b)
(!nl)
Dieses Kommando sorgt fÅr das Ausfahren der Schublade des entsprechenden
Laufwerkes.

!label CDROMVOLCTRL
(!B)CDROMVOLCTRL (0x430a):(!b)
(!nl)
Dieses Kommando erlaubt es, die LautstÑrke und Kanalzuordnungen der
einzelnen Audio-KanÑle zu verÑndern. Der Parameter (!I)arg(!i) ist ein
Zeiger auf eine cdrom_volctrl-Struktur. Das Kommando ist zum entsprechenden
SunOS-Aufruf kompatibel. (!B)Achtung:(!b) Das Verstellen der LautstÑrke ist
nicht bei allen GerÑten mîglich!

!label CDROMSUBCHNL
(!B)CDROMSUBCHNL (0x430b):(!b)
(!nl)
Dieses Kommando ermittelt die aktuellen Positionsdaten, sowie den
Audio-Status. Der Parameter (!I)arg(!i) ist ein Zeiger auf eine
cdrom_subchnl-Struktur.

!label CDROMREADMODE2
(!B)CDROMREADMODE2 (0x430c):(!b)
(!nl)
Dieses Kommando ermîglicht das Lesen von Modus-2 Sektoren. Solche Sektoren
werden bei XA-CDs (Beispiel: Photo-CD ohne Fehlerkorrektur oder Video-CD)
verwendet und enthalten 2336 Bytes. Der Parameter (!I)arg(!i) ist ein Zeiger
auf eine cdrom_read Struktur. (!B)Achtung:(!b) Nicht alle GerÑte kînnen
diese Sektortypen lesen, und nicht alle Treiber bieten diese Funktion an.

!label CDROMREADMODE1
(!B)CDROMREADMODE1 (0x430d):(!b)
(!nl)
Dieses Kommando ermîglicht das Lesen von Modus-1 Sektoren. Solche Sektoren
sind 2048 Bytes groû, und werden auf normalen CD-ROMs benutzt. Der Parameter
(!I)arg(!i) ist ein Zeiger auf eine cdrom_read-Struktur. (!B)Achtung:(!b)
Nicht alle GerÑte kînnen diese Sektortypen lesen, und nicht alle Treiber
bieten diese Funktion an.

!label CDROMPREVENTREMOVAL
(!B)CDROMPREVENTREMOVAL (0x430e):(!b)
(!nl)
Dieses Kommando sperrt die Auswurffunktion des entsprechenden CD-ROMs. Dies
kann z.B. nÅtzlich sein, wenn das GerÑt an einem îffentlichen Ort steht, und
man dem CD-Klau vorbeugen will.

!label CDROMALLOWREMOVAL
(!B)CDROMALLOWRMOVAL (0x430f):(!b)
(!nl)
Dieses Kommando gibt den Auswurf des entsprechenden CD-ROMs wieder frei.

!label CDROMAUDIOCTRL
(!B)CDROMAUDIOCTRL (0x4310):(!b)
(!nl)
Diese Kommando erlaubt es, die LautstÑrke und Kanalzuordnungen der
einzelnen Audio-KanÑle zu verÑndern. Der Parameter (!I)arg(!i) ist ein
Zeiger auf eine cdrom_audioctrl-Struktur. Indem man die Komponente set
dieser Struktur auf den Wert Null setzt, kînnen die aktuellen Einstellungen
erfragt werden. (!B)Achtung:(!b) Das Verstellen der LautstÑrke ist nicht bei
allen GerÑten mîglich!

!label CDROMREADDA
(!B)CDROMREADDA (0x4311):(!b)
(!nl)
Dieses Kommando ermîglicht das Lesen von Digital-Audio (DA) Sektoren. Solche
Sektoren sind 2352 Bytes groû, und enthalten pro Sektor 588 Samples im
16-Bit-Stereo-PCM Format. Der Parameter (!I)arg(!i) ist ein Zeiger auf eine
cdrom_read Struktur. (!B)Achtung:(!b) Nicht alle GerÑte kînnen diese
Sektortypen lesen, und nicht alle Treiber bieten diese Funktion an.

!label CDROMGETMCN
(!B)CDROMGETMCN (0x4313):(!b)
(!nl)
Dieses Kommando ermittelt die Media Catalog Number, die theoretisch benutzt
werden kann, um eine CD einwandfrei zu identifizieren. Leider ist diese
Information auf den allerwenigsten CDs vorhanden. Der Parameter (!I)arg(!i)
ist ein Zeiger auf eine cdrom_mcn-Struktur.

!label CDROMGETTISRC
(!B)CDROMGETTISRC (0x4314):(!b)
(!nl)
Dieses Kommando ermittelt den Track-International-Standard Recording-Code,
der eine eindeutige Kennzeichnung fÅr einzelne Tracks darstellen soll. Der
Parameter (!I)arg(!i) ist ein Zeiger auf eine cdrom_tisrc-Struktur.

(!B)Achtung:(!b) Die Funktion Fcntl ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in MagiC ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EINVFN :]
!item [>= 0 :]
kein Fehler aufgetreten (Abweichungen s.o.)
!item [EIHNDL :]
ungÅltiges Datei-Handle.
!item [EINVFN :]
Kommando kann mit dem Handle (!I)fh(!i) nicht ausgefÅhrt werden.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fdup ~ Flock ~ Fopen ~ Fxattr ~  Pgetpgrp ~
        Psetpgrp ~  Metaioctl ~  CD-ROM Definitionen
(!ende_liste)


!begin_node Bindings fÅr Fcntl
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fcntl ( WORD fh, LONG arg, WORD cmd );
!item [Assembler:]
!begin_verbatim
move.w    cmd,-(sp)    ; Offset 8
move.l    arg,-(sp)    ; Offset 4
move.w    fh,-(sp)     ; Offset 2
move.w    #260,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fcreate
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile createÆ - Datei anlegen.
!item [Gemdosnummer:]
60
!item [Binding:]
(!link [Bindings fÅr Fcreate] [Bindings fÅr Fcreate])
!item [Beschreibung:]
Die GEMDOS-Routine Fcreate legt eine neue Datei an. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fname]
Zeiger auf den Dateinamen
!item [attr]
Dateiattribute
!begin_xlist !short
!item [Bit-0:]
Datei ist schreibgeschÅtzt
!item [Bit-1:]
Datei ist versteckt
!item [Bit-2:]
Systemdatei
!item [Bit-3:]
Diskettenname
!end_xlist
!end_xlist
(!B)Hinweis:(!b) Im Netzwerk setzt das Erzeugen einer Datei die
ExclusivitÑt. Ob das zugrundeliegende (!nolink [GEMDOS]) netzwerkfÑhig ist, kann Åber
den Cookie _FLK ermittelt werden.

(!B)Anmerkung zu (!nolink [MagiC]):(!b) Ist Bit-3 in attr gesetzt, wird die XFS-Funktion
xfs_wlabel aufgerufen. Wenn diese Funktion ohne Fehler ausgefÅhrt werden
kann, wird als RÅckgabewert 0x0000fffc zurÅckgegeben. Dies entspricht einem
Handle fÅr die Datei NUL: bzw. U:\DEV\NULL. Dieses Feature ist jedoch nur
noch aus KompatibilitÑtsgrÅnden vorhanden; ab MagiC-3 sollte besser auf die
Funktion Dwritelabel zurÅckgegriffen werden.

Die angegebenen Attribute existieren nur unter DOS-Dateisystemen und werden
von anderen Dateisystemen ignoriert oder simuliert. Beim Macintosh
Dateisystem (HFS) wird z.B. nur Bit-0 von (!I)attr(!i) unterstÅtzt.

Symbolische Links werden Åbrigens von dieser Funktion dereferenziert, d.h.
wenn die Datei bereits als symb. Link existiert, wird die von diesem Link
referenzierte Datei auf die LÑnge Null gesetzt.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EPTHNF :]
!item [EPTHNF :]
Zugriffspfad ist unkorrekt
!item [ENHNDL :]
keine freien Dateihandles mehr
!item [EACCDN :]
kein Schreibzugriff mîglich
!item [sonst :]
Kennung der Datei
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fopen ~  (!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Fcreate
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fcreate ( CONST BYTE *fname, WORD attr );
!item [Assembler:]
!begin_verbatim
move.w    attr,-(sp)   ; Offset 6
pea       fname        ; Offset 2
move.w    #60,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fdatime
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile date and timeÆ - Uhrzeit und Datum einer Datei ermitteln oder setzen.
!item [Gemdosnummer:]
87
!item [Binding:]
(!link [Bindings fÅr Fdatime] [Bindings fÅr Fdatime])
!item [Beschreibung:]
Die GEMDOS-Routine Fdatime liest bzw. setzt Datum und Uhrzeit der Erstellung
einer Datei. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [timeptr]
Zeiger auf aufnehmende Struktur
!item [handle]
Dateikennung
!item [wflag]
!begin_xlist !short
!item [0 =]
Werte abfragen
!item [1 =]
Werte setzen
!end_xlist
!end_xlist
(!B)Hinweis:(!b) Aufgrund einiger Fehler in Ñlteren Versionen des (!nolink [GEMDOS]),
sollte die Funktion wie folgt angewendet werden:
!begin_itemize
!item Datei îffnen
!item Fdatime aufrufen
!item Datei schlieûen
!end_itemize
!item [Ergebnis:]
Die Funktion liefert kein direktes Ergebnis.
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Tgettime ~  Tsettime
(!ende_liste)


!begin_node Bindings fÅr Fdatime
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
VOID Fdatime ( DOSTIME *timeptr, WORD handle, WORD wflag );
!item [Assembler:]
!begin_verbatim
move.w    wflag,-(sp)   ; Offset 8
move.w    handle,-(sp)  ; Offset 6
pea       timeptr       ; Offset 2
move.w    #87,-(sp)     ; Offset 0
trap      #1            ; GEMDOS aufrufen
lea       $A(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fdelete
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile deleteÆ - Datei lîschen.
!item [Gemdosnummer:]
65
!item [Binding:]
(!link [Bindings fÅr Fdelete] [Bindings fÅr Fdelete])
!item [Beschreibung:]
Die GEMDOS-Routine Fdelete lîscht die mit (!I)fname(!i) bezeichnete Datei.

(!B)Hinweis:(!b) Die Funktion sollte nicht auf geîffnete Dateien angewendet
werden. Ab MagiC-4 funktioniert das Lîschen auch bei Dateien mit den
Attributen 'Hidden' und 'System'. In (!nolink [MagiC]) werden ferner (!I)keine(!i)
symbolischen Links dereferenziert, d.h. es wird der Link gelîscht,
(!I)nicht(!i) die Datei oder der Ordner, auf die der Link verweist.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EACCDN]
!item [Wert]
Bedeutung
!item [~]
~
!item [E_OK]
kein Fehler aufgetreten
!item [EFILNF]
Datei nicht gefunden
!item [EACCDN]
Zugriff verweigert
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fcreate
(!ende_liste)


!begin_node Bindings fÅr Fdelete
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fdelete ( CONST BYTE *fname );
!item [Assembler:]
!begin_verbatim
pea       fname        ; Offset 2
move.w    #65,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Ffchmod
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFfchmodÆ - changes access permissions for an open file.
!item [Gemdosnummer:]
258 (0x0102)
!item [Binding:]
(!link [Bindings fÅr Ffchmod] [Bindings fÅr Ffchmod])
!item [Beschreibung:]


!item [Ergebnis:]
Returns E_OK on success or a negative GEMDOS error code otherwise.

!item [VerfÅgbar:] Available as of FreeMiNT version 1.15.2

!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])

!item [Querverweis:] Ffchown ~ Fchmod
(!ende_liste)


!begin_node Bindings fÅr Ffchmod
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Ffchmod ( WORD fd, WORD mode);
!item [Assembler:]
!begin_verbatim
move.w    mode,-(sp)   ; Offset 4
move.w    fd,-(sp)     ; Offset 2
move.w    #258,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node




!begin_node Ffchown
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFfchownÆ - changes ownership of an open file to uid and gid respectively.
!item [Gemdosnummer:]
257 (0x0101)
!item [Binding:]
(!link [Bindings fÅr Ffchown] [Bindings fÅr Ffchown])
!item [Beschreibung:]
This function changes ownership of an open file to 
uid and gid respectively.

A non privileged process can only 
change the ownership of a file that is owned by this user to the 
effective group id of the process or one of its supplementary groups.

!item [Ergebnis:]
Returns E_OK on success or a negative GEMDOS error code otherwise.

!item [VerfÅgbar:] Available as of FreeMiNT version 1.15.2

!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])

!item [Querverweis:] Ffchmod ~ Fchown
(!ende_liste)


!begin_node Bindings fÅr Ffchown
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Ffchown ( WORD fd, WORD uid, WORD gid );
!item [Assembler:]
!begin_verbatim
move.w    gid,-(sp)    ; Offset 6
move.w    uid,-(sp)    ; Offset 4
move.w    fd,-(sp)     ; Offset 2
move.w    #257,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node




!begin_node Fdup
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile duplicateÆ - Datei-Handle duplizieren.
!item [Gemdosnummer:]
69
!item [Binding:]
(!link [Bindings fÅr Fdup] [Bindings fÅr Fdup])
!item [Beschreibung:]
Die GEMDOS-Routine Fdup erzeugt fÅr einen Standardkanal eine neue Kennung.
Es gilt:
!begin_xlist !short [handle]
!item [handle]
Bedeutung
!item [~]
~
!item [0]
Tastatur (stdin)
!item [1]
Bildschirm (stdout)
!item [2]
serielle Schnittstelle (stdaux)
!item [3]
parallele Schnittstelle (stdprn)
!end_xlist
(!B)Hinweis:(!b) In allen bekannten (!nolink [GEMDOS])-Versionen (bis einschlieûlich
0.19) treten Fehler auf, wenn nach einem Fdup, ein Programm per Pexec
gestartet wird. Ab MagiC-4 kann man mit Hilfe dieser Funktion auch die
GerÑtedateien -1,-2, -3 und -4 ermitteln.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [ENHNDL :]
!item [ENHNDL :]
keine Kennung mehr frei
!item [EIHNDL :]
falsche Kennung
!item [sonst :]
die gewÅnschte neue Kennung
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fforce
(!ende_liste)


!begin_node Bindings fÅr Fdup
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fdup ( WORD handle );
!item [Assembler:]
!begin_verbatim
move.w    handle,-(sp)  ; Offset 2
move.w    #69,-(sp)     ; Offset 0
trap      #1            ; GEMDOS aufrufen
addq.l    #4,sp         ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fforce
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile forceÆ - Standard-Datei umleiten.
!item [Gemdosnummer:]
70
!item [Binding:]
(!link [Bindings fÅr Fforce] [Bindings fÅr Fforce])
!item [Beschreibung:]
Die GEMDOS-Routine Fforce lenkt einen Standardkanal auf einen beliebigen
anderen Kanal um. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [stdh]
Umzuleitender Kanal
!begin_xlist !short
!item [0 =]
Tastatur
!item [1 =]
Bildschirm
!item [2 =]
serielle Schnittstelle
!item [3 =]
parallele Schnittstelle
!end_xlist
!item [nonstdh]
Nummer des ersetzenden Kanals
!end_xlist
(!B)Hinweis:(!b) Ab MagiC-4 kînnen Åber diese Funktion auch die
GerÑtedateien -1,-2 und -3 (systemglobal) umgelenkt werden. Das NULL-Device
(-4) darf allerdings (!I)nicht(!i) umgeleitet werden.

Um etwa Bildschirmausgaben auf einen Drucker umzuleiten kann eine
Konstruktion wie Fforce(1, Fdup(3)) benutzt werden.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EIHNDL :]
!item [E_OK :]
kein Fehler aufgetreten
!item [EIHNDL :]
falsche Kennung
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fdup   ~   (!link [Verzeichnis U:\DEV][Das Verzeichnis U:\DEV])
(!ende_liste)


!begin_node Bindings fÅr Fforce
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fforce ( WORD stdh, WORD nonstdh );
!item [Assembler:]
!begin_verbatim
move.w    nonstdh,-(sp)  ; Offset 4
move.w    stdh,-(sp)     ; Offset 2
move.w    #70,-(sp)      ; Offset 0
trap      #1             ; GEMDOS aufrufen
addq.l    #6,sp          ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fgetchar
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFgetcharÆ - Zeichen aus einer Datei lesen.
!item [Gemdosnummer:]
263
!item [Binding:]
(!link [Bindings fÅr Fgetchar] [Bindings fÅr Fgetchar])
!item [Beschreibung:]
Die Funktion liest ein Zeichen aus der Datei mit der Handle (!I)fh(!i). Der
Parameter (!I)mode(!i) ist nur dann von Interesse, wenn die geîffnete Datei
ein (Pseudo-)Terminal ist. FÅr diesen Fall gelten die folgenden Werte:
!begin_xlist !short [mode]
!item [mode]
Bedeutung
!item [~]
~
!item [0]
(!B)Raw-Mode(!b)
(!nl)
keine Auswertung von Kontrollzeichen.
!item [1]
(!B)Cooked-Mode(!b)
(!nl)
spezielle Kontrollzeichen (Control-C, Control-Z) werden gesucht und ggfs.
interpretiert. Das selbe gilt fÅr die Fluûkontrolle (Control-S, Control-Q).
!item [2]
(!B)Echo-Mode(!b)
(!nl)
Gelesene Zeichen werden auf dem Terminal ausgegeben.
!end_xlist
Der ASCII-Wert des gelesenen Zeichens wird im Low-Byte des
Funktionsergebnisses abgelegt. FÅr den Fall, daû die Datei ein
(Pseudo-)Terminal ist, werden Scan-Code und Shift-Status wie bei Bconin
zurÅckgeliefert.

Die einzelnen Modi von (!I)mode(!i) kînnen natÅrlich auch durch eine
ODER-Operation verknÅpft werden.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EIHNDL :]
!item [>= 0 :]
kein Fehler, sondern das gelesene Zeichen.
!item [0xff1a :]
End-of-File (EOF) wurde erkannt.
!item [EIHNDL :]
ungÅltiges Datei-Handle.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Bconin ~  Cconin ~  Cauxin ~  Fputchar ~  Fread
(!ende_liste)


!begin_node Bindings fÅr Fgetchar
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fgetchar ( WORD fh, WORD mode );
!item [Assembler:]
!begin_verbatim
move.w    mode,-(sp)   ; Offset 4
move.w    fh,-(sp)     ; Offset 2
move.w    #263,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fgetdta
(!begin_liste) [Beschreibung:]
!item [Name:]
Øget disk transfer addressÆ - ermittelt den öbertragungsbereich fÅr
Diskettenoperationen.
!item [Gemdosnummer:]
47
!item [Binding:]
(!link [Bindings fÅr Fgetdta] [Bindings fÅr Fgetdta])
!item [Beschreibung:]
Die GEMDOS-Routine Fgetdta ermittelt die Adresse eines Buffers fÅr Fsfirst
und Fsnext.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis die Adresse der Disk-Transfer-Area.
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fsetdta ~  Fsfirst ~  Fsnext
(!ende_liste)


!begin_node Bindings fÅr Fgetdta
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
DTA *Fgetdta ( VOID );
!item [Assembler:]
!begin_verbatim
move.w    #47,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Finstat
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFinstatÆ - Eingabestatus fÅr ein File festlegen.
!item [Gemdosnummer:]
261
!item [Binding:]
(!link [Bindings fÅr Finstat] [Bindings fÅr Finstat])
!item [Beschreibung:]
Die Funktion gibt die Anzahl der Bytes zurÅck, die aus der Datei mit dem
Handle (!I)fh(!i) mindestens ohne zu Warten gelesen werden kînnen.

Wenn die Anzahl der Bytes nicht genau angegeben werden kann, wird der Wert 1
zurÅckgeliefert.

(!B)Hinweis:(!b) In MagiC versucht der Kernel zunÑchst, den Aufruf auf Fcntl
(FIONREAD) zurÅckzufÅhren. Wenn diese Subfunktion von dev_ioctl nicht
existiert (d.h. der Dateitreiber liefert EINVFN), wird dev_stat aufgerufen.
In diesem Fall kann nur die Aussage getroffen werden "Zeichen liegt an"
(RÅckgabe == 1) bzw. "kein Zeichen liegt an" (RÅckgabe == 0). FAT-Dateien
und Shared Memory liefern die tatsÑchliche DateilÑnge minus der aktuellen
Position. Pipes liefern die Anzahl der vorhandenen Bytes im Block.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in (!nolink [MagiC]) ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EIHNDL :]
!item [>= 0 :]
kein Fehler aufgetreten (Anzahl der Bytes).
!item [EIHNDL :]
ungÅltiges Datei-Handle.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Cauxis ~  Cconis ~  Fcntl ~  Foutstat
(!ende_liste)


!begin_node Bindings fÅr Finstat
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Finstat ( WORD fh );
!item [Assembler:]
!begin_verbatim
move.w    fh,-(sp)     ; Offset 2
move.w    #261,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Flink
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFlinkÆ - erzeugt einen neuen (Hard-)Link auf ein File.
!item [Gemdosnummer:]
301
!item [Binding:]
(!link [Bindings fÅr Flink] [Bindings fÅr Flink])
!item [Beschreibung:]
Die Funktion erzeugt einen neuen Namen ((!I)newname(!i)) fÅr die Datei mit
dem Namen (!I)oldname(!i). Die Datei kann anschlieûend unter beiden Namen
angesprochen werden, und das Lîschen (per Fdelete) eines Namens hat keinen
Einfluû auf den anderen.

Zu beachten ist, daû sich (!I)oldname(!i) und (!I)newname(!i) auf demselben
physikalischen Laufwerk befinden mÅssen, und nicht alle Filesysteme die
Mîglichkeit bieten, Links zu setzen.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in MagiC ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EINVFN :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EINVFN :]
das Filesystem unterstÅtzt keine Hard-Links.
!item [EFILNF :]
die Datei (!I)oldname(!i) existiert nicht.
!item [EXDEF :]
~
!item [ENSAME :]
die Dateien (!I)oldname(!i)/(!I)newname(!i) befinden sich nicht auf dem
gleichen physikalischen Laufwerk.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Frename ~  Fsymlink ~
           (!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Flink
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Flink ( BYTE *oldname, BYTE *newname );
!item [Assembler:]
!begin_verbatim
pea       newname      ; Offset 6
pea       oldname      ; Offset 2
move.w    #301,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Flock
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile record lockingÆ - Teile einer Datei sperren oder freigeben.
!item [Gemdosnummer:]
92
!item [Binding:]
(!link [Bindings fÅr Flock ] [Bindings fÅr Flock ])
!item [Beschreibung:]
Die GEMDOS-Routine Flock dient dazu, Teile von Dateien gegen den Zugriff von
anderen Prozessen zu schÅtzen. Es gilt:
!begin_xlist !short[Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Dateikennung
!item [mode]
!begin_xlist !short
!item [0 =]
Blockierung setzen
!item [1 =]
Blockierung aufheben
!end_xlist
!item [start]
Startposition in der Datei
!item [length]
Anzahl der betroffenen Bytes
!end_xlist
(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Es sollte insbesondere beachtet werden, daû Flock
nicht auf (!I)allen(!i) installierten Dateisystemen zur VerfÅgung stehen
muss.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [ENSLOCK :]
!item [E_OK :]
kein Fehler aufgetreten
!item [ELOCKED :]
Blockierung bereits vorhanden
!item [ENSLOCK :]
Blockierung existiert nicht
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fcreate ~ Fopen ~ Fclose ~ Fdelete ~ Ptermres ~ F_SETLK
(!ende_liste)


!begin_node Bindings fÅr Flock
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Flock ( WORD handle, WORD mode, LONG start, LONG length );
!item [Assembler:]
!begin_verbatim
move.l    length,-(sp)  ; Offset 10
move.l    start,-(sp)   ; Offset  6
move.w    mode,-(sp)    ; Offset  4
move.w    handle,-(sp)  ; Offset  2
move.w    #92,-(sp)     ; Offset  0
trap      #1            ; GEMDOS aufrufen
lea       $E(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fmidipipe
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFmidipipeÆ - MIDI Ein/Ausgabe umlenken.
!item [Gemdosnummer:]
294
!item [Binding:]
(!link [Bindings fÅr Fmidipipe] [Bindings fÅr Fmidipipe])
!item [Beschreibung:]
Die Funktion verÑndert die GEMDOS-Handles fÅr MIDI Ein- und Ausgabe fÅr den
Prozeû mit der Kennung (!I)pid(!i). Die Parameter (!I)in(!i) bzw.
(!I)out(!i) beschreiben die (!nolink [GEMDOS])-Handles, welche fÅr den angegebenen
Prozeû die MIDI-Eingabe bzw. -ausgabe Åbernehmen.

Im Fall (!I)pid(!i) = 0, wird der aktuelle Prozeû benutzt. Dann ist der
Funktionsaufruf Ñquivalent zu den folgenden beiden Zeilen:
!begin_verbatim
Fforce (-4, in);
Fforce (-5, out);
!end_verbatim
(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EIHNDL :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EFILNF :]
der Prozeû (!I)pid(!i) wurde nicht gefunden.
!item [EACCDN :]
(!I)in(!i)/(!I)out(!i) sind nicht zum Lesen bzw. Schreiben geîffnet.
!item [EIHNDL :]
(!I)in(!i)/(!I)out(!i) ist kein gÅltiges Handle.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fdup ~  Fforce ~  (!link [Test auf Pipes][Pipes, Test auf])
(!ende_liste)


!begin_node Bindings fÅr Fmidipipe
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fmidipipe ( WORD pid, WORD in, WORD out );
!item [Assembler:]
!begin_verbatim
move.w    out,-(sp)    ; Offset 6
move.w    in,-(sp)     ; Offset 4
move.w    pid,-(sp)    ; Offset 2
move.w    #294,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fopen
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile openÆ - îffnet eine Datei.
!item [Gemdosnummer:]
61
!item [Binding:]
(!link [Bindings fÅr Fopen] [Bindings fÅr Fopen])
!item [Beschreibung:]
Die GEMDOS-Routine Fopen dient dazu, Dateien zu îffnen. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fname]
Name der zu îffnenden Datei
!item [mode]
Modus als Bitvektor
!begin_xlist !short [Bit-0..2]
!item [Bit-0..2]
= (!B)Zugriffsmodus(!b)
!begin_xlist !short
!item [0 =]
nur lesen
!item [1 =]
nur schreiben
!item [2 =]
lesen und schreiben
!end_xlist
!item [Bit-3]
= reserviert (auf Null setzen)
!item [Bit-4..6]
= Sharing-Modus
!item [Bit-7]
= Vererbungsflag
!end_xlist

Die Bits 3..7 stehen nur bei einem (!nolink [GEMDOS]) mit Filelocking Erweiterungen
(Cookie _FLK testen) zu VerfÅgung. Das Vererbungsflag bestimmt, ob vom
Prozess gestartete Childs das entsprechende Handle erben. Der Sharing-Modus
legt fest, auf welche Art andere Prozesse auf die Datei zugreifen dÅrfen,
wenn sie erst einmal geîffnet ist. Es gilt:
!begin_xlist !short [Sharing]
!item [Sharing]
Bedeutung
!item [~]
~
!item [0]
KompatibilitÑtsmodus (wird von den Programmen benutzt, die nichts von den
Netzwerkerweiterungen wissen).
!item [1]
Lesen und Schreiben verbieten (die Datei darf kein zweites Mal geîffnet
werden).
!item [2]
Schreiben verbieten (die Datei darf nur noch zum Lesen geîffnet werden).
!item [3]
Lesen verbieten (die Datei darf nur noch zum Schreiben geîffnet werden).
!item [4]
Alles ist erlaubt.
!end_xlist
!end_xlist
(!B)Achtung:(!b) Das File-Locking kann beratend implementiert sein, d.h. daû
es mîglich sein kann, auf Bereiche trotz eines vorgenommenen Lockings
zuzugreifen. Programme, die File-Locking unterstÅtzen, sollten daher
(!I)vor(!i) einem Zugriff selbst einen Lock setzen und diesen unmittelbar
(!I)nach(!i) dem Zugriff wieder freigeben. So ist garantiert, daû etwaige
Locks anderer Seiten respektiert werden.

In MiNT und MagiC stehen darÅber hinaus die folgenden Modi zur VerfÅgung:
!begin_xlist !short [0x000]
!item [mode]
Bedeutung
!item [~]
~
!item [0x080]
reserviert fÅr MiNT.
!item [0x100]
Datei bei I/O nicht blockieren.
!item [0x200]
Datei erstellen, falls diese nicht exist.
!item [0x400]
existierende Datei auf Null-LÑnge setzen.
!item [0x800]
existierende Datei nicht îffnen.
!end_xlist
(!B)Hinweis:(!b) FÅr einige GerÑte existieren bereits Standardkanal-Nummern,
so daû es nicht notwendig ist, Fopen aufzurufen. Im einzelnen:
!begin_xlist !short [Kanal]
!item [Kanal]
Bedeutung
!item [~]
~
!item [0]
Tastatur (stdin)
!item [1]
Bildschirm (stdout)
!item [2]
serielle Schnittstelle (stdaux)
!item [3]
parallele Schnittstelle (stdin)
!end_xlist
Lt. Atari sind die Standardkanal-Nummern 4 und 5 reserviert, so daû normale
Kanalnummern fÅr Dateien erst bei 6 beginnen.

DarÅber hinaus lassen sich auch die folgenden zeichenorientierten GerÑte
îffnen:
!begin_itemize !short
!item PRN: (parallele Schnittstelle, -3)
!item AUX: (serielle Schnittstelle, -2)
!item CON: (Konsole, -1)
!end_itemize
Symbolische Links werden dieser Funktion automatisch dereferenziert, d.h.
wenn die Datei bereits als symbolischer Link existiert, wird die davon
referenzierte Datei geîffnet bzw., je nach Modus, auf die LÑnge Null
gebracht.
!item [Ergebnis:]
Die Funktion liefert die entsprechende Dateikennung, oder eine negative
Fehlermeldung zurÅck.
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fcreate ~  (!link [Ein-/AusgabekanÑle des BIOS][Die Ein-/AusgabekanÑle des BIOS]) ~
F_SETLK
(!ende_liste)


!begin_node Bindings fÅr Fopen
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fopen ( CONST BYTE *fname, WORD mode );
!item [Assembler:]
!begin_verbatim
move.w    mode,-(sp)   ; Offset 6
pea       fname        ; Offset 2
move.w    #61,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Foutstat
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFoutstatÆ - Ausgabestatus fÅr ein File festlegen.
!item [Gemdosnummer:]
262
!item [Binding:]
(!link [Bindings fÅr Foutstat] [Bindings fÅr Foutstat])
!item [Beschreibung:]
Die Funktion gibt die Anzahl der Bytes zurÅck, die in die Datei mit der
Handle (!I)fh(!i) ausgegeben werden kînnen, ohne den entsprechenden Prozeû
zu blockieren.

Wenn die Anzahl der Bytes nicht genau angegeben werden kann, wird der Wert 1
zurÅckgeliefert.

(!B)Hinweis:(!b) In MagiC versucht der Kernel zunÑchst, den Aufruf auf Fcntl
(FIONWRITE) zurÅckzufÅhren. Wenn diese Subfunktion von dev_ioctl nicht
existiert (d.h. der Dateitreiber liefert EINVFN), wird dev_stat aufgerufen.
In diesem Fall kann nur die Aussage getroffen werden "Zeichen liegt an"
(RÅckgabe == 1) bzw. "kein Zeichen liegt an" (RÅckgabe == 0). FAT-Dateien
liefern stets den Wert 1, Shared Memory die tatsÑchliche DateilÑnge minus
der aktuellen Position. Pipes liefern die Anzahl der noch freien Bytes im
Block.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in (!nolink [MagiC]) ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EIHNDL :]
!item [>= 0 :]
kein Fehler aufgetreten (Anzahl der Bytes).
!item [EIHNDL :]
ungÅltiges Datei-Handle.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Cauxos ~  Cconos ~ Cprnos ~  Fcntl ~  Finstat
(!ende_liste)


!begin_node Bindings fÅr Foutstat
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Foutstat ( WORD fh );
!item [Assembler:]
!begin_verbatim
move.w    fh,-(sp)     ; Offset 2
move.w    #262,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fpipe
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFpipeÆ - erzeugt eine Pipe.
!item [Gemdosnummer:]
256
!item [Binding:]
(!link [Bindings fÅr Fpipe] [Bindings fÅr Fpipe])
!item [Beschreibung:]
Die Funktion erzeugt eine Pipe, die fÅr Interprozeû-Kommunikation (IPC)
benutzt werden kann. Bei erfolgreichem Aufruf werden in (!I)usrh(!i) zwei
GEMDOS-Handles geliefert.

(!I)usrh(!i)[0] ist dabei das Handle fÅr das Leseende der Pipe, (Read-Only)
wÑhrend (!I)usrh(!i)[1] das Handle fÅr das Schreibende (Write-Only) der Pipe
kennzeichnet.

Die auf diese Weise erzeugte Pipe wird im Verzeichnis U:\PIPE als
Pseudo-Datei angelegt und mit dem Namen 'sys$pipe.xxx' versehen, wobei xxx
als dreistellige ganze Zahl aufzufassen ist.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in MagiC ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [ENHNDL :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [ENHNDL :]
keine 2 Handles mehr frei.
!item [EACCDN :]
keine Pipeline mehr frei (max. 999 verfÅgbar).
!item [ENSMEM :]
nicht genug Speicher vorhanden, um die Pipe zu erzeugen.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fmidipipe ~  (!link [Test auf Pipes][Pipes, Test auf])
(!ende_liste)


!begin_node Bindings fÅr Fpipe
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fpipe ( WORD usrh[2] );
!item [Assembler:]
!begin_verbatim
pea       usrh         ; Offset 2
move.w    #256,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fputchar
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFputcharÆ - Zeichen in ein File ausgeben.
!item [Gemdosnummer:]
264
!item [Binding:]
(!link [Bindings fÅr Fputchar] [Bindings fÅr Fputchar])
!item [Beschreibung:]
Die Funktion schreibt ein Zeichen in die Datei mit dem Handle (!I)fh(!i).
Der Parameter (!I)}mode(!i) ist nur von Bedeutung, wenn die Datei ein
(Pseudo-)Terminal ist:
!begin_xlist !short [mode]
!item [mode]
Bedeutung
!item [~]
~
!item [0]
(!B)Raw-Mode(!b)
(!nl)
keine Auswertung der Sonderzeichen.
!item [1]
(!B)Cooked-Mode(!b)
(!nl)
spezielle Kontrollzeichen (Control-C, Control-Z) werden gesucht und ggfs.
interpretiert. Das selbe gilt fÅr die Fluûkontrolle (Control-S, Control-Q).
!item [2]
(!B)Echo-Mode(!b)
(!nl)
Gelesene Zeichen werden auf dem Terminal ausgegeben.
!end_xlist
Wenn die Datei ein (Pseudo-)Terminal ist, kînnen alle 4 Bytes Åbertragen
werden. Auf diese Art und Weise ist es mîglich, simulierte BIOS-Scancodes
und Shift-Statusmeldungen zu Åbertragen. Anderenfalls wird nur das Low-Byte
von (!I)ch(!i) Åbertragen.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EIHNDL :]
!item [4 :]
Anzahl geschriebener Bytes, wenn Datei ein Terminal ist.
!item [1 :]
Ausgabe erfolgreich, aber Datei ist kein Terminal.
!item [0 :]
Bytes konnten nicht ausgegeben werden.
!item [EIHNDL :]
ungÅltiges Datei-Handle.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Bconout ~  Cauxout ~  Cconout ~  Crawio ~  Fgetchar ~ Fwrite
(!ende_liste)


!begin_node Bindings fÅr Fputchar
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fputchar ( WORD fh, LONG ch, WORD mode );
!item [Assembler:]
!begin_verbatim
move.w    mode,-(sp)   ; Offset 8
move.l    ch,-(sp)     ; Offset 4
move.w    fh,-(sp)     ; Offset 2
move.w    #264,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fread
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile readÆ - Datei lesen.
!item [Gemdosnummer:]
63
!item [Binding:]
(!link [Bindings fÅr Fread] [Bindings fÅr Fread])
!item [Beschreibung:]
Die GEMDOS-Routine Fread liest eine bestimmte Anzahl von Bytes aus einer
Datei. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Dateikennung
!item [count]
Anzahl der zu lesenden Bytes
!item [buf]
Adresse des aufnehmenden Puffers
!end_xlist
(!B)Hinweis:(!b) In allen (!nolink [GEMDOS])-Versionen < 0.15 kommt es zum
System-Stillstand, wenn der Parameter count den Wert 0 besitzt. Beim Lesen
von StandardkanÑlen dÅrfen maximal 16383 Zeichen gelesen werden.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis die Anzahl der gelesenen Zeichen. Ein Wert
von 0 heiût öberlÑnge, und kennzeichnet das Dateiende. Im Fehlerfall gilt:
!begin_xlist !short [ELOCKED :]
!item [EIHNDL :]
falsche Dateikennung
!item [ELOCKED :]
Datei-Abschnitt ist markiert
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fwrite ~  FIONREAD
(!ende_liste)


!begin_node Bindings fÅr Fread
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fread ( WORD handle, LONG count, VOID *buf );
!item [Assembler:]
!begin_verbatim
pea       buf           ; Offset 8
move.l    count,-(sp)   ; Offset 4
move.w    handle,-(sp)  ; Offset 2
move.w    #63,-(sp)     ; Offset 0
trap      #1            ; GEMDOS aufrufen
lea       $C(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Freadlink
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFreadlinkÆ - symbolischen Link verfolgen.
!item [Gemdosnummer:]
303
!item [Binding:]
(!link [Bindings fÅr Freadlink] [Bindings fÅr Freadlink])
!item [Beschreibung:]
Die Funktion ermittelt den Dateinamen des symbolischen Links (!I)name(!i).
Dies ist der Name, der bei Fsymlink als erster Parameter angegeben wurde.

Der Name wird im Puffer (!I)buf(!i) abgelegt, der eine LÑnge von
(!I)bufsiz(!i) Zeichen umfaût.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in MagiC ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [ERANGE :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EINVFN :]
das Filesystem von (!I)name(!i) erlaubt keine symb. Links.
!item [EFILNF :]
der symbolische Link (!I)name(!i) wurde nicht gefunden.
!item [EACCDN :]
(!I)name(!i) ist kein symbolischer Link.
!item [ERANGE :]
der Puffer (!I)buf(!i) ist zu klein fÅr den zu ermittelnden Dateinamen.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fsymlink ~
          (!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Freadlink
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Freadlink ( WORD bufsiz, BYTE *buf, BYTE *name );
!item [Assembler:]
!begin_verbatim
pea       !item [Name:]; Offset 10
pea       buf           ; Offset  6
move.w    bufsiz,-(sp)  ; Offset  2
move.w    #303,-(sp)    ; Offset  0
trap      #1            ; GEMDOS aufrufen
lea       $C(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Frename
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile renameÆ - Datei umbenennen.
!item [Gemdosnummer:]
86
!item [Binding:]
(!link [Bindings fÅr Frename] [Bindings fÅr Frename])
!item [Beschreibung:]
Die GEMDOS-Routine Frename dient zum Umbenennen von Dateien. Der neue Name
darf auch einen kompletten Zugriffspfad innerhalb des betreffenden Laufwerks
enthalten. In diesem Fall wird die Datei verschoben. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [oldname]
Zeiger auf bisherigen Namen
!item [newname]
Zeiger auf neuen Namen
!end_xlist
(!B)Hinweis:(!b) Ab (!nolink [GEMDOS])-Version 0.15 ist es mîglich auch den Namen von
Verzeichnissen zu verÑndern. Diese kînnen jedoch nicht verschoben werden.
Man sollte es vermeiden, Dateien umzubenennen, die bereits geîffnet sind.

(!B)Anmerkung zu MagiC:(!b) Es ist Sache des XFS, zu entscheiden, ob
Verzeichnisse umbenannt oder verschoben werden dÅrfen. Das integrierte
DOS-XFS erlaubt erst seit (!nolink [MagiC])-5 ein Verschieben von Verzeichnissen.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [ENSAME :]
!item [E_OK :]
kein Fehler aufgetreten
!item [EPTHNF :]
Verzeichnis nicht gefunden
!item [EACCDN :]
Zugriff verweigert (Schreibschutz)
!item [ENSAME :]
Ziel ist nicht das gleiche Laufwerk
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fdelete ~  (!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Frename
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Frename ( CONST BYTE *oldname, CONST BYTE *newname );
!item [Assembler:]
!begin_verbatim
pea       newname      ; Offset 8
pea       oldname      ; Offset 4 
move.w    #0,-(sp)     ; Offset 2
move.w    #86,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $C(sp),sp    ; Stack korrigieren
!end_verbatim
(!B)Hinweis:(!b) Der Null-Parameter wird beim C-Binding normalerweise
automatisch hinzugefÅgt.
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fseek
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile seekÆ - Dateiposition verschieben.
!item [Gemdosnummer:]
66
!item [Binding:]
(!link [Bindings fÅr Fseek] [Bindings fÅr Fseek])
!item [Beschreibung:]
Die GEMDOS-Routine Fseek erlaubt es, den Dateizeiger innerhalb einer Datei
neu zu positionieren. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [offset]
Anzahl der Bytes, die Åbersprungen werden sollen
!item [handle]
Dateikennung
!item [seekmode]
Art der Positionierung
!begin_xlist !short [0 =]
!item [0 =]
vom Dateianfang
!item [1 =]
ab aktueller Position
!item [2 =]
vom Dateiende
!end_xlist
!end_xlist
(!B)Hinweis:(!b) Auf (!nolink [Pipes]) angewandt liefert die Funktion den Wert EACCDN;
damit kînnen Applikationen GerÑte und Pipes unterscheiden.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis die neue Position innerhalb der Datei,
oder eine negative Fehlermeldung.
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fread ~  Fwrite ~  (!link [Test auf Pipes][Pipes, Test auf])
(!ende_liste)


!begin_node Bindings fÅr Fseek
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fseek ( LONG offset, WORD handle, WORD seekmode );
!item [Assembler:]
!begin_verbatim
move.w    seekmode,-(sp)  ; Offset 8
move.w    handle,-(sp)    ; Offset 6
move.l    offset,-(sp)    ; Offset 2
move.w    #66,-(sp)       ; Offset 0
trap      #1              ; GEMDOS aufrufen
lea       $A(sp),sp       ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fselect
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFselectÆ - Abfrage des Dateistatus mit Timeout.
!item [Gemdosnummer:]
285
!item [Binding:]
(!link [Bindings fÅr Fselect] [Bindings fÅr Fselect])
!item [Beschreibung:]
Die Funktion kontrolliert, welche geîffneten Dateien zum Lesen bzw.
Schreiben bereit sind. Der Parameter (!I)rfds(!i) zeigt auf ein Langwort,
welches eine Menge von GEMDOS File-Deskriptoren reprÑsentiert.

In diesem Langwort ist das Bit n gesetzt, wenn der File-Deskriptor n auf
Eingabe ÅberprÅft werden soll. Eine leere Menge kann optional auch durch
einen Nullzeiger dargestellt werden. Analog zeigt (!I)wfds(!i) auf eine
Menge von File-Deskriptoren, deren Ausgabestatus ÅberprÅft werden soll.

Bei RÅckkehr der Funktion werden in (!I)rfds(!i) und (!I)wfds(!i) die
Handles der Dateien Åbergeben, die zum Lesen bzw. Schreiben bereit sind, und
auch ÅberprÅft werden sollten.

Unter (!I)timeout(!i) kann angegeben werden, wieviele Millisekunden gewartet
werden soll, bevor die Funktion zurÅckkehrt. Ein Wert von 0 bedeutet in
diesem Zusammenhang, daû die Funktion wartet, bis eine der angegebenen
Dateien zum Lesen bzw. Schreiben bereit ist.

Beispiel:
!begin_xlist !short
!item [Fselect (0, 0L, 0L, 0L)]
wartet fÅr immer.
!item [Fselect (1, 0L, 0L, 0L)]
wartet fÅr eine Millisekunde.
!end_xlist
(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EIHNDL :]
!item [0 :]
in der angegebenen Zeit wurde keine der Dateien zum Lesen bzw. Schreiben
bereit (Timeout).
!item [>0 :]
Summe der gesetzten Bits von (!I)rfds(!i) und (!I)wfds(!i).
!item [EIHNDL :]
mindestens eine der Handles ist keiner geîffneten Datei zuzuordnen.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Finstat ~  Foutstat
(!ende_liste)


!begin_node Bindings fÅr Fselect
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fselect ( WORD timeout, LONG *rfds, LONG *wfds, ((LONG) 0) );
!item [Assembler:]
!begin_verbatim
move.l    dummy,-(sp)    ; Offset 12
pea       wfds           ; Offset  8
pea       rfds           ; Offset  4
move.w    timeout,-(sp)  ; Offset  2
move.w    #285,-(sp)     ; Offset  0
trap      #1             ; GEMDOS aufrufen
lea       $10(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fsetdta
(!begin_liste) [Beschreibung:]
!item [Name:]
Øset disk transfer addressÆ - Setzen der Adresse fÅr den öbertragungsbereich
fÅr Diskettenoperationen.
!item [Gemdosnummer:]
26
!item [Binding:]
(!link [Bindings fÅr Fsetdta] [Bindings fÅr Fsetdta])
!item [Beschreibung:]
Die GEMDOS-Routine Fsetdta setzt die Adresse der aktuellen DTA. Der
Parameter (!I)buf(!i) ist ein Zeiger auf diese Struktur.

(!B)Hinweis:(!b) Bei Programmstart wird die DTA ab dem Offset 0x80 in der
Basepage eingerichtet.
!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fgetdta ~  Fsfirst ~  BASEPAGE
(!ende_liste)


!begin_node Bindings fÅr Fsetdta
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
VOID Fsetdta ( DTA *buf );
!item [Assembler:]
!begin_verbatim
pea       buf          ; Offset 2
move.w    #26,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fsfirst
(!begin_liste) [Beschreibung:]
!item [Name:]
Øsearch first fileÆ - ersten Dateieintrag suchen.
!item [Gemdosnummer:]
78
!item [Binding:]
(!link [Bindings fÅr Fsfirst] [Bindings fÅr Fsfirst])
!item [Beschreibung:]
Die GEMDOS-Routine Fsfirst erlaubt es, Informationen Åber Dateien zu
ermitteln. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [filename]
Zeiger auf den Dateinamen
!item [attr]
Attribute, die auf den gesuchten Dateityp passen sollen.
!begin_xlist !short
!item [Bit-0:]
Datei ist schreibgeschÅtzt
!item [Bit-1:]
Datei ist versteckt
!item [Bit-2:]
Systemdatei
!item [Bit-3:]
Diskettenname
!item [Bit-4:]
Verzeichnis
!item [Bit-5:]
Archiv-Bit
!end_xlist
!end_xlist
Der Pfadname kann auch die Joker '*' und '?' enthalten. Nach Abschluû der
Funktion steht der Verzeichniseintrag unter der DiskettenÅbertragungsadresse
DTA, die mit Fgetdta und Fsetdta ermittelt bzw. festgelegt werden kann. Die
Informationen kînnen dann der Struktur DTA entnommen werden.

(!B)Hinweis:(!b) Falls das Programm in der MiNT-Domain lÑuft, liefert
Fsfirst 'lower case' Filenamen. Da es Filesysteme gibt die case sensitiv
arbeiten, sollten Sie diese Umwandlung auf keinen Fall manuell durchfÅhren.
Wenn Sie hingegen unbedingt 'upper case' Filenamen benîtigen, sollten Sie
Ihr Programm per Pdomain in der TOS-Domain laufen lassen.

(!B)Anmerkung zu (!nolink [MagiC]):(!b) Ist Bit-3 von attr gesetzt, so ruft der Kernel
die XFS-Funktion xfs_rlabel auf. Das aufrufende Anwenderprogramm kann damit
leider unter MagiC nicht mehr Datum und Uhrzeit des Disknamens ermitteln.
Der Kernel setzt alle Felder auf 0, und die Funktion Fsnext darf dann nicht
ausgefÅhrt werden. Ab (!nolink [MagiC])-3 wird stattdessen die Funktion Dreadlabel
benutzt, die auch mit langen Dateinamen zurechtkommt.

Ist Bit-3 von attr nicht gesetzt, wird wie in TOS nach Dateien gesucht. Ist
eine Datei ein symbolischer Link, ruft der DOS-Kernel die Funktion Fxattr
auf, um den Link zu verfolgen. Die von Fxattr gelieferten Werte werden dann
in die DTA kopiert.

(!B)Achtung:(!b) (!nolink [MagiC]) ist nicht immer in der Lage, relative symbolische
Links wÑhrend eines Fsfirst/(!nolink [Fsnext]) korrekt auszuwerten. Es bieten sich 3
Auswege an:
!begin_xlist !short [(a)]
!item [(a)]
Am besten: Dxreaddir verwenden.
!item [(b)]
Nur absolute symbolische Links verwenden.
!item [(c)]
Das Suchverzeichnis jeweils zum aktuellen machen.
!end_xlist
MiNT behandelt diesen Fall zwar korrekt, jedoch auf Kosten eines gewaltigen
Aufwands. Das Fsfirst/next-Konzept ist grundsÑtzlich veraltet, ineffektiv
und unsicher, und sollte sowohl in MiNT als auch in (!nolink [MagiC]) vermieden werden.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EFILNF :]
!item [E_OK :]
kein Fehler aufgetreten
!item [EFILNF :]
Datei nicht gefunden
!item [ENMFIL :]
keine weiteren Dateien
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fgetdta ~  Fsetdta ~  Fsnext ~
(!link [XFS-Konzept][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Fsfirst
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fsfirst ( CONST BYTE *filename, WORD attr );
!item [Assembler:]
!begin_verbatim
move.w    attr,-(sp)   ; Offset 6
pea       filename     ; Offset 2
move.w    #78,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fsnext
(!begin_liste) [Beschreibung:]
!item [Name:]
Øsearch next fileÆ - nÑchsten Dateieintrag suchen.
!item [Gemdosnummer:]
79
!item [Binding:]
(!link [Bindings fÅr Fsnext] [Bindings fÅr Fsnext])
!item [Beschreibung:]
Die GEMDOS-Routine Fsnext sucht den nÑchsten Dateieintrag auf den die von
Fsfirst gemachte Spezifizierung paût.

(!B)Hinweis:(!b) Falls das Programm in der MiNT-Domain lÑuft, liefert
Fsnext 'lower case' Filenamen. Da es Filesysteme gibt die case sensitiv
arbeiten, sollten Sie diese Umwandlung auf keinen Fall manuell durchfÅhren.
Wenn Sie hingegen unbedingt 'upper case' Filenamen benîtigen, sollten Sie
Ihr Programm per Pdomain in der TOS-Domain laufen lassen.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis 0, wenn eine Datei gefunden werden konnte,
ansonsten eine negative Fehlermeldung.
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fgetdta ~  Fsetdta ~  Fsfirst
(!ende_liste)


!begin_node Bindings fÅr Fsnext
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
WORD Fsnext ( VOID );
!item [Assembler:]
!begin_verbatim
move.w    #79,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fsymlink
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFsymlinkÆ - symbolischen Link auf ein File erzeugen.
!item [Gemdosnummer:]
302
!item [Binding:]
(!link [Bindings fÅr Fsymlink] [Bindings fÅr Fsymlink])
!item [Beschreibung:]
Die Funktion erzeugt einen symbolischen Link (!I)newname(!i) fÅr die Datei
mit dem Namen (!I)oldname(!i). Bei erfolgreichem Aufruf kann die Datei
anschlieûend unter beiden Namen angesprochen werden. Ein Lîschen per Fdelete
fÅr (!I)newname(!i) berÅhrt die Datei selbst nicht, sondern nur den
symbolischen Link. Wird hingegen (!nolink [Fdelete]) auf (!I)oldname(!i) angewendet, so
wird die Datei wie gewohnt gelîscht, und Zugriffe auf (!I)newname(!i) sind
nicht mehr mîglich.

Der Unterschied zu Hard-Links besteht darin, daû symbolische Links zwischen
verschiedenen physikalischen GerÑten (und damit sogar verschiedenen
Filesystem-Typen) bestehen kînnen.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in MagiC ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EINVFN :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EINVFN :]
das Filesystem unterstÅtzt keine symbolischen Links.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Flink ~  Freadlink ~  Frename ~
(!link [XFS-Konzept][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Fsymlink
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fsymlink ( BYTE *oldname, BYTE *newname );
!item [Assembler:]
!begin_verbatim
pea       newname      ; Offset 6
pea       oldname      ; Offset 2
move.w    #302,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fwrite
(!begin_liste) [Beschreibung:]
!item [Name:]
Øfile writeÆ - auf Datei schreiben.
!item [Gemdosnummer:]
64
!item [Binding:]
(!link [Bindings fÅr Fwrite] [Bindings fÅr Fwrite])
!item [Beschreibung:]
Die GEMDOS-Routine Fwrite schreibt eine Anzahl von Bytes in eine Datei. Es
gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Dateikennung
!item [count]
Anzahl der zu schreibenden Bytes
!item [buf]
Anfangsadresse des Puffers
!end_xlist
(!B)Hinweis zu MagiC:(!b) öbergibt man als Anzahl der zu schreibenden Bytes
den Wert 0, und in (!I)buf(!i) den Wert -1, so wird die Datei auf die
aktuelle Position des Dateizeigers (!I)geschrumpft(!i).
!item [Ergebnis:]
Die Funktion liefert die Anzahl der tatsÑchlich geschriebenen Bytes, oder
eine der folgenden Fehlermeldungen:
!begin_xlist !short [ELOCKED :]
!item [EACCDN :]
Zugriff verwehrt
!item [EIHNDL :]
falsche Dateikennung
!item [ELOCKED :]
Datei-Abschnitt ist markiert
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fread ~  FIONWRITE
(!ende_liste)


!begin_node Bindings fÅr Fwrite
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fwrite ( WORD handle, LONG count, VOID *buf );
!item [Assembler:]
!begin_verbatim
pea       buf           ; Offset 8
move.l    count,-(sp)   ; Offset 4
move.w    handle,-(sp)  ; Offset 2
move.w    #64,-(sp)     ; Offset 0
trap      #1            ; GEMDOS aufrufen
lea       $C(sp),sp     ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Fxattr
(!begin_liste) [Beschreibung:]
!item [Name:]
ØFxattrÆ - erweiterte Fileattribute ermitteln.
!item [Gemdosnummer:]
300
!item [Binding:]
(!link [Bindings fÅr Fxattr] [Bindings fÅr Fxattr])
!item [Beschreibung:]
Die Funktion ermittelt die erweiterten Attribute der Datei, deren
vollstÑndiger Name in (!I)name(!i) angegeben ist, und speichert diese in
(!I)xattr(!i).

Der Parameter (!I)flag(!i) gibt an, wie symbolische Links behandelt werden
sollen. Es gilt:
!begin_xlist !short [flag]
!item [flag]
Bedeutung
!item [~]
~
!item [0]
symbolische Links werden bis zur Ursprungsdatei verfolgt, und die
erweiterten Attribute werden von dieser Datei ermittelt. (Dies entspricht
dem Vorgehen von stat unter UNIX).
!item [1]
die erweiterten Attribute des symbolischen Links selbst werden ermittelt.
(Dies entspricht dem Vorgehen von lstat unter UNIX).
!end_xlist
(!B)Hinweis:(!b) Diese Funktion ist Ñquivalent zu einem Aufruf von Fcntl
(Modus F_STAT) mit dem Unterschied, daû statt eines Dateinamens das Handle
einer bereits geîffneten Datei Åbergeben wird.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Sie steht in MagiC ab Version 3.0 zur VerfÅgung.
!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EFILNF :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EFILNF :]
Datei nicht gefunden.
!item [EPTHNF :]
Pfad zur Datei nicht gefunden.
!end_xlist
!item [Gruppe:]
(!link [Dateifunktionen][Dateifunktionen des GEMDOS])
!item [Querverweis:] Fattrib ~  Fsnext ~
            (!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Fxattr
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Fxattr ( WORD flag, BYTE *name, XATTR *xattr );
!item [Assembler:]
!begin_verbatim
pea       xattr        ; Offset 10
pea       name         ; Offset  6
move.w    flag,-(sp)   ; Offset  2
move.w    #300,-(sp)   ; Offset  0
trap      #1           ; GEMDOS aufrufen
lea       $C(sp),sp    ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node
