!iflang [english]

!begin_node Pvfork
(!begin_liste) [Availability]
!item [Name:]
ØPvforkÆ - Kopie des aktuellen Prozesses erstellen.
!item [Opcode:]
275
!item [Syntax:]
int16_t Pvfork ( void );

!item [Description:]
Die Funktion erzeugt eine Kopie des aktuellen Prozesses. Parent- und
Childprozess teilen sich denselben Adressraum, d.h. jede énderung, die der
Child an Variablen vornimmt, betreffen auch den Parent. Der neue Prozess
beginnt seine Arbeit, wenn die Funktion Pvfork zurÅckkehrt.

Da sich beide Prozesse den gleichen Adressraum (und Stack) teilen, gÑbe es
Probleme, wenn beide zur gleichen Zeit laufen wÅrden. Deshalb wird der
Parent angehalten, bis der Child-Prozess entweder beendet wird oder sich
mittels Pexec (Modus 200) selbst mit einem neuen Prozess in einem neuen
Adressraum Åberschreibt.

!item [(!nolink [Return]) Value:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [ENSMEM:]
!item [E_OK~ :]
im Child-Prozess.
!item [>0~~~ :]
neue Prozess-ID im Parent-Prozess.
!item [ENSMEM:]
nicht genug Speicher vorhanden, um den neuen Prozeû zu erzeugen.
!end_xlist

!item [Availability:]
This function is available under all MiNT versions integrated with MultiTOS.

!item [Group:]
Process Functions

!item [See Also:] (!link [Binding][Bindings for Pvfork]) ~ Pexec ~
          Pfork ~  (!nolink [Threads][Threads in MagiC])
(!ende_liste)


!begin_node Bindings for Pvfork
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Pvfork ( void );
!item [Assembler:]
!begin_verbatim
move.w    #275,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #2,sp        ; correct stack
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node

!else

!begin_node Pvfork
(!begin_liste) [Beschreibung]
!item [Name:]
ØPvforkÆ - Kopie des aktuellen Prozesses erstellen.
!item [Gemdosnummer:]
275
!item [Deklaration:]
int16_t Pvfork ( void );

!item [Beschreibung:]
Die Funktion erzeugt eine Kopie des aktuellen Prozesses. Parent- und
Childprozess teilen sich denselben Adressraum, d.h. jede énderung, die der
Child an Variablen vornimmt, betreffen auch den Parent. Der neue Prozess
beginnt seine Arbeit, wenn die Funktion Pvfork zurÅckkehrt.

Da sich beide Prozesse den gleichen Adressraum (und Stack) teilen, gÑbe es
Probleme, wenn beide zur gleichen Zeit laufen wÅrden. Deshalb wird der
Parent angehalten, bis der Child-Prozess entweder beendet wird oder sich
mittels Pexec (Modus 200) selbst mit einem neuen Prozess in einem neuen
Adressraum Åberschreibt.

!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [ENSMEM:]
!item [E_OK~ :]
im Child-Prozess.
!item [>0~~~ :]
neue Prozess-ID im Parent-Prozess.
!item [ENSMEM:]
nicht genug Speicher vorhanden, um den neuen Prozeû zu erzeugen.
!end_xlist

!item [VerfÅgbar:]
This function is available under all MiNT versions integrated with MultiTOS.

!item [Gruppe:]
Prozessfunktionen

!item [Querverweis:] (!link [Binding][Bindings fÅr Pvfork]) ~ Pexec ~
					Pfork ~  (!nolink [Threads][Threads in MagiC])
(!ende_liste)


!begin_node Bindings fÅr Pvfork
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Pvfork ( void );
!item [Assembler:]
!begin_verbatim
move.w    #275,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node

!endif
