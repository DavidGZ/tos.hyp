!iflang [english]

!begin_node Pwait
(!begin_liste) [Availability]
!item [Name:]
ØPwaitÆ -  auf Childprozess warten, Exitcode ermitteln.
!item [Opcode:]
265
!item [Syntax:]
int32_t Pwait ( void );

!item [Description:]
Diese Funktion ist Ñquivalent zu Pwait3 (2, NULL) und wird aus GrÅnden der
AbwÑrtskompatibilitÑt angeboten.

Laut POSIX sollte die Bibliotheksfunktion 'wait' als Pwaitpid (-1, 0, NULL)
implementiert werden. Daher sollte Pwait fÅr eine POSIX-kompatible
Bibliothek nicht benutzt werden.

(!B)Achtung:(!b) In MagiC ist die Funktion als Pwaitpid (-1, 2, NULL) implementiert.

!item [(!nolink [Return]) Value:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EFILNF:]
!item [>0~~~ :]
Exit-Status und PID des Childs
!item [~0~~~ :]
falls Bit-0 des Parameters flag gesetzt ist, und die Funktion beim Warten
auf das Exit bzw. Stop des Childs blockiert werden wÅrde.
!item [EFILNF:]
es existieren keine Childs.
!end_xlist

!item [Availability:]
This function is available under all MiNT versions integrated with MultiTOS
and MagiC since version 5.04.

!item [Group:]
Process Functions

!item [See Also:] (!link [Binding] [Bindings for Pwait]) ~ Pwait3 ~ Pwaitpid
(!ende_liste)


!begin_node Bindings for Pwait
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Pwait ( void );
!item [Assembler:]
!begin_verbatim
move.w    #265,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #2,sp        ; correct stack
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node

!else

!begin_node Pwait
(!begin_liste) [Beschreibung]
!item [Name:]
ØPwaitÆ -  auf Childprozess warten, Exitcode ermitteln.
!item [Gemdosnummer:]
265
!item [Deklaration:]
int32_t Pwait ( void );

!item [Beschreibung:]
Diese Funktion ist Ñquivalent zu Pwait3 (2, NULL) und wird aus GrÅnden der
AbwÑrtskompatibilitÑt angeboten.

Laut POSIX sollte die Bibliotheksfunktion 'wait' als Pwaitpid (-1, 0, NULL)
implementiert werden. Daher sollte Pwait fÅr eine POSIX-kompatible
Bibliothek nicht benutzt werden.

(!B)Achtung:(!b) In MagiC ist die Funktion als Pwaitpid (-1, 2, NULL) implementiert.

!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:
!begin_xlist !short [EFILNF:]
!item [>0~~~ :]
Exit-Status und PID des Childs
!item [~0~~~ :]
falls Bit-0 des Parameters flag gesetzt ist, und die Funktion beim Warten
auf das Exit bzw. Stop des Childs blockiert werden wÅrde.
!item [EFILNF:]
es existieren keine Childs.
!end_xlist

!item [VerfÅgbar:]
This function is available under all MiNT versions integrated with MultiTOS
and MagiC since version 5.04.

!item [Gruppe:]
Prozessfunktionen

!item [Querverweis:] (!link [Binding] [Bindings fÅr Pwait]) ~ Pwait3 ~ Pwaitpid
(!ende_liste)


!begin_node Bindings fÅr Pwait
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Pwait ( void );
!item [Assembler:]
!begin_verbatim
move.w    #265,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node

!endif
