!begin_node Talarm
(!begin_liste) [Beschreibung:]
!item [Name:]
ØTalarmÆ - Intervall fÅr Alarm festlegen.
!item [Gemdosnummer:]
288 (0x0120)
!item [Binding:]
(!link [Bindings fÅr Talarm] [Bindings fÅr Talarm])
!item [Beschreibung:]
Die Funktion sendet dem aufrufenden Prozess nach (!I)time(!i) Sekunden ein
SIGALRM-Signal.

Falls fÅr dieses Signal kein Signal-Handler per Psignal installiert wurde,
wird der Prozess sofort (d.h. beim Eintreffen des Signals) terminiert.

Durch einen Wert von (!I)time(!i) = 0, kann ein frÅher gesetzter Alarm
storniert werden. Ist (!I)time(!i) negativ, so hat die Funktion keine
Auswirkungen und lediglich der RÅckgabewert wird geliefert.

!item [Ergebnis:]
Die Funktion liefert die Zeit bis zum Eintreffen des (!nolink [SIGALRM])-Signals (wenn
ein Alarm aktiviert wurde) zurÅck, und anderenfalls den Wert 0.

!item [VerfÅgbar:]
Diese Funktion ist optional, daher darf ein Aufruf mit EINVFN beantwortet werden.
This function is available under all MiNT versions integrated with MultiTOS.

The call was introduced in the MiNT version 0.8pl8 !!, but prior to the version 1.12 the code contained a 
bug that affected its functionality.
!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])

!item [Querverweis:] Tmalarm ~ Pause ~ Psignal ~ Signale
(!ende_liste)


!begin_node Bindings fÅr Talarm
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Talarm ( LONG time );
!item [Assembler:]
!begin_verbatim
move.l    time,-(sp)   ; Offset 2
move.w    #288,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Tgetdate
(!begin_liste) [Beschreibung:]
!item [Name:]
Øget dateÆ - Tagesdatum ermitteln.
!item [Gemdosnummer:]
42
!item [Binding:]
(!link [Bindings fÅr Tgetdate] [Bindings fÅr Tgetdate])
!item [Beschreibung:]
Die GEMDOS-Routine Tgetdate ermittelt das aktuelle Tagesdatum.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine LONG-Zahl mit dem Tagesdatum. Das
Datum ist wie folgt codiert:
!begin_xlist !short [Bits]
!item [Bits]
Bedeutung
!item [~]
~
!item [0-4]
Tag (1-31)
!item [5-8]
Monat (1-12)
!item [9-15]
Jahr (0-119, 0= 1980)
!end_xlist
!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])
!item [Querverweis:] Tsetdate
(!ende_liste)


!begin_node Bindings fÅr Tgetdate
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
ULONG Tgetdate ( VOID );
!item [Assembler:]
!begin_verbatim
move.w    #42,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Tgettime
(!begin_liste) [Beschreibung:]
!item [Name:]
Øget timeÆ - ermittelt die Uhrzeit.
!item [Gemdosnummer:]
44
!item [Binding:]
(!link [Bindings fÅr Tgettime] [Bindings fÅr Tgettime])
!item [Beschreibung:]
Die GEMDOS-Routine Tgettime ermittelt die Uhrzeit.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis die Uhrzeit. Sie ist wie folgt codiert:
!begin_xlist !short [11-15]
!item [Bits]
Bedeutung
!item [~]
~
!item [0-4]
Sekunden im Zweierschritt (0-29)
!item [5-10]
Minuten (0-59)
!item [11-15]
Stunden (0-23)
!end_xlist
!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])
!item [Querverweis:] Tsettime
(!ende_liste)


!begin_node Bindings fÅr Tgettime
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
ULONG Tgettime ( VOID );
!item [Assembler:]
!begin_verbatim
move.w    #44,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node




!begin_node Tgettimeofday
(!begin_liste) [Beschreibung:]
!item [Name:]
ØTgettimeofdayÆ - interrogates the state of the internal, high resolution system clock.
!item [Gemdosnummer:]
341 (0x0155)

!item [Binding:]
(!link [Bindings fÅr Tgettimeofday] [Bindings fÅr Tgettimeofday])

!item [Beschreibung:]
This function interrogates the state of the internal, high resolution system clock.

The argument (!I)tv(!i) is a pointer to the timeval structure.

The argument (!I)tzp(!i) is a pointer to timezone structure.

You may safely pass NULL for either argument. This isn't considered an error.

Implementors of library bindings should be aware that the definition of
struct (!nolink [timezone]) is non-standard. The members are actually int and not long 
int (this applies only to struct (!nolink [timezone]); the members of 
struct (!nolink [timeval]) are always long). 16-bit libraries will have to 
copy the contents of the structure that tzp points to.

The Ssystem() call has a command S_CLOCKMODE. This 
command allows to retrieve or set the kernel clock mode, i.e. to 
specify whether the hardware clock is meant to run in UTC or in local 
time. (!nl)
It is planned to make 
MiNT compliant with the kernel time keeping model described in RFC1305. 
This model is already successfully implemented in operating systems 
such as SunOS, Ultrix, OSF/1, HP-UX and Linux. Please expect the 
internal realization to change in the future.

!item [Ergebnis:]
The function can never fail. It always returns E_OK.

!item [VerfÅgbar:]
Available when a MiNT kernel of a version at least 1.15.0 release is 
detected.

!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])

!item [Querverweis:] Ssystem ~ Tsettimeofday
(!ende_liste)


!begin_node Bindings fÅr Tgettimeofday
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Tgettimeofday ( timeval *tv, timezone *tzp );
!item [Assembler:]
!begin_verbatim
pea       tzp          ; Offset 6
pea       tv           ; Offset 2
move.w    #341,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $0a(sp),sp   ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node




!begin_node Tmalarm
(!begin_liste) [Beschreibung:]
!item [Name:]
ØTmalarmÆ - interrogates the state of the internal, high resolution system clock.
!item [Gemdosnummer:]
317 (0x013d)

!item [Binding:]
(!link [Bindings fÅr Tmalarm] [Bindings fÅr Tmalarm])

!item [Beschreibung:]
This function reads/sets a process alarm for the current process.

(!I)time(!i) specifies the length of time (in milliseconds) to wait before a
SIGALRM signal is delivered. If time is 0 then any previously set alarm
is cancelled. If time is negative the function does not modify any alarm 
currently set.

If no (!nolink [SIGALRM]) signal handler has been set up when the alarm is triggered,
the process will be killed.

!item [Ergebnis:]
Returns 0 if no alarm was scheduled prior to this call or the amount of time
remaining (in milliseconds) before the alarm is triggered.

!item [VerfÅgbar:]
Available when a 'MiNT' cookie with a version of at least 1.10 exists.

!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])

!item [Querverweis:] Talarm ~ Pause ~ Psignal
(!ende_liste)


!begin_node Bindings fÅr Tmalarm
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Tmalarm( LONG time );
!item [Assembler:]
!begin_verbatim
move.l    time,-(sp)   ; Offset 2
move.w    #341,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node




!begin_node Tsetdate
(!begin_liste) [Beschreibung:]
!item [Name:]
Øset dateÆ - Tagesdatum setzen.
!item [Gemdosnummer:]
43
!item [Binding:]ULONG Tsetdate ( UWORD date );
(!link [Bindings fÅr Tsetdate] [Bindings fÅr Tsetdate])
!item [Beschreibung:]
Die GEMDOS-Routine Tsetdate setzt das aktuelle Tagesdatum. Der Parameter
(!I)date(!i) ist wie folgt codiert:
!begin_xlist !short [Bits]
!item [Bits]
Bedeutung
!item [~]
~
!item [0-4]
Tag (1-31)
!item [5-8]
 Monat (1-12)
!item [9-15]
Jahr (0-119, 0= 1980)
!end_xlist
(!B)Hinweis:(!b) Ab dem Blitter-TOS wird das Datum auch in der jeweils
vorhandenen Hardware-Uhr gesetzt.
!item [Ergebnis:]
Ein RÅckgabewert von -1 kennzeichnet ein ungÅltiges Format des Datums.
!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])
!item [Querverweis:] Tgetdate
(!ende_liste)


!begin_node Bindings fÅr Tsetdate
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
ULONG Tsetdate ( UWORD date );
!item [Assembler:]
!begin_verbatim
move.w    date,-(sp)   ; Offset 2
move.w    #43,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Tsetitimer
(!begin_liste) [Beschreibung:]
!item [Name:]
ØTsetitimerÆ - steuert einen periodischen Timer.
!item [Gemdosnummer:]
329 (0x0149)
!item [Binding:]
(!link [Bindings fÅr Tsetitimer] [Bindings fÅr Tsetitimer])
!item [Beschreibung:]
Die GEMDOS-Routine Tsetitimer steuert einen von insgesamt drei mîglichen
periodischen Timern. Es gilt:
!begin_xlist !short [ointerval]
!item [Parameter]
Bedeutung
!item [~]
~
!item [which]
gewÅnschter Timer
!begin_xlist !short [0 =]

!label ITIMER_REAL
!item [0 =]
Dieser Timer arbeitet in Echtzeit, und sendet nach Ablauf das Signal SIGALRM.

!label ITIMER_VIRTUAL
!item [1 =]
Dieser Timer arbeitet in 'virtueller Prozess-Zeit', und sendet nach Ablauf
das Signal SIGVTALRM. Der Timer lÑuft in diesem Fall nur, wenn der Prozess,
welcher den Timer steuert, aktuell die CPU besitzt.

!label ITIMER_PROF
!item [2 =]
Dieser Timer arbeitet sowohl in 'virtueller Prozess-Zeit' als auch dann,
wenn das Betriebssystem selbst aktiv ist. Nach Ablauf des Timers wird das
Signal SIGPROF gesendet.
!end_xlist
!item [interval]
Adresse eines LONG-Wertes, welcher den Wert enthÑlt, auf den der Timer nach
Ablauf gesetzt werden soll. Ein NULL-Zeiger bedeutet, daû der entsprechende
alte Wert nicht verÑndert werden soll. Falls der LONG-Wert den Wert 0
besitzt, wird der Timer nach seinem Ablauf deaktiviert.
!item [value]
Adresse eines LONG-Wertes, welcher den Initialwert des Timers in
Millisekunden beschreibt. Ein NULL-Zeiger lÑût den aktuellen Timer
unangetastet. Falls der LONG-Wert den Wert 0 besitzt, wird der Timer
deaktiviert.
!item [ointerval]
Adresse eines LONG-Wertes, welcher das aktuelle Intervall des Timers
aufnimmt, bzw. NULL, wenn dieser Wert nicht von Interesse ist.
!item [ovalue]
Adresse eines LONG-Wertes, welcher den aktuellen Wert des Timers aufnimmt
oder NULL, wenn dieser Wert nicht von Interesse ist.
!end_xlist
Da alle internen Berechnungen in Millisekunden gemessen werden, ist es nicht
mîglich einen Timer auf beliebige (sehr groûe, zukÅnftige) Werte zu setzen.

Setting new interval values needs root privileges.

!item [Ergebnis:]
Die Funktion liefert bei korrekter AusfÅhrung 0, und im Fehlerfall einen
negativen Wert zurÅck.

!item [VerfÅgbar:]
Diese Funktion ist optional, daher darf ein Aufruf mit EINVFN beantwortet werden.
Available when a 'MiNT' cookie with a version of at least 1.11 exists.
!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])

!item [Querverweis:] Pause ~ Psignal ~ Talarm
(!ende_liste)


!begin_node Bindings fÅr Tsetitimer
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Tsetitimer ( LONG which, LONG interval, LONG value, LONG ointerval, LONG ovalue );
!item [Assembler:]
!begin_verbatim
move.l    ovalue,-(sp)    ; Offset 18
move.l    ointerval,-(sp) ; Offset 14
move.l    value,-(sp)     ; Offset 10
move.l    interval,-(sp)  ; Offset  6
move.l    which,-(sp)     ; Offset  2
move.w    #329,-(sp)      ; Offset  0
trap      #1              ; GEMDOS aufrufen
lea       $16(sp),sp      ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node


!begin_node Tsettime
(!begin_liste) [Beschreibung:]
!item [Name:]
Øset timeÆ - setzt die Uhrzeit.
!item [Gemdosnummer:]
45
!item [Binding:]
(!link [Bindings fÅr Tsettime] [Bindings fÅr Tsettime])
!item [Beschreibung:]
Die GEMDOS-Routine Tsettime setzt die Uhrzeit. Der Parameter (!I)time(!i)
muû wie folgt codiert werden:
!begin_xlist !short [11-15]
!item [Bits]
Bedeutung
!item [~]
~
!item [0-4]
Sekunden im Zweierschritt (0-29)
!item [5-10]
Minuten (0-59)
!item [11-15]
Stunden (0-23)
!end_xlist
(!B)Hinweis:(!b) Ab dem Blitter-TOS wird die Zeit auch in der jeweils
vorhandenen Hardware-Uhr gesetzt.
!item [Ergebnis:]
Ein RÅckgabewert von -1 kennzeichnet ein ungÅltiges Zeitformat.
!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])
!item [Querverweis:] Tgettime
(!ende_liste)


!begin_node Bindings fÅr Tsettime
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
ULONG Tsettime ( UWORD time );
!item [Assembler:]
!begin_verbatim
move.w    time,-(sp)   ; Offset 2
move.w    #45,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node




!begin_node Tsettimeofday
(!begin_liste) [Beschreibung:]
!item [Name:]
ØTsettimeofdayÆ - sets the state of the internal, high resolution system clock.
!item [Gemdosnummer:]
342 (0x0156)

!item [Binding:]
(!link [Bindings fÅr Tsettimeofday] [Bindings fÅr Tsettimeofday])

!item [Beschreibung:]
This function sets the state of the internal, high resolution system clock.

The argument (!I)tv(!i) is a pointer to the timeval structure.

The argument (!I)tzp(!i) is a pointer to the timezone structure.

You may safely pass NULL for either argument. This isn't considered an error.

Implementors of library bindings should be aware that the definition of
struct (!nolink [timezone]) is non-standard. The members are actually int and not long 
int (this applies only to struct (!nolink [timezone]); the members of 
struct (!nolink [timeval]) are always long). 16-bit libraries will have to 
copy the contents of the structure that tzp points to.

The tz_dsttime member of (!nolink [timezone]) is stored, but not 
evaluated within the kernel. Beware not to misunderstand its meaning: 
if non-zero it simply signifies that daylight savings time apply during 
some part of the year, not necessarily now. In other words: if 
it is non-zero someday, it should be non-zero during the entire year.
The Ssystem() call has a command S_CLOCKMODE. This 
command allows to retrieve or set the kernel clock mode, i.e. to 
specify whether the hardware clock is meant to run in UTC or in local 
time. (!nl)
It is planned to make 
MiNT compliant with the kernel time keeping model described in RFC1305. 
This model is already successfully implemented in operating systems 
such as SunOS, Ultrix, OSF/1, HP-UX and Linux. Please expect the 
internal realization to change in the future.

!item [Ergebnis:]
The following error conditions are defined: 

EPERM - an attempt was made by a user without super-user 
privileges to change the system time or system time zone 
information.

EBADARG - one of the arguments is out of range.  Note that the 
kernel time cannot be set to dates before Jan 1 1980 00:00:00 and after 
some day in 2038 (yep, MAX_LONG seconds since the epoch). 
Timezone offsets must be in the range of +/- 720 minutes.

!item [VerfÅgbar:]
Available when a MiNT kernel of a version at least 1.15.0 release is 
detected.

!item [Gruppe:]
(!link [Datum und Uhrzeit][Datum und Uhrzeit im GEMDOS])

!item [Querverweis:] Ssystem ~ Tgettimeofday
(!ende_liste)


!begin_node Bindings fÅr Tsettimeofday
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
LONG Tsettimeofday ( timeval *tv, timezone *tzp );
!item [Assembler:]
!begin_verbatim
pea       tzp          ; Offset 6
pea       tv           ; Offset 2
move.w    #342,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $0a(sp),sp   ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node
