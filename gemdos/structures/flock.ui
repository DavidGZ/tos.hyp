!iflang [english]

!begin_node flock, Fcntl
!label F_RDLCK
!label F_WRLCK
!label F_UNLCK

!begin_verbatim
struct flock
{
<<<<<<< flock.ui
    int16_t  l_type;     /* Type of lock                 */
=======
    int16_t  l_type;     /* Art des Lockings             */
>>>>>>> 1.2
    int16_t  l_whence;   /* SEEK_SET, SEEK_CUR, SEEK_END */
<<<<<<< flock.ui
    int32_t  l_start;    /* Start of the locking region  */
    int32_t  l_len;      /* Length of the locking region */
    int16_t  l_pid;      /* PID of the locking process   */
=======
    int32_t  l_start;    /* Start des Locking-Bereiches  */
    int32_t  l_len;      /* LÑnge des Locking-Bereiches  */
                         /* 0 = bis Datei-Ende           */
    int16_t  l_pid;      /* PID des sperrenden Prozesses */
>>>>>>> 1.2
};
!end_verbatim

<<<<<<< flock.ui
(!B)Note:(!b) Possible values for l_type are: 0 = Read locking, 1 = Write
locking as well as 3 = No locking.
=======
(!B)Hinweis:(!b) Mîgliche Werte fÅr l_type sind:
!begin_table [lll]
F_RDLCK !! 0 !! Read locking
F_WRLCK !! 1 !! Write locking
F_UNLCK !! 3 !! no locking
!end_table

>>>>>>> 1.2
!end_node

!else

!begin_node flock, Fcntl
!label F_RDLCK
!label F_WRLCK
!label F_UNLCK

!begin_verbatim
struct flock
{
    int16_t  l_type;     /* Art des Lockings             */
    int16_t  l_whence;   /* SEEK_SET, SEEK_CUR, SEEK_END */
    int32_t  l_start;    /* Start des Locking-Bereiches  */
    int32_t  l_len;      /* LÑnge des Locking-Bereiches  */
                         /* 0 = bis Datei-Ende           */
    int16_t  l_pid;      /* PID des sperrenden Prozesses */
};
!end_verbatim

(!B)Hinweis:(!b) Mîgliche Werte fÅr l_type sind:
!begin_table [lll]
F_RDLCK !! 0 !! Lesesperre
F_WRLCK !! 1 !! Schreibsperre
F_UNLCK !! 3 !! Sperre aufheben
!end_table

!end_node

!endif
