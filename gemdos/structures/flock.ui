!iflang [english]

!begin_node flock, Fcntl
!label F_RDLCK
!label F_WRLCK
!label F_UNLCK

!begin_verbatim
struct flock
{
    int16_t  l_type;     /* Art des Lockings             */
    int16_t  l_whence;   /* SEEK_SET, SEEK_CUR, SEEK_END */
    int32_t  l_start;    /* Start des Locking-Bereiches  */
    int32_t  l_len;      /* LÑnge des Locking-Bereiches  */
                         /* 0 = bis Datei-Ende           */
    int16_t  l_pid;      /* PID des sperrenden Prozesses */
};
!end_verbatim

(!B)Hinweis:(!b) Mîgliche Werte fÅr l_type sind:
!begin_table [lll]
F_RDLCK !! 0 !! Read locking
F_WRLCK !! 1 !! Write locking
F_UNLCK !! 3 !! no locking
!end_table

!end_node

!else

!begin_node flock, Fcntl
!label F_RDLCK
!label F_WRLCK
!label F_UNLCK

!begin_verbatim
struct flock
{
    int16_t  l_type;     /* Art des Lockings             */
    int16_t  l_whence;   /* SEEK_SET, SEEK_CUR, SEEK_END */
    int32_t  l_start;    /* Start des Locking-Bereiches  */
    int32_t  l_len;      /* LÑnge des Locking-Bereiches  */
                         /* 0 = bis Datei-Ende           */
    int16_t  l_pid;      /* PID des sperrenden Prozesses */
};
!end_verbatim

(!B)Hinweis:(!b) Mîgliche Werte fÅr l_type sind:
!begin_table [lll]
F_RDLCK !! 0 !! Lesesperre
F_WRLCK !! 1 !! Schreibsperre
F_UNLCK !! 3 !! Sperre aufheben
!end_table

!end_node

!endif
