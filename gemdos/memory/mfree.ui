!iflang [english]

!begin_node Mfree
(!begin_liste) [Availability]
!item [Name:]
Ømemory freeÆ - Speicherplatz freigeben.
!item [Opcode:]
73
!item [Syntax:]
int32_t Mfree ( void *block );

!item [Description:]
Die GEMDOS-Routine Mfree gibt einen mit Malloc reservierten Speicherbereich
wieder frei.

Der Parameter (!I)block(!i) enthÑlt die Anfangsadresse des freizugebenden
Speicherbereichs.

(!B)Hinweis:(!b) In fast allen (!nolink [GEMDOS])-Versionen wird nicht ÅberprÅft, ob der
freizugebende Block dem betreffenden Prozess auch gehîrt. Daher ist vor
allem in Multitasking-Systemen besondere Vorsicht angebracht.
!item [(!nolink [Return]) Value:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EIMBA]
!item [Wert]
Bedeutung
!item [~]
~
!item [E_OK]
kein Fehler aufgetreten
!item [EIMBA]
falsche Speicherblockadresse
!end_xlist

!item [Availability:] All GEMDOS versions.

!item [Group:]
Memory Management

!item [See Also:] (!link [Binding] [Bindings for Mfree]) ~ Malloc ~ 
        Mxalloc ~   Maddalt
(!ende_liste)


!begin_node Bindings for Mfree
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Mfree ( void *block );
!item [Assembler:]
!begin_verbatim
pea       block        ; Offset 2
move.w    #73,-(sp)    ; Offset 0
trap      #1           ; GEMDOS
addq.l    #6,sp        ; correct stack
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node

!else

!begin_node Mfree
(!begin_liste) [Beschreibung]
!item [Name:]
Ømemory freeÆ - Speicherplatz freigeben.
!item [Gemdosnummer:]
73
!item [Deklaration:]
int32_t Mfree ( void *block );

!item [Beschreibung:]
Die GEMDOS-Routine Mfree gibt einen mit Malloc reservierten Speicherbereich
wieder frei.

Der Parameter (!I)block(!i) enthÑlt die Anfangsadresse des freizugebenden
Speicherbereichs.

(!B)Hinweis:(!b) In fast allen (!nolink [GEMDOS])-Versionen wird nicht ÅberprÅft, ob der
freizugebende Block dem betreffenden Prozess auch gehîrt. Daher ist vor
allem in Multitasking-Systemen besondere Vorsicht angebracht.
!item [Ergebnis:]
Die Funktion liefert folgende Resultate:
!begin_xlist !short [EIMBA]
!item [Wert]
Bedeutung
!item [~]
~
!item [E_OK]
kein Fehler aufgetreten
!item [EIMBA]
falsche Speicherblockadresse
!end_xlist

!item [VerfÅgbar:] Alle GEMDOS Versionen.

!item [Gruppe:]
Speicherverwaltung

!item [Querverweis:] (!link [Binding] [Bindings fÅr Mfree]) ~ Malloc ~ 
				Mxalloc ~   Maddalt
(!ende_liste)


!begin_node Bindings fÅr Mfree
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Mfree ( void *block );
!item [Assembler:]
!begin_verbatim
pea       block        ; Offset 2
move.w    #73,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
!ifdest [html]
!item [GFA-Basic]
!begin_raw
<A HREF="http://www.milanstation.de/at/gfahutil/gfau7gd.htm">GFA-H-Util GEMDOS</A>
!end_raw
!endif
(!ende_liste)
!end_node
!end_node

!endif
